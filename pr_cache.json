{
  "version": 3,
  "timestamp": "2025-10-06T23:29:18.619Z",
  "prs": [
    {
      "id": "PR_kwDOAT9aAc58m0UV",
      "title": "Adding preparePasteEdits method to check if smart copy/paste should be applied",
      "url": "https://github.com/microsoft/TypeScript/pull/60053",
      "mergedAt": "2024-09-26T18:50:24Z",
      "updatedAt": "2024-09-26T18:50:24Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "8499803ae02cb657c3219aa193648968c9805851"
      },
      "author": {
        "login": "navya9singh"
      },
      "assignees": {
        "nodes": [
          {
            "login": "navya9singh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "navya9singh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "mjbvz"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sheetalkamat"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/harness/client.ts"
          },
          {
            "path": "src/harness/fourslashImpl.ts"
          },
          {
            "path": "src/harness/fourslashInterfaceImpl.ts"
          },
          {
            "path": "src/server/protocol.ts"
          },
          {
            "path": "src/server/session.ts"
          },
          {
            "path": "src/services/_namespaces/ts.preparePasteEdits.ts"
          },
          {
            "path": "src/services/_namespaces/ts.ts"
          },
          {
            "path": "src/services/preparePasteEdits.ts"
          },
          {
            "path": "src/services/refactors/moveToFile.ts"
          },
          {
            "path": "src/services/services.ts"
          },
          {
            "path": "src/services/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/cases/fourslash/fourslash.ts"
          },
          {
            "path": "tests/cases/fourslash/preparePasteEdits_multipleLocations.ts"
          },
          {
            "path": "tests/cases/fourslash/preparePasteEdits_resolvedIdentifiers.ts"
          },
          {
            "path": "tests/cases/fourslash/preparePasteEdits_resolvedTypeParameters.ts"
          },
          {
            "path": "tests/cases/fourslash/preparePasteEdits_returnFalse.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc581GOR",
      "title": "Unexport NodeTypingsInstaller in typingsInstaller.js",
      "url": "https://github.com/microsoft/TypeScript/pull/60075",
      "mergedAt": "2024-09-26T19:08:29Z",
      "updatedAt": "2024-09-26T19:08:31Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "825826fd66306201d20db806cf8438937a9960d0"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "sheetalkamat"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/typingsInstaller/nodeTypingsInstaller.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc54neE0",
      "title": "Report implict any error when widening null/undefined in presence of â€¦",
      "url": "https://github.com/microsoft/TypeScript/pull/59661",
      "mergedAt": "2024-09-26T21:06:57Z",
      "updatedAt": "2024-12-18T22:25:20Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "25ab551a123fb90ea27b877afc15d0689c5cf0a3"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/generatorReturnTypeInferenceNonStrict.errors.txt"
          },
          {
            "path": "tests/baselines/reference/generatorTypeCheck62.errors.txt"
          },
          {
            "path": "tests/baselines/reference/implicitAnyGenericTypeInference.errors.txt"
          },
          {
            "path": "tests/baselines/reference/implicitAnyGenericTypeInference.js"
          },
          {
            "path": "tests/baselines/reference/implicitAnyGenericTypeInference.symbols"
          },
          {
            "path": "tests/baselines/reference/implicitAnyGenericTypeInference.types"
          },
          {
            "path": "tests/cases/compiler/implicitAnyGenericTypeInference.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc55J_8d",
      "title": "Enable Node.js/v8 compile caching via entrypoint shims",
      "url": "https://github.com/microsoft/TypeScript/pull/59720",
      "mergedAt": "2024-09-26T21:53:31Z",
      "updatedAt": "2024-09-27T12:38:02Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "5119230083cea72066a8ec13d88f288b5be31eb1"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "anishkumar127"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "Herebyfile.mjs"
          },
          {
            "path": "scripts/produceLKG.mjs"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc51U7r3",
      "title": "Simplify statSync",
      "url": "https://github.com/microsoft/TypeScript/pull/59276",
      "mergedAt": "2024-09-26T22:28:29Z",
      "updatedAt": "2024-09-26T22:28:30Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "20746579b76b58059107f15dd9fd37920aa0ebfa"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sheetalkamat"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/sys.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc582f3f",
      "title": "Make noCheck non-internal on CompilerOptions",
      "url": "https://github.com/microsoft/TypeScript/pull/60078",
      "mergedAt": "2024-09-26T22:28:42Z",
      "updatedAt": "2024-09-26T22:28:43Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "da1fb07db09274c6435d3175249265c1b8c8d12c"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "sheetalkamat"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc57fCI1",
      "title": "Add CopilotRelated command",
      "url": "https://github.com/microsoft/TypeScript/pull/59963",
      "mergedAt": "2024-09-26T23:10:41Z",
      "updatedAt": "2024-09-27T14:08:46Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "52c59dbcbee274e523ef39e6c8be1bd5e110c2f1"
      },
      "author": {
        "login": "sandersn"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sheetalkamat"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/harness/client.ts"
          },
          {
            "path": "src/harness/fourslashImpl.ts"
          },
          {
            "path": "src/harness/fourslashInterfaceImpl.ts"
          },
          {
            "path": "src/server/protocol.ts"
          },
          {
            "path": "src/server/session.ts"
          },
          {
            "path": "src/services/services.ts"
          },
          {
            "path": "src/services/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/cases/fourslash/fourslash.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsDuplicate.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsDynamic.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsJSXFactory.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsNone.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsOne.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsOneJs.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsReexport.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsTslib.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5v44Ni",
      "title": "Introduce ES2024 target and fix some types",
      "url": "https://github.com/microsoft/TypeScript/pull/58573",
      "mergedAt": "2024-09-27T18:58:17Z",
      "updatedAt": "2024-09-27T21:32:23Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "9d98874739893b00d8a93f8890f7c8f73b1f11d1"
      },
      "author": {
        "login": "petamoriken"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "petamoriken"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "petamoriken"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "petamoriken"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "petamoriken"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/transformers/esnext.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/lib/es2016.intl.d.ts"
          },
          {
            "path": "src/lib/es2017.arraybuffer.d.ts"
          },
          {
            "path": "src/lib/es2017.d.ts"
          },
          {
            "path": "src/lib/es2017.sharedmemory.d.ts"
          },
          {
            "path": "src/lib/es2020.bigint.d.ts"
          },
          {
            "path": "src/lib/es2020.intl.d.ts"
          },
          {
            "path": "src/lib/es2020.sharedmemory.d.ts"
          },
          {
            "path": "src/lib/es2020.string.d.ts"
          },
          {
            "path": "src/lib/es2021.intl.d.ts"
          },
          {
            "path": "src/lib/es2021.weakref.d.ts"
          },
          {
            "path": "src/lib/es2022.d.ts"
          },
          {
            "path": "src/lib/es2022.error.d.ts"
          },
          {
            "path": "src/lib/es2022.intl.d.ts"
          },
          {
            "path": "src/lib/es2024.arraybuffer.d.ts"
          },
          {
            "path": "src/lib/es2024.collection.d.ts"
          },
          {
            "path": "src/lib/es2024.d.ts"
          },
          {
            "path": "src/lib/es2024.full.d.ts"
          },
          {
            "path": "src/lib/es2024.object.d.ts"
          },
          {
            "path": "src/lib/es2024.promise.d.ts"
          },
          {
            "path": "src/lib/es2024.regexp.d.ts"
          },
          {
            "path": "src/lib/es2024.sharedmemory.d.ts"
          },
          {
            "path": "src/lib/es2024.string.d.ts"
          },
          {
            "path": "src/lib/es5.d.ts"
          },
          {
            "path": "src/lib/esnext.collection.d.ts"
          },
          {
            "path": "src/lib/esnext.d.ts"
          },
          {
            "path": "src/lib/libs.json"
          },
          {
            "path": "src/server/protocol.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/callChainWithSuper(target=es2024).js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse --lib option with extra comma.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse --lib option with trailing white-space.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse empty options of --target.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse invalid option of library flags.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs array to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs array to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of target to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of target to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert trailing-whitespace string option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert trailing-whitespace string option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert tsconfig options when there are multiple invalid strings with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/es2024SharedMemory.errors.txt"
          },
          {
            "path": "tests/baselines/reference/es2024SharedMemory.symbols"
          },
          {
            "path": "tests/baselines/reference/es2024SharedMemory.types"
          },
          {
            "path": "tests/baselines/reference/mapGroupBy.symbols"
          },
          {
            "path": "tests/baselines/reference/modulePreserve2.trace.json"
          },
          {
            "path": "tests/baselines/reference/modulePreserve3.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAtTypesPriority.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/objectGroupBy.errors.txt"
          },
          {
            "path": "tests/baselines/reference/objectGroupBy.symbols"
          },
          {
            "path": "tests/baselines/reference/promiseWithResolvers.symbols"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNext.trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNextEsm.trace.json"
          },
          {
            "path": "tests/baselines/reference/regExpWithOpenBracketInCharClass(target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/regExpWithOpenBracketInCharClass(target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/regularExpressionScanning(target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/regularExpressionScanning(target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/resizableArrayBuffer.symbols"
          },
          {
            "path": "tests/baselines/reference/resizableArrayBuffer.types"
          },
          {
            "path": "tests/baselines/reference/sharedMemory.symbols"
          },
          {
            "path": "tests/baselines/reference/sharedMemory.types"
          },
          {
            "path": "tests/baselines/reference/transferableArrayBuffer.symbols"
          },
          {
            "path": "tests/baselines/reference/transferableArrayBuffer.types"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/does-not-add-color-when-NO_COLOR-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped-when-host-can't-provide-terminal-width.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true-useFsEventsOnParentDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-event-ends-with-tilde.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-occurs-when-file-is-still-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-dynamic-polling-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-watchDirectory-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-watchFile-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders-with-synchronousWatchDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-renaming-a-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-with-outDir-and-declaration-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-fallbackPolling-option.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-watchDirectory-option.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider6.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/file-rename-on-wsl2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/does-not-expose-paths.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/recursive-directory-does-not-watch-files-starting-with-dot-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-dynamic-polling-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-non-recursive-watchDirectory-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-watchFile-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/watching-npm-install-in-codespaces-where-workspaces-folder-is-hosted-at-root.js"
          },
          {
            "path": "tests/baselines/reference/typesVersions.ambientModules.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.emptyTypes.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.justIndex.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.ambient.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToSelf.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToUnmapped.trace.json"
          },
          {
            "path": "tests/baselines/reference/useSharedArrayBuffer1.types"
          },
          {
            "path": "tests/baselines/reference/useSharedArrayBuffer4.types"
          },
          {
            "path": "tests/cases/conformance/es2022/es2024SharedMemory.ts"
          },
          {
            "path": "tests/cases/conformance/es2024/resizableArrayBuffer.ts"
          },
          {
            "path": "tests/cases/conformance/es2024/sharedMemory.ts"
          },
          {
            "path": "tests/cases/conformance/es2024/transferableArrayBuffer.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc55f-Ot",
      "title": "Rewrite relative import extensions with flag",
      "url": "https://github.com/microsoft/TypeScript/pull/59767",
      "mergedAt": "2024-09-27T19:27:16Z",
      "updatedAt": "2025-03-23T12:47:52Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "bd3d70058c30253209199cc9dfeb85e72330d79b"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/factory/emitHelpers.ts"
          },
          {
            "path": "src/compiler/moduleNameResolver.ts"
          },
          {
            "path": "src/compiler/program.ts"
          },
          {
            "path": "src/compiler/transformers/module/esnextAnd2015.ts"
          },
          {
            "path": "src/compiler/transformers/module/module.ts"
          },
          {
            "path": "src/compiler/transformers/ts.ts"
          },
          {
            "path": "src/compiler/transformers/utilities.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/compiler/utilitiesPublic.ts"
          },
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/cjsErrors.errors.txt"
          },
          {
            "path": "tests/baselines/reference/cjsErrors.js"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Default initialized TSConfig/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with --help/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with --watch/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with advanced options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with boolean value compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with enum value compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with files options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with incorrect compiler option value/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with incorrect compiler option/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with list compiler options with enum value/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with list compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/showConfig/Shows tsconfig for single option/rewriteRelativeImportExtensions/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/emit(jsx=preserve).errors.txt"
          },
          {
            "path": "tests/baselines/reference/emit(jsx=preserve).js"
          },
          {
            "path": "tests/baselines/reference/emit(jsx=react).errors.txt"
          },
          {
            "path": "tests/baselines/reference/emit(jsx=react).js"
          },
          {
            "path": "tests/baselines/reference/emitModuleCommonJS(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/emitModuleCommonJS(module=commonjs).js"
          },
          {
            "path": "tests/baselines/reference/emitModuleCommonJS(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/emitModuleCommonJS(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/packageJsonImportsErrors.errors.txt"
          },
          {
            "path": "tests/baselines/reference/packageJsonImportsErrors.js"
          },
          {
            "path": "tests/baselines/reference/rewriteRelativeImportExtensionsProjectReferences1.baseline"
          },
          {
            "path": "tests/baselines/reference/rewriteRelativeImportExtensionsProjectReferences2.baseline"
          },
          {
            "path": "tests/baselines/reference/rewriteRelativeImportExtensionsProjectReferences3.baseline"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/rewriteRelativeImportExtensionsProjectReferences1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/rewriteRelativeImportExtensionsProjectReferences2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/rewriteRelativeImportExtensionsProjectReferences3.js"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/cjsErrors.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/emit.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/emitModuleCommonJS.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/nodeModulesTsFiles.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/packageJsonImportsErrors.ts"
          },
          {
            "path": "tests/cases/fourslash/server/rewriteRelativeImportExtensionsProjectReferences1.ts"
          },
          {
            "path": "tests/cases/fourslash/server/rewriteRelativeImportExtensionsProjectReferences2.ts"
          },
          {
            "path": "tests/cases/fourslash/server/rewriteRelativeImportExtensionsProjectReferences3.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc57Clvp",
      "title": "add jsx fragments to callLikeExpression",
      "url": "https://github.com/microsoft/TypeScript/pull/59933",
      "mergedAt": "2024-09-27T22:16:29Z",
      "updatedAt": "2024-09-27T22:52:25Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "f6d2e73c5afbe5f760574292402fcefc3defdf8c"
      },
      "author": {
        "login": "iisaduan"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/compiler/utilitiesPublic.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/inlineJsxAndJsxFragPragma.errors.txt"
          },
          {
            "path": "tests/baselines/reference/inlineJsxAndJsxFragPragmaOverridesCompilerOptions.errors.txt"
          },
          {
            "path": "tests/baselines/reference/inlineJsxAndJsxFragPragmaOverridesCompilerOptions.types"
          },
          {
            "path": "tests/baselines/reference/inlineJsxFactoryWithFragmentIsError.errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryAndJsxFragmentFactoryNull.errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryAndJsxFragmentFactoryNull.types"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentWrongType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentWrongType.js"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentWrongType.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentWrongType.types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImport(jsx=react-jsx).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImport(jsx=react-jsxdev).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImportPragma(jsx=react-jsx).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImportPragma(jsx=react-jsxdev).errors.txt"
          },
          {
            "path": "tests/baselines/reference/parseUnaryExpressionNoTypeAssertionInJsx2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parseUnaryExpressionNoTypeAssertionInJsx4.errors.txt"
          },
          {
            "path": "tests/cases/compiler/jsxFragmentWrongType.tsx"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc58sF3Q",
      "title": "DOM update 2024-09-25",
      "url": "https://github.com/microsoft/TypeScript/pull/60061",
      "mergedAt": "2024-09-27T22:32:19Z",
      "updatedAt": "2024-09-27T22:32:20Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2c23beae0297fe3e57868d02af8c9084b136f78c"
      },
      "author": {
        "login": "sandersn"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/dom.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.generated.d.ts"
          },
          {
            "path": "tests/baselines/reference/globalThisBlockscopedProperties.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.errors.txt"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.types"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc51adG6",
      "title": "Extract node type printer",
      "url": "https://github.com/microsoft/TypeScript/pull/59282",
      "mergedAt": "2024-09-30T16:19:42Z",
      "updatedAt": "2024-09-30T17:48:27Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "476e9ee201bd19afbc359ffe93b32a0ccd97152a"
      },
      "author": {
        "login": "dragomirtitian"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/expressionToTypeNode.ts"
          },
          {
            "path": "src/compiler/factory/utilities.ts"
          },
          {
            "path": "src/compiler/transformers/declarations.ts"
          },
          {
            "path": "src/compiler/transformers/declarations/diagnostics.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/services/codefixes/fixMissingTypeAnnotationOnExports.ts"
          },
          {
            "path": "tests/baselines/reference/arrowFunctionWithObjectLiteralBody5.types"
          },
          {
            "path": "tests/baselines/reference/arrowFunctionWithObjectLiteralBody6.types"
          },
          {
            "path": "tests/baselines/reference/circularAccessorAnnotations.types"
          },
          {
            "path": "tests/baselines/reference/circularObjectLiteralAccessors.types"
          },
          {
            "path": "tests/baselines/reference/collisionArgumentsArrowFunctions.types"
          },
          {
            "path": "tests/baselines/reference/collisionArgumentsClassMethod.types"
          },
          {
            "path": "tests/baselines/reference/collisionArgumentsFunction.types"
          },
          {
            "path": "tests/baselines/reference/collisionArgumentsFunctionExpressions.types"
          },
          {
            "path": "tests/baselines/reference/commentsOnObjectLiteral4.types"
          },
          {
            "path": "tests/baselines/reference/completionsCommitCharactersGlobal.baseline"
          },
          {
            "path": "tests/baselines/reference/controlFlowParameter.types"
          },
          {
            "path": "tests/baselines/reference/declFileObjectLiteralWithAccessors.types"
          },
          {
            "path": "tests/baselines/reference/declFileObjectLiteralWithOnlySetter.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitClassAccessorsJs1.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoNonRequiredParens.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoNonRequiredParens.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoNonRequiredParens.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitObjectLiteralAccessors1.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitObjectLiteralAccessorsJs1.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitUsingAlternativeContainingModules1.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitUsingAlternativeContainingModules2.types"
          },
          {
            "path": "tests/baselines/reference/declarationsWithRecursiveInternalTypesProduceUniqueTypeParams.types"
          },
          {
            "path": "tests/baselines/reference/divergentAccessorsTypes6.types"
          },
          {
            "path": "tests/baselines/reference/dynamicNamesErrors.types"
          },
          {
            "path": "tests/baselines/reference/emitCompoundExponentiationAssignmentWithIndexingOnLHS3.types"
          },
          {
            "path": "tests/baselines/reference/es5SetterparameterDestructuringNotElided.types"
          },
          {
            "path": "tests/baselines/reference/exportsAndImportsWithContextualKeywordNames01.types"
          },
          {
            "path": "tests/baselines/reference/generatedContextualTyping.types"
          },
          {
            "path": "tests/baselines/reference/getSetEnumerable.types"
          },
          {
            "path": "tests/baselines/reference/gettersAndSetters.types"
          },
          {
            "path": "tests/baselines/reference/gettersAndSettersTypesAgree.types"
          },
          {
            "path": "tests/baselines/reference/identityRelationNeverTypes.types"
          },
          {
            "path": "tests/baselines/reference/illegalSuperCallsInConstructor.types"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrors.errors.txt"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorsClasses.errors.txt"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorsObjects.errors.txt"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorsObjects.types"
          },
          {
            "path": "tests/baselines/reference/jsDeclarationsFunctionLikeClasses2.types"
          },
          {
            "path": "tests/baselines/reference/jsDeclarationsReusesExistingNodesMappingJSDocTypes.types"
          },
          {
            "path": "tests/baselines/reference/jsdocDisallowedInTypescript.types"
          },
          {
            "path": "tests/baselines/reference/jsdocFunctionType.types"
          },
          {
            "path": "tests/baselines/reference/jsdocFunctionTypeFalsePositive.types"
          },
          {
            "path": "tests/baselines/reference/jsdocImportTypeReferenceToCommonjsModule.types"
          },
          {
            "path": "tests/baselines/reference/jsdocImportTypeReferenceToESModule.types"
          },
          {
            "path": "tests/baselines/reference/jsdocIndexSignature.types"
          },
          {
            "path": "tests/baselines/reference/jsdocParameterParsingInfiniteLoop.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeWithAsClauseAndLateBoundProperty.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeWithAsClauseAndLateBoundProperty2.js"
          },
          {
            "path": "tests/baselines/reference/mappedTypeWithAsClauseAndLateBoundProperty2.symbols"
          },
          {
            "path": "tests/baselines/reference/mappedTypeWithAsClauseAndLateBoundProperty2.types"
          },
          {
            "path": "tests/baselines/reference/moduleExportAssignment7.types"
          },
          {
            "path": "tests/baselines/reference/noImplicitReturnsExclusions.types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitDynamicImportWithPackageExports.types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmit(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmit(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmitErrors(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmitErrors(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmitErrors1(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmitErrors1(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit6(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit6(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/objectLiteralErrors.types"
          },
          {
            "path": "tests/baselines/reference/objectLiteralGettersAndSetters.types"
          },
          {
            "path": "tests/baselines/reference/objectLiteralShorthandPropertiesErrorFromNotUsingIdentifier.types"
          },
          {
            "path": "tests/baselines/reference/objectSpreadNegative.types"
          },
          {
            "path": "tests/baselines/reference/objectSpreadSetonlyAccessor.types"
          },
          {
            "path": "tests/baselines/reference/parenthesizedArrowExpressionASI.types"
          },
          {
            "path": "tests/baselines/reference/parseImportAttributesError.js"
          },
          {
            "path": "tests/baselines/reference/promisePermutations.types"
          },
          {
            "path": "tests/baselines/reference/promisePermutations2.types"
          },
          {
            "path": "tests/baselines/reference/promisePermutations3.types"
          },
          {
            "path": "tests/baselines/reference/promiseType.types"
          },
          {
            "path": "tests/baselines/reference/promiseTypeStrictNull.types"
          },
          {
            "path": "tests/baselines/reference/super_inside-object-literal-getters-and-setters.types"
          },
          {
            "path": "tests/baselines/reference/symbolProperty18.types"
          },
          {
            "path": "tests/baselines/reference/thisTypeInAccessors.types"
          },
          {
            "path": "tests/baselines/reference/this_inside-object-literal-getters-and-setters.types"
          },
          {
            "path": "tests/baselines/reference/transpile/declarationFunctionDeclarations.d.ts"
          },
          {
            "path": "tests/baselines/reference/transpile/declarationRestParameters.d.ts"
          },
          {
            "path": "tests/baselines/reference/typeGuardsObjectMethods.types"
          },
          {
            "path": "tests/baselines/reference/typeOfThisGeneral.types"
          },
          {
            "path": "tests/baselines/reference/unusedLocalsAndParameters.types"
          },
          {
            "path": "tests/baselines/reference/unusedLocalsAndParametersDeferred.types"
          },
          {
            "path": "tests/baselines/reference/witness.types"
          },
          {
            "path": "tests/cases/compiler/declarationEmitNoNonRequiredParens.ts"
          },
          {
            "path": "tests/cases/compiler/mappedTypeWithAsClauseAndLateBoundProperty2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59C3r_",
      "title": "Bump the github-actions group across 1 directory with 4 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/60101",
      "mergedAt": "2024-09-30T16:52:36Z",
      "updatedAt": "2024-09-30T16:52:38Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "18d20f12ba04159eb5818e0e645dbbaf5fd1737b"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/accept-baselines-fix-lints.yaml"
          },
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/create-cherry-pick-pr.yml"
          },
          {
            "path": ".github/workflows/insiders.yaml"
          },
          {
            "path": ".github/workflows/lkg.yml"
          },
          {
            "path": ".github/workflows/new-release-branch.yaml"
          },
          {
            "path": ".github/workflows/nightly.yaml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          },
          {
            "path": ".github/workflows/set-version.yaml"
          },
          {
            "path": ".github/workflows/sync-branch.yaml"
          },
          {
            "path": ".github/workflows/sync-wiki.yml"
          },
          {
            "path": ".github/workflows/twoslash-repros.yaml"
          },
          {
            "path": ".github/workflows/update-package-lock.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc589Fdo",
      "title": "Update deps",
      "url": "https://github.com/microsoft/TypeScript/pull/60085",
      "mergedAt": "2024-09-30T20:31:14Z",
      "updatedAt": "2024-09-30T20:31:16Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3386e943215613c40f68ba0b108cda1ddb7faee1"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "sheetalkamat"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".dprint.jsonc"
          },
          {
            "path": "package-lock.json"
          },
          {
            "path": "package.json"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59LonM",
      "title": "Remove references to tsserverlibrary.d.ts baseline from workflows",
      "url": "https://github.com/microsoft/TypeScript/pull/60109",
      "mergedAt": "2024-10-01T00:34:08Z",
      "updatedAt": "2024-10-01T16:19:15Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "35902c2e77c1a8b2c07b769a8825e322bf85648e"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/new-release-branch.yaml"
          },
          {
            "path": ".github/workflows/pr-modified-files.yml"
          },
          {
            "path": ".github/workflows/set-version.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc587Xqs",
      "title": "Don't issue implicit any when obtaining the implied type for a binding pattern",
      "url": "https://github.com/microsoft/TypeScript/pull/60083",
      "mergedAt": "2024-10-01T04:38:53Z",
      "updatedAt": "2024-10-01T04:38:55Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ca18009b8bd5cea6a7fbcba3d7e4dd3c4633bc92"
      },
      "author": {
        "login": "ahejlsberg"
      },
      "assignees": {
        "nodes": [
          {
            "login": "ahejlsberg"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration10(strict=false).symbols"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration10(strict=false).types"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration10(strict=true).symbols"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration10(strict=true).types"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration9(strict=false).symbols"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration9(strict=false).types"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration9(strict=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration9(strict=true).symbols"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration9(strict=true).types"
          },
          {
            "path": "tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration10.ts"
          },
          {
            "path": "tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration9.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59bWLi",
      "title": "fix fragment resolving behavior with `jsx: preserve` and `jsxFragmentFactory: null`",
      "url": "https://github.com/microsoft/TypeScript/pull/60122",
      "mergedAt": "2024-10-04T18:47:59Z",
      "updatedAt": "2024-10-04T18:48:44Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b845fd2434f255ba35b0bb143a65172c8985e467"
      },
      "author": {
        "login": "iisaduan"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/inlineJsxAndJsxFragPragma.errors.txt"
          },
          {
            "path": "tests/baselines/reference/inlineJsxAndJsxFragPragmaOverridesCompilerOptions.errors.txt"
          },
          {
            "path": "tests/baselines/reference/inlineJsxAndJsxFragPragmaOverridesCompilerOptions.types"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryAndJsxFragmentFactory.types"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryAndJsxFragmentFactoryNull.errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryAndJsxFragmentFactoryNull.types"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59jN_k",
      "title": "Fix grammar issue in TS9025 diagnostic message",
      "url": "https://github.com/microsoft/TypeScript/pull/60136",
      "mergedAt": "2024-10-07T18:12:48Z",
      "updatedAt": "2024-10-07T18:12:48Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "44331b9fa32999d4aade7433c10cd3ec8596957e"
      },
      "author": {
        "login": "JoostK"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/transformers/declarations/diagnostics.ts"
          },
          {
            "path": "src/services/codefixes/fixMissingTypeAnnotationOnExports.ts"
          },
          {
            "path": "tests/baselines/reference/transpile/declarationFunctionDeclarations.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59rWQH",
      "title": "add filenames to error messages in verify file content functions in fourslash",
      "url": "https://github.com/microsoft/TypeScript/pull/60143",
      "mergedAt": "2024-10-07T19:25:32Z",
      "updatedAt": "2024-10-07T19:25:34Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "a719df49d448f1929c44ca6e3506b9149f3afbb8"
      },
      "author": {
        "login": "iisaduan"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "navya9singh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/harness/fourslashImpl.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59vTo9",
      "title": "fix automatic type acquisition",
      "url": "https://github.com/microsoft/TypeScript/pull/60157",
      "mergedAt": "2024-10-07T19:55:38Z",
      "updatedAt": "2024-10-08T17:30:11Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "20f67d791cc2101f8bfe3ddcb8c1705b090281cf"
      },
      "author": {
        "login": "epistemancering"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/typingsInstaller/nodeTypingsInstaller.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59u6up",
      "title": "fix(59825): getNavigationTree crash on invalid class merge and function merge with expando members",
      "url": "https://github.com/microsoft/TypeScript/pull/60152",
      "mergedAt": "2024-10-07T19:58:15Z",
      "updatedAt": "2024-10-07T19:58:15Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "009b3ffdda1ec62cf06b9670b2292f04cec0a146"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "iisaduan"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/navigationBar.ts"
          },
          {
            "path": "tests/cases/fourslash/navigationBarItemsClass6.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc593Rpu",
      "title": "Fix the type of `growable` on `SharedArrayBuffer`.",
      "url": "https://github.com/microsoft/TypeScript/pull/60163",
      "mergedAt": "2024-10-07T20:41:43Z",
      "updatedAt": "2024-10-07T20:41:45Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "cd6c0a0b6b8659f49344951219c74a516fdec9a2"
      },
      "author": {
        "login": "DanielRosenwasser"
      },
      "assignees": {
        "nodes": [
          {
            "login": "DanielRosenwasser"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/es2024.sharedmemory.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59vx_g",
      "title": "Bump the github-actions group with 3 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/60160",
      "mergedAt": "2024-10-08T17:46:19Z",
      "updatedAt": "2024-10-08T17:46:20Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2f436cd0338b52cd3dd127cb426bf3a2e99a869d"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59sJjW",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20241005101925367 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/60147",
      "mergedAt": "2024-10-08T17:50:08Z",
      "updatedAt": "2024-10-08T17:50:10Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2149a0f31a5bf1b1b9e9c2745efeaa74e95170b9"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-ASs-",
      "title": "Fix codecov on PRs",
      "url": "https://github.com/microsoft/TypeScript/pull/60174",
      "mergedAt": "2024-10-08T23:20:33Z",
      "updatedAt": "2024-10-08T23:20:34Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "a53c37d59aa0c20f566dec7e5498f05afe45dc6b"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "iisaduan"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59fxUO",
      "title": "Avoid confusing TS9025 error in `isolatedDeclarations`",
      "url": "https://github.com/microsoft/TypeScript/pull/60129",
      "mergedAt": "2024-10-11T22:42:29Z",
      "updatedAt": "2024-10-11T22:42:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "f53d6dda5df8c898f31ef11283e7132fa2953764"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationsAddUndefined2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationsAddUndefined2.js"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationsAddUndefined2.symbols"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationsAddUndefined2.types"
          },
          {
            "path": "tests/cases/compiler/isolatedDeclarationsAddUndefined2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-Rt5b",
      "title": "Assume that type node annotations resolving to error types can be reused",
      "url": "https://github.com/microsoft/TypeScript/pull/60195",
      "mergedAt": "2024-10-11T23:13:39Z",
      "updatedAt": "2024-10-11T23:13:39Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c003609d59db75974796cec737c98f6c8e603bd6"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/circularTypeofWithVarOrFunc.types"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorTypes1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorTypes1.js"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorTypes1.symbols"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorTypes1.types"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationsAddUndefined2.types"
          },
          {
            "path": "tests/cases/compiler/isolatedDeclarationErrorTypes1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-Zghw",
      "title": "moveToNewFile: fix quotes for module specifiers ",
      "url": "https://github.com/microsoft/TypeScript/pull/60203",
      "mergedAt": "2024-10-14T17:24:49Z",
      "updatedAt": "2024-10-14T17:24:54Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "aeb74cc721d2d38b57f9c5d49730c46aacb81224"
      },
      "author": {
        "login": "iisaduan"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/importFixes.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_inferQuoteStyle1.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_inferQuoteStyle2.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_moveNamedImport1.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_moveNamedImport2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-dx_V",
      "title": "Bump the github-actions group with 4 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/60218",
      "mergedAt": "2024-10-14T18:13:11Z",
      "updatedAt": "2024-10-14T18:13:12Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "460be92510abf07b7fb87e1d2a6649823805e195"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/accept-baselines-fix-lints.yaml"
          },
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/create-cherry-pick-pr.yml"
          },
          {
            "path": ".github/workflows/insiders.yaml"
          },
          {
            "path": ".github/workflows/lkg.yml"
          },
          {
            "path": ".github/workflows/new-release-branch.yaml"
          },
          {
            "path": ".github/workflows/nightly.yaml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          },
          {
            "path": ".github/workflows/set-version.yaml"
          },
          {
            "path": ".github/workflows/sync-branch.yaml"
          },
          {
            "path": ".github/workflows/sync-wiki.yml"
          },
          {
            "path": ".github/workflows/twoslash-repros.yaml"
          },
          {
            "path": ".github/workflows/update-package-lock.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-P-AO",
      "title": "fix(60186): Quick fix \"add missing properties\" fails with enums from other module",
      "url": "https://github.com/microsoft/TypeScript/pull/60191",
      "mergedAt": "2024-10-14T18:30:34Z",
      "updatedAt": "2024-10-14T18:30:35Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e99e6e2e87a6d7f152eb7cc491ce11da1926662b"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/fixAddMissingMember.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties32.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-lxd_",
      "title": "Fix decorator emit crash",
      "url": "https://github.com/microsoft/TypeScript/pull/60224",
      "mergedAt": "2024-10-14T21:45:23Z",
      "updatedAt": "2024-10-14T21:45:25Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "40caf3431986884b3da7a607de22ced5d364d9fc"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/transformers/esDecorators.ts"
          },
          {
            "path": "src/compiler/transformers/legacyDecorators.ts"
          },
          {
            "path": "src/compiler/transformers/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/parameterDecoratorsEmitCrash.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parameterDecoratorsEmitCrash.js"
          },
          {
            "path": "tests/cases/compiler/parameterDecoratorsEmitCrash.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc58a1Xd",
      "title": "Fixed default-like export info lookup with `export=` that have `default` export",
      "url": "https://github.com/microsoft/TypeScript/pull/60035",
      "mergedAt": "2024-10-15T16:00:55Z",
      "updatedAt": "2024-10-15T16:39:06Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d61938d8a326563ce8a2b19728ea9ff3edd7a76e"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/exportInfoMap.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportCompletionExportEqualsWithDefault1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-mt0h",
      "title": "Do not mark #imports and self-name imports as external library imports in module resolution",
      "url": "https://github.com/microsoft/TypeScript/pull/60228",
      "mergedAt": "2024-10-15T17:53:32Z",
      "updatedAt": "2024-10-15T17:53:48Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "31de163db78edc3224d28be88aed45c8bf709ca0"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/moduleNameResolver.ts"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/selfNameAndImportsEmitInclusion.js"
          },
          {
            "path": "tests/baselines/reference/selfNameModuleAugmentation.trace.json"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleResolution/shared-resolution-should-not-report-error.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleResolution/when-resolution-is-not-shared.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/package-json-is-looked-up-for-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/self-name-package-reference.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/moduleResolution/diagnostics-from-cache.js"
          },
          {
            "path": "tests/cases/compiler/selfNameAndImportsEmitInclusion.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-uBDv",
      "title": "Handle auto-import when `paths` pattern is absolute",
      "url": "https://github.com/microsoft/TypeScript/pull/60236",
      "mergedAt": "2024-10-15T21:01:13Z",
      "updatedAt": "2024-10-15T21:01:19Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3b0dfaa73cddccc868ffc3671bffd6d1660b39ae"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "iisaduan"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/moduleSpecifiers.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPathsConfigDir.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc55Rw1M",
      "title": "Allow auto accessor types to be inferred from their flow types in constructors and static blocks",
      "url": "https://github.com/microsoft/TypeScript/pull/59732",
      "mergedAt": "2024-10-16T00:52:12Z",
      "updatedAt": "2024-10-16T00:52:12Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "03c5a37cfb63cd931b3b4a719428859d3ff5e3ed"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/classAccessorInitializationInferenceWithElementAccess1.js"
          },
          {
            "path": "tests/baselines/reference/classAccessorInitializationInferenceWithElementAccess1.symbols"
          },
          {
            "path": "tests/baselines/reference/classAccessorInitializationInferenceWithElementAccess1.types"
          },
          {
            "path": "tests/baselines/reference/classAttributeInferenceTemplate.js"
          },
          {
            "path": "tests/baselines/reference/classAttributeInferenceTemplate.symbols"
          },
          {
            "path": "tests/baselines/reference/classAttributeInferenceTemplate.types"
          },
          {
            "path": "tests/baselines/reference/classAttributeInferenceTemplateJS.symbols"
          },
          {
            "path": "tests/baselines/reference/classAttributeInferenceTemplateJS.types"
          },
          {
            "path": "tests/baselines/reference/classStaticBlockUseBeforeDef4.js"
          },
          {
            "path": "tests/baselines/reference/classStaticBlockUseBeforeDef4.symbols"
          },
          {
            "path": "tests/baselines/reference/classStaticBlockUseBeforeDef4.types"
          },
          {
            "path": "tests/baselines/reference/classStaticBlockUseBeforeDef5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classStaticBlockUseBeforeDef5.js"
          },
          {
            "path": "tests/baselines/reference/classStaticBlockUseBeforeDef5.symbols"
          },
          {
            "path": "tests/baselines/reference/classStaticBlockUseBeforeDef5.types"
          },
          {
            "path": "tests/baselines/reference/controlFlowAutoAccessor1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/controlFlowAutoAccessor1.js"
          },
          {
            "path": "tests/baselines/reference/controlFlowAutoAccessor1.symbols"
          },
          {
            "path": "tests/baselines/reference/controlFlowAutoAccessor1.types"
          },
          {
            "path": "tests/baselines/reference/inlayHintsPropertyDeclarations2.baseline"
          },
          {
            "path": "tests/cases/compiler/classAccessorInitializationInferenceWithElementAccess1.ts"
          },
          {
            "path": "tests/cases/compiler/classAttributeInferenceTemplate.ts"
          },
          {
            "path": "tests/cases/compiler/classAttributeInferenceTemplateJS.ts"
          },
          {
            "path": "tests/cases/compiler/controlFlowAutoAccessor1.ts"
          },
          {
            "path": "tests/cases/conformance/classes/classStaticBlock/classStaticBlockUseBeforeDef4.ts"
          },
          {
            "path": "tests/cases/conformance/classes/classStaticBlock/classStaticBlockUseBeforeDef5.ts"
          },
          {
            "path": "tests/cases/fourslash/inlayHintsPropertyDeclarations2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-mA96",
      "title": "Fix ASI after get/set keyword",
      "url": "https://github.com/microsoft/TypeScript/pull/60225",
      "mergedAt": "2024-10-16T00:53:36Z",
      "updatedAt": "2024-10-16T00:53:37Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "bd1641f7691909450147cc38cc6f5e55b79e0545"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/parser.ts"
          },
          {
            "path": "tests/baselines/reference/canFollowGetSetKeyword.errors.txt"
          },
          {
            "path": "tests/baselines/reference/canFollowGetSetKeyword.js"
          },
          {
            "path": "tests/cases/conformance/classes/propertyMemberDeclarations/canFollowGetSetKeyword.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-vvvM",
      "title": "Fix `--showConfig` to show transitively implied options that vary from the default config",
      "url": "https://github.com/microsoft/TypeScript/pull/60240",
      "mergedAt": "2024-10-16T18:14:44Z",
      "updatedAt": "2024-10-16T18:18:16Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b8e4ed8aeb0b228f544c5736908c31f136a9f7e3"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/server/editorServices.ts"
          },
          {
            "path": "src/services/codefixes/convertConstToLet.ts"
          },
          {
            "path": "src/services/codefixes/convertToTypeOnlyExport.ts"
          },
          {
            "path": "src/services/codefixes/fixAddMissingConstraint.ts"
          },
          {
            "path": "src/services/codefixes/fixAddMissingMember.ts"
          },
          {
            "path": "src/services/codefixes/fixAwaitInSyncFunction.ts"
          },
          {
            "path": "src/services/codefixes/fixClassDoesntImplementInheritedAbstractMember.ts"
          },
          {
            "path": "src/services/codefixes/fixClassIncorrectlyImplementsInterface.ts"
          },
          {
            "path": "src/services/codefixes/fixClassSuperMustPrecedeThisAccess.ts"
          },
          {
            "path": "src/services/completions.ts"
          },
          {
            "path": "src/services/exportInfoMap.ts"
          },
          {
            "path": "src/services/findAllReferences.ts"
          },
          {
            "path": "src/services/refactors/extractType.ts"
          },
          {
            "path": "src/services/stringCompletions.ts"
          },
          {
            "path": "src/services/textChanges.ts"
          },
          {
            "path": "src/testRunner/unittests/config/showConfig.ts"
          },
          {
            "path": "tests/baselines/reference/config/showConfig/Show TSConfig with transitively implied options/tsconfig.json"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-_4oo",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20241017172255112 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/60257",
      "mergedAt": "2024-10-17T18:13:17Z",
      "updatedAt": "2024-10-17T18:13:19Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "54732f6e5895aa692309e70a18027ddc316c20df"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_A576",
      "title": "Include non-enumerable keys in __importStar helper",
      "url": "https://github.com/microsoft/TypeScript/pull/60262",
      "mergedAt": "2024-10-18T14:26:00Z",
      "updatedAt": "2024-10-18T15:16:36Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2e4f2c72db36c7473d8c1fec0911a1ad6c45dedc"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/factory/emitHelpers.ts"
          },
          {
            "path": "tests/baselines/reference/arbitraryModuleNamespaceIdentifiers_module(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/arbitraryModuleNamespaceIdentifiers_module(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/elidedJSImport2(module=commonjs).js"
          },
          {
            "path": "tests/baselines/reference/esModuleInterop.js"
          },
          {
            "path": "tests/baselines/reference/esModuleInteropDefaultImports.js"
          },
          {
            "path": "tests/baselines/reference/esModuleInteropImportCall.js"
          },
          {
            "path": "tests/baselines/reference/esModuleInteropImportNamespace.js"
          },
          {
            "path": "tests/baselines/reference/esModuleInteropNamedDefaultImports.js"
          },
          {
            "path": "tests/baselines/reference/esModuleInteropPrettyErrorRelatedInformation.js"
          },
          {
            "path": "tests/baselines/reference/esModuleInteropUsesExportStarWhenDefaultPlusNames.js"
          },
          {
            "path": "tests/baselines/reference/esModuleInteropWithExportStar.js"
          },
          {
            "path": "tests/baselines/reference/esModuleIntersectionCrash.js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace2(module=amd).js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace2(module=commonjs).js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace2(module=umd).js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace3(module=amd).js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace3(module=commonjs).js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace3(module=umd).js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace4(module=amd).js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace4(module=commonjs).js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace4(module=umd).js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace_exportAssignment.js"
          },
          {
            "path": "tests/baselines/reference/exportDefault.js"
          },
          {
            "path": "tests/baselines/reference/importEquals1.js"
          },
          {
            "path": "tests/baselines/reference/importEquals2.js"
          },
          {
            "path": "tests/baselines/reference/intersectionsAndEmptyObjects.js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node16,moduleresolution=node16).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node16,moduleresolution=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=nodenext,moduleresolution=node16).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=nodenext,moduleresolution=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeAllowJsPackageSelfName(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeAllowJsPackageSelfName(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModules1(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModules1(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJs1(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJs1(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsExclude(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsExclude(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitWithPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitWithPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionIntoExport(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionIntoExport(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionNoCycle(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionNoCycle(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsExclude(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsExclude(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesResolveJsonModule(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesResolveJsonModule(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTypesVersionPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTypesVersionPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfName(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfName(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfNameScoped(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfNameScoped(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/symlinkedWorkspaceDependenciesNoDirectLinkGeneratesDeepNonrelativeName.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/when-esModuleInterop-option-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/on-sample-project-with-nodenext.js"
          },
          {
            "path": "tests/baselines/reference/verbatimModuleSyntaxRestrictionsCJS.js"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-MsQx",
      "title": "Disallow type and interface declarations in statements with blockless bodies",
      "url": "https://github.com/microsoft/TypeScript/pull/60183",
      "mergedAt": "2024-10-18T16:24:34Z",
      "updatedAt": "2024-10-18T16:24:34Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c07da583afbfbb68930448b781832c74b3f713e6"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/typeAliasDeclarationEmit3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/typeInterfaceDeclarationsInBlockStatements1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/typeInterfaceDeclarationsInBlockStatements1.js"
          },
          {
            "path": "tests/baselines/reference/typeInterfaceDeclarationsInBlockStatements1.symbols"
          },
          {
            "path": "tests/baselines/reference/typeInterfaceDeclarationsInBlockStatements1.types"
          },
          {
            "path": "tests/cases/compiler/typeInterfaceDeclarationsInBlockStatements1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc53KFgG",
      "title": "fix(59463): Feature that displays method argument names inline does not correctly handle method overloading",
      "url": "https://github.com/microsoft/TypeScript/pull/59504",
      "mergedAt": "2024-10-18T21:44:43Z",
      "updatedAt": "2024-10-18T21:44:43Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "df9d16503f6755dd071e4c591b9d21c39d03d95e"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "MariaSolOs"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Sandra-Amina-Boss"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Sandra-Amina-Boss"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/inlayHints.ts"
          },
          {
            "path": "tests/baselines/reference/inlayHintsOverloadCall1.baseline"
          },
          {
            "path": "tests/baselines/reference/inlayHintsOverloadCall2.baseline"
          },
          {
            "path": "tests/cases/fourslash/inlayHintsOverloadCall1.ts"
          },
          {
            "path": "tests/cases/fourslash/inlayHintsOverloadCall2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_W_vF",
      "title": "Fix template string escaping",
      "url": "https://github.com/microsoft/TypeScript/pull/60303",
      "mergedAt": "2024-10-21T20:18:54Z",
      "updatedAt": "2024-10-21T20:18:55Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e6ef279403d86440600c866d53839a3e695220d3"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/testRunner/unittests/printer.ts"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.template string.js"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_Pm7J",
      "title": "Bump github/codeql-action from 3.26.12 to 3.26.13 in the github-actions group",
      "url": "https://github.com/microsoft/TypeScript/pull/60295",
      "mergedAt": "2024-10-21T20:57:54Z",
      "updatedAt": "2024-10-21T20:57:55Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d9eeeaecbb31d02ea38bdf1d29d6741d09ff8b7a"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc55eB18",
      "title": "Add a test for constraint of an infer type parameter not being fully instantiated previously",
      "url": "https://github.com/microsoft/TypeScript/pull/59760",
      "mergedAt": "2024-10-21T22:29:05Z",
      "updatedAt": "2024-10-21T22:38:16Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "aa411acab7ea3bfe40647218c2762290d4647fb3"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "tests/baselines/reference/inferTypesWithExtendsDependingOnTypeVariables.symbols"
          },
          {
            "path": "tests/baselines/reference/inferTypesWithExtendsDependingOnTypeVariables.types"
          },
          {
            "path": "tests/cases/conformance/types/conditional/inferTypesWithExtendsDependingOnTypeVariables.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_fWYm",
      "title": "Error on too many parameters for iterator method",
      "url": "https://github.com/microsoft/TypeScript/pull/60321",
      "mergedAt": "2024-10-22T20:00:58Z",
      "updatedAt": "2024-10-22T20:01:01Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e25abe34aedba53eefd379cfeb67568ca95d90c1"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/asyncIteratorExtraParameters.errors.txt"
          },
          {
            "path": "tests/baselines/reference/iteratorExtraParameters.errors.txt"
          },
          {
            "path": "tests/cases/compiler/asyncIteratorExtraParameters.ts"
          },
          {
            "path": "tests/cases/compiler/iteratorExtraParameters.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5Wlriv",
      "title": "fix(55168): Computed properties do not respect setter signatures",
      "url": "https://github.com/microsoft/TypeScript/pull/55178",
      "mergedAt": "2024-10-22T20:10:55Z",
      "updatedAt": "2024-10-22T20:10:55Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "241a6c95896924720cdf6bb75579e520fa663987"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": [
          {
            "login": "navya9singh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "tests/baselines/reference/computedPropertiesWithSetterAssignment.js"
          },
          {
            "path": "tests/baselines/reference/computedPropertiesWithSetterAssignment.symbols"
          },
          {
            "path": "tests/baselines/reference/computedPropertiesWithSetterAssignment.types"
          },
          {
            "path": "tests/cases/compiler/computedPropertiesWithSetterAssignment.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc554pZV",
      "title": "fix(59779): The semicolons: \"remove\" formatting option doesn't remove extraneous semicolons",
      "url": "https://github.com/microsoft/TypeScript/pull/59797",
      "mergedAt": "2024-10-22T22:42:28Z",
      "updatedAt": "2024-10-23T03:42:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "a62ac67b5011bd9eeb8d4b9add0de7e3bd487e9a"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/formatting/rules.ts"
          },
          {
            "path": "tests/cases/fourslash/formatRemoveSemicolons1.ts"
          },
          {
            "path": "tests/cases/fourslash/formatRemoveSemicolons4.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_XSj7",
      "title": "More rigorous ASI prevention when emitting `return`/`yield`",
      "url": "https://github.com/microsoft/TypeScript/pull/60304",
      "mergedAt": "2024-10-22T23:20:51Z",
      "updatedAt": "2024-10-22T23:20:53Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "1679f4481deb02e7858dc8824c79deda76d48fc3"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/emitter.ts"
          },
          {
            "path": "tests/baselines/reference/returnStatementNoAsiAfterTransform(target=es5).js"
          },
          {
            "path": "tests/baselines/reference/returnStatementNoAsiAfterTransform(target=esnext).js"
          },
          {
            "path": "tests/baselines/reference/yieldStatementNoAsiAfterTransform(target=es5).js"
          },
          {
            "path": "tests/baselines/reference/yieldStatementNoAsiAfterTransform(target=esnext).js"
          },
          {
            "path": "tests/cases/conformance/generators/yieldStatementNoAsiAfterTransform.ts"
          },
          {
            "path": "tests/cases/conformance/statements/returnStatements/returnStatementNoAsiAfterTransform.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_b0Rd",
      "title": "Fixed crash in auto import suggestions for `default` of exported UMD objects",
      "url": "https://github.com/microsoft/TypeScript/pull/60313",
      "mergedAt": "2024-10-23T16:22:09Z",
      "updatedAt": "2024-10-23T16:50:45Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "437d7f7d9cc80b5e1d4c0759eb9af1a7d2e9a86d"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImportDefaultExportCrash1.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImportDefaultExportCrash2.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_umdDefaultNoCrash1.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_umdDefaultNoCrash2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_kg3W",
      "title": "Fixed \"add missing properties\" codefix for positions with nullable contextual types",
      "url": "https://github.com/microsoft/TypeScript/pull/60328",
      "mergedAt": "2024-10-23T18:31:37Z",
      "updatedAt": "2024-10-23T18:59:14Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6a90111d05d725168a124ea209372e62e80eb487"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/fixAddMissingMember.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties30.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties31.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties45.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties46.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties47.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties48.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc54q5Vb",
      "title": "fix(59397): JsDoc is missing/duplicated in declarations for overloads declared in classes declared in functions",
      "url": "https://github.com/microsoft/TypeScript/pull/59675",
      "mergedAt": "2024-10-23T18:34:24Z",
      "updatedAt": "2024-10-23T18:34:24Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "db8eacd7e21a8bc945481cd235ff4cd0929e661a"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/signatureOverloadsWithComments.js"
          },
          {
            "path": "tests/baselines/reference/signatureOverloadsWithComments.symbols"
          },
          {
            "path": "tests/baselines/reference/signatureOverloadsWithComments.types"
          },
          {
            "path": "tests/cases/compiler/signatureOverloadsWithComments.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-ve8C",
      "title": "Fix prioritization of `paths` specifiers over node_modules package specifiers",
      "url": "https://github.com/microsoft/TypeScript/pull/60238",
      "mergedAt": "2024-10-23T20:22:23Z",
      "updatedAt": "2024-10-23T20:22:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2ac4cb78d6930302eb0a55d07f154a2b0597ae32"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "iisaduan"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/moduleSpecifiers.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPathsNodeModules.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6AB3YL",
      "title": "Bump the github-actions group with 4 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/60356",
      "mergedAt": "2024-10-28T18:20:02Z",
      "updatedAt": "2024-10-28T18:20:05Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6beca69fbc1c6bf45abdd401434b6e4c306c8c96"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/accept-baselines-fix-lints.yaml"
          },
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/create-cherry-pick-pr.yml"
          },
          {
            "path": ".github/workflows/insiders.yaml"
          },
          {
            "path": ".github/workflows/lkg.yml"
          },
          {
            "path": ".github/workflows/new-release-branch.yaml"
          },
          {
            "path": ".github/workflows/nightly.yaml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          },
          {
            "path": ".github/workflows/set-version.yaml"
          },
          {
            "path": ".github/workflows/sync-branch.yaml"
          },
          {
            "path": ".github/workflows/sync-wiki.yml"
          },
          {
            "path": ".github/workflows/twoslash-repros.yaml"
          },
          {
            "path": ".github/workflows/update-package-lock.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6AEWnV",
      "title": "Fixed a JSDoc-related crash when obtaining type of a type literal type argument",
      "url": "https://github.com/microsoft/TypeScript/pull/60358",
      "mergedAt": "2024-10-28T18:50:15Z",
      "updatedAt": "2024-10-28T18:53:36Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "cb44488fcec4348a448434afbf2ebcbf2b423c61"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsJSDocNoCrash3.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_0riJ",
      "title": "fix paste edits range: include all completely selected identifiers",
      "url": "https://github.com/microsoft/TypeScript/pull/60339",
      "mergedAt": "2024-10-29T21:05:32Z",
      "updatedAt": "2024-10-29T21:05:41Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "21618934bf91855e5800d94d34463f29526811cb"
      },
      "author": {
        "login": "iisaduan"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          },
          {
            "login": "navya9singh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/pasteEdits.ts"
          },
          {
            "path": "src/services/textChanges.ts"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection0.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection4.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection5.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection6.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection7.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection8.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection9.js"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection0.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection1.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection2.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection3.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection4.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection5.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection6.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection7.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection8.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection9.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Abv5I",
      "title": "Fix a crash in an anonymous buffer that copilot is writing to.",
      "url": "https://github.com/microsoft/TypeScript/pull/60377",
      "mergedAt": "2024-10-30T22:36:20Z",
      "updatedAt": "2024-10-30T22:36:21Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "da15ef2841076f40d2b278cdaedc47e45fde32ec"
      },
      "author": {
        "login": "sandersn"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "iisaduan"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/server/scriptVersionCache.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6AkHns",
      "title": "Remove unused `SymbolLinks[\"bindingElement\"]`",
      "url": "https://github.com/microsoft/TypeScript/pull/60385",
      "mergedAt": "2024-10-31T20:14:17Z",
      "updatedAt": "2024-10-31T20:14:17Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "f478257f0603945a240e4394b103743f218edde0"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5x8Di2",
      "title": "Use `canHaveFlowNode` in `checkIfExpressionRefinesParameter`",
      "url": "https://github.com/microsoft/TypeScript/pull/58816",
      "mergedAt": "2024-10-31T20:14:27Z",
      "updatedAt": "2024-10-31T20:14:27Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "a271797c1a95494e5f7aa8075c01941ad25cad08"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5pOUgk",
      "title": "Add string literal completions for `package.json` `imports` field",
      "url": "https://github.com/microsoft/TypeScript/pull/57718",
      "mergedAt": "2024-10-31T20:33:40Z",
      "updatedAt": "2024-10-31T20:33:41Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "48f2ada110a697668db7d2d1c11a382b0192d3f9"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/moduleNameResolver.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/harness/vfsUtil.ts"
          },
          {
            "path": "src/services/stringCompletions.ts"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importCompletions_importsMap1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importCompletions_importsMap2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importCompletions_importsMap3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importCompletions_importsMap4.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importCompletions_importsMap5.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard4.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard5.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard6.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard7.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard8.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard9.js"
          },
          {
            "path": "tests/cases/fourslash/completionsPaths_pathMapping_nonTrailingWildcard1.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonExportsSpecifierEndsInTs.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonExportsTrailingSlash1.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsConditions1.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsLength1.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsLength2.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern2.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_capsInPath1.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_capsInPath2.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_js.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_js_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_ts_js.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_ts_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImports_js.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImports_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard12.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsBundlerNoNodeCondition.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsCustomConditions.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsIgnoreMatchingNodeModule1.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsIgnoreMatchingNodeModule2.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsOnlyFromClosestScope1.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard1.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard10.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard11.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard12.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard2.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard3.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard4.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard5.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard6.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard7.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard8.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard9.ts"
          },
          {
            "path": "tests/cases/fourslash/server/importCompletions_importsMap1.ts"
          },
          {
            "path": "tests/cases/fourslash/server/importCompletions_importsMap2.ts"
          },
          {
            "path": "tests/cases/fourslash/server/importCompletions_importsMap3.ts"
          },
          {
            "path": "tests/cases/fourslash/server/importCompletions_importsMap4.ts"
          },
          {
            "path": "tests/cases/fourslash/server/importCompletions_importsMap5.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pathCompletionsPackageJsonImportsSrcNoDistWildcard1.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pathCompletionsPackageJsonImportsSrcNoDistWildcard2.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pathCompletionsPackageJsonImportsSrcNoDistWildcard3.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pathCompletionsPackageJsonImportsSrcNoDistWildcard4.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pathCompletionsPackageJsonImportsSrcNoDistWildcard5.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pathCompletionsPackageJsonImportsSrcNoDistWildcard6.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pathCompletionsPackageJsonImportsSrcNoDistWildcard7.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pathCompletionsPackageJsonImportsSrcNoDistWildcard8.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pathCompletionsPackageJsonImportsSrcNoDistWildcard9.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_01tW",
      "title": "Fixed crash on class member completions with auto imports from merged ambient modules",
      "url": "https://github.com/microsoft/TypeScript/pull/60340",
      "mergedAt": "2024-10-31T20:47:38Z",
      "updatedAt": "2024-10-31T20:47:38Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e4dc78ab8c82d557f1fece7ffcc717296b005a5d"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "asmtilde"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/importFixes.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportCompletionAmbientMergedModule1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5wo3SZ",
      "title": "Fixed an accidental `undefined` leak into `getAccessibleSymbolChain`'s cache key",
      "url": "https://github.com/microsoft/TypeScript/pull/58669",
      "mergedAt": "2024-10-31T22:18:27Z",
      "updatedAt": "2024-10-31T22:18:27Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "32513a7745b606dc8b33c8a4c722aaa026752283"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_sTS_",
      "title": "fix autoimports crash: generate namespace and other module symbol imports ",
      "url": "https://github.com/microsoft/TypeScript/pull/60333",
      "mergedAt": "2024-11-01T00:03:12Z",
      "updatedAt": "2024-11-01T00:03:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3e6171833e6d8481626b56a7de09ea03092fadf2"
      },
      "author": {
        "login": "iisaduan"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "navya9singh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "navya9singh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/importFixes.ts"
          },
          {
            "path": "src/services/exportInfoMap.ts"
          },
          {
            "path": "src/services/refactors/helpers.ts"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_blankTargetFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_defaultExport1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_defaultExport2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_defaultImport.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_namespaceImport.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_requireImportJsx.js"
          },
          {
            "path": "tests/cases/fourslash/moveToFile_namespaceImport.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_aliasDefaultExportNamedImport.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_namespaceExport.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_namespaceTypeImport.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_reactDefaultImport.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_reactNamespaceImport.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_blankTargetFile.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_defaultExport1.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_defaultExport2.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_defaultImport.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_namespaceImport.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_requireImportJsx.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-6kaq",
      "title": "Fix incorrect details in lib.decorators",
      "url": "https://github.com/microsoft/TypeScript/pull/60252",
      "mergedAt": "2024-11-01T19:02:04Z",
      "updatedAt": "2024-11-14T23:14:32Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "248c8f5f993882a28d54471a7fb86ac01b35da4f"
      },
      "author": {
        "login": "trusktr"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/decorators.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6AqWvc",
      "title": "Add compatible overloads that accept ArrayBuffer to BigInt64Array/BigUint64Array",
      "url": "https://github.com/microsoft/TypeScript/pull/60391",
      "mergedAt": "2024-11-01T20:47:09Z",
      "updatedAt": "2024-11-01T20:47:11Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "11b2930fa2c9f73b0ffb725a9715b8d3c4121bbc"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/es2020.bigint.d.ts"
          },
          {
            "path": "tests/baselines/reference/bigintWithLib.errors.txt"
          },
          {
            "path": "tests/cases/compiler/typedArrayConstructorOverloads.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6AJofA",
      "title": "Fixing exception on unsaved file",
      "url": "https://github.com/microsoft/TypeScript/pull/60362",
      "mergedAt": "2024-11-03T05:55:36Z",
      "updatedAt": "2024-11-03T05:55:36Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0ec4d30a6e2ebbc87292c9829378d4e98de8ef43"
      },
      "author": {
        "login": "navya9singh"
      },
      "assignees": {
        "nodes": [
          {
            "login": "navya9singh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/server/session.ts"
          },
          {
            "path": "src/testRunner/unittests/tsserver/pasteEdits.ts"
          },
          {
            "path": "tests/baselines/reference/tsserver/pasteEdits/should-not-error.js"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6AvIak",
      "title": "Fixed syntactic nullisness semantics for comma expressions",
      "url": "https://github.com/microsoft/TypeScript/pull/60402",
      "mergedAt": "2024-11-04T20:43:31Z",
      "updatedAt": "2024-12-20T09:26:03Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c09e2ab4ff1abb69d2b4a9b361dbbde43b0d5667"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.errors.txt"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.js"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.symbols"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.types"
          },
          {
            "path": "tests/cases/compiler/predicateSemantics.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6A9ogm",
      "title": "Bump version to 5.8.",
      "url": "https://github.com/microsoft/TypeScript/pull/60422",
      "mergedAt": "2024-11-05T19:41:25Z",
      "updatedAt": "2024-11-05T19:41:28Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "131f673c20e1cc440afda14f18cf0b5cf695fd4e"
      },
      "author": {
        "login": "DanielRosenwasser"
      },
      "assignees": {
        "nodes": [
          {
            "login": "DanielRosenwasser"
          },
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "package-lock.json"
          },
          {
            "path": "package.json"
          },
          {
            "path": "src/compiler/corePublic.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6A1SyO",
      "title": "Fix false positive rewriteRelativeImportExtensions error on non-TS extensions",
      "url": "https://github.com/microsoft/TypeScript/pull/60415",
      "mergedAt": "2024-11-05T20:50:18Z",
      "updatedAt": "2024-11-05T20:50:22Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "82a04b29b4f60b887c5c548f406d4dbc9462f79b"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/nonTSExtensions.js"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/nonTSExtensions.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-6gBT",
      "title": "Remove cancellationToken.js",
      "url": "https://github.com/microsoft/TypeScript/pull/60250",
      "mergedAt": "2024-11-05T22:35:02Z",
      "updatedAt": "2024-11-06T20:17:46Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "9d7e087022b170f9661d65890ae5542ecdc9bd70"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "mrazauskas"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "mrazauskas"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "Herebyfile.mjs"
          },
          {
            "path": "knip.jsonc"
          },
          {
            "path": "scripts/produceLKG.mjs"
          },
          {
            "path": "src/cancellationToken/cancellationToken.ts"
          },
          {
            "path": "src/cancellationToken/tsconfig.json"
          },
          {
            "path": "src/tsconfig.json"
          },
          {
            "path": "src/tsserver/nodeServer.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc57L614",
      "title": "Proposed expandable hover API",
      "url": "https://github.com/microsoft/TypeScript/pull/59940",
      "mergedAt": "2024-11-06T00:41:13Z",
      "updatedAt": "2025-01-27T22:55:16Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "80eeb4ec8da681f1f704f3fd7c5c3b7ab7dc5531"
      },
      "author": {
        "login": "gabritto"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/harness/client.ts"
          },
          {
            "path": "src/harness/fourslashImpl.ts"
          },
          {
            "path": "src/harness/fourslashInterfaceImpl.ts"
          },
          {
            "path": "src/server/protocol.ts"
          },
          {
            "path": "src/server/session.ts"
          },
          {
            "path": "src/services/services.ts"
          },
          {
            "path": "src/services/symbolDisplay.ts"
          },
          {
            "path": "src/services/types.ts"
          },
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosity1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosity2.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityClass1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityInterface1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityIntersection1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityObjectType1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityServer.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityTruncation.baseline"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/quickinfoVerbosityServer.js"
          },
          {
            "path": "tests/cases/fourslash/fourslash.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosity1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosity2.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityClass1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityInterface1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityIntersection1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityObjectType1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityTruncation.ts"
          },
          {
            "path": "tests/cases/fourslash/server/quickinfoVerbosityServer.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-oncW",
      "title": "fix(60223): add Promise.try() to ESNext lib",
      "url": "https://github.com/microsoft/TypeScript/pull/60232",
      "mergedAt": "2024-11-06T01:14:03Z",
      "updatedAt": "2024-12-17T15:05:25Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "60dd512a830600cbd8821ee8ece2bb544868f3ea"
      },
      "author": {
        "login": "dirkluijk"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dirkluijk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dirkluijk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "ljharb"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dirkluijk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "ljharb"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/lib/esnext.d.ts"
          },
          {
            "path": "src/lib/esnext.promise.d.ts"
          },
          {
            "path": "src/lib/libs.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/modulePreserve2.trace.json"
          },
          {
            "path": "tests/baselines/reference/modulePreserve3.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/promiseTry.js"
          },
          {
            "path": "tests/baselines/reference/promiseTry.symbols"
          },
          {
            "path": "tests/baselines/reference/promiseTry.types"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNext.trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNextEsm.trace.json"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/does-not-add-color-when-NO_COLOR-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped-when-host-can't-provide-terminal-width.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true-useFsEventsOnParentDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-event-ends-with-tilde.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-occurs-when-file-is-still-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-dynamic-polling-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-watchDirectory-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-watchFile-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders-with-synchronousWatchDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-renaming-a-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-with-outDir-and-declaration-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-fallbackPolling-option.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-watchDirectory-option.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/file-rename-on-wsl2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/recursive-directory-does-not-watch-files-starting-with-dot-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-dynamic-polling-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-non-recursive-watchDirectory-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-watchFile-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/watching-npm-install-in-codespaces-where-workspaces-folder-is-hosted-at-root.js"
          },
          {
            "path": "tests/baselines/reference/typesVersions.ambientModules.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.emptyTypes.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.justIndex.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.ambient.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToSelf.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToUnmapped.trace.json"
          },
          {
            "path": "tests/cases/compiler/promiseTry.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_ZPf1",
      "title": "Fix `getEffectiveCheckNode`",
      "url": "https://github.com/microsoft/TypeScript/pull/60309",
      "mergedAt": "2024-11-06T01:14:25Z",
      "updatedAt": "2024-11-06T01:14:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "8d95ac59681bd8a341cefa82b30441eb7f3d9a8d"
      },
      "author": {
        "login": "gabritto"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/factory/utilities.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/arrowExpressionBodyJSDoc.errors.txt"
          },
          {
            "path": "tests/baselines/reference/arrowExpressionBodyJSDoc.symbols"
          },
          {
            "path": "tests/baselines/reference/arrowExpressionBodyJSDoc.types"
          },
          {
            "path": "tests/baselines/reference/typeSatisfaction_errorLocations1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/typeSatisfaction_errorLocations1.symbols"
          },
          {
            "path": "tests/baselines/reference/typeSatisfaction_errorLocations1.types"
          },
          {
            "path": "tests/cases/compiler/arrowExpressionBodyJSDoc.ts"
          },
          {
            "path": "tests/cases/conformance/expressions/typeSatisfaction/typeSatisfaction_errorLocations1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-anDY",
      "title": "Reuse cached resolved signatures early",
      "url": "https://github.com/microsoft/TypeScript/pull/60208",
      "mergedAt": "2024-11-06T01:16:37Z",
      "updatedAt": "2024-11-06T01:16:38Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "5e2e32120b2fd5ef7a04e3414ceb120c119ec58c"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "LukeAbby"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/mixinWithBaseDependingOnSelfNoCrash1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/mixinWithBaseDependingOnSelfNoCrash1.symbols"
          },
          {
            "path": "tests/baselines/reference/mixinWithBaseDependingOnSelfNoCrash1.types"
          },
          {
            "path": "tests/cases/conformance/classes/mixinWithBaseDependingOnSelfNoCrash1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5jKv8p",
      "title": "Narrow generic conditional and indexed access return types when checking return statements",
      "url": "https://github.com/microsoft/TypeScript/pull/56941",
      "mergedAt": "2024-11-06T02:18:24Z",
      "updatedAt": "2025-05-09T17:47:46Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "30979c2651e5b0aa8ab583bbd8161cac3d0ea317"
      },
      "author": {
        "login": "gabritto"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/binder.ts"
          },
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/factory/nodeFactory.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/arrowExpressionJs.symbols"
          },
          {
            "path": "tests/baselines/reference/arrowExpressionJs.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType1.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType1.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType2.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType2.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType3.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType3.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType4.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType4.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType5.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType5.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType6.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType6.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType8.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType8.types"
          },
          {
            "path": "tests/baselines/reference/returnConditionalExpressionJSDocCast.symbols"
          },
          {
            "path": "tests/baselines/reference/returnConditionalExpressionJSDocCast.types"
          },
          {
            "path": "tests/baselines/reference/unusedLocalsInRecursiveReturn.symbols"
          },
          {
            "path": "tests/baselines/reference/unusedLocalsInRecursiveReturn.types"
          },
          {
            "path": "tests/cases/compiler/arrowExpressionJs.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType1.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType2.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType3.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType4.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType5.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType6.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType8.ts"
          },
          {
            "path": "tests/cases/compiler/returnConditionalExpressionJSDocCast.ts"
          },
          {
            "path": "tests/cases/compiler/unusedLocalsInRecursiveReturn.ts"
          },
          {
            "path": "tests/cases/fourslash/returnTypeNarrowingAfterCachingTypes.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6BGfSV",
      "title": "MetaProperty is possibly nullish",
      "url": "https://github.com/microsoft/TypeScript/pull/60440",
      "mergedAt": "2024-11-06T21:06:12Z",
      "updatedAt": "2024-11-06T21:06:15Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "55f1248a2052eebdea6bc0e2eef754df89a44bf7"
      },
      "author": {
        "login": "RyanCavanaugh"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.errors.txt"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.js"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.symbols"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.types"
          },
          {
            "path": "tests/cases/compiler/predicateSemantics.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_cjAa",
      "title": "feat(60312): Add missing properties for satisfies",
      "url": "https://github.com/microsoft/TypeScript/pull/60314",
      "mergedAt": "2024-11-08T17:48:13Z",
      "updatedAt": "2024-11-08T18:40:57Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ef802b1e4ddaf8d6e61d6005614dd796520448f8"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/fixAddMissingMember.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties33.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties34.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties35.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties36.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties37.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties38.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties39.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties40.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties41.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties42.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties43.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties44.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties_all.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-suUk",
      "title": "Extract function types from function and arrow expressions.",
      "url": "https://github.com/microsoft/TypeScript/pull/60234",
      "mergedAt": "2024-11-11T18:15:29Z",
      "updatedAt": "2024-11-11T18:15:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b58ac4abf2d58d6309274c22762e2196789476d9"
      },
      "author": {
        "login": "dragomirtitian"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/expressionToTypeNode.ts"
          },
          {
            "path": "tests/baselines/reference/arrowFunctionExpressions.types"
          },
          {
            "path": "tests/baselines/reference/capturedParametersInInitializers1.types"
          },
          {
            "path": "tests/baselines/reference/collisionSuperAndParameter.types"
          },
          {
            "path": "tests/baselines/reference/collisionThisExpressionAndNameResolution.types"
          },
          {
            "path": "tests/baselines/reference/collisionThisExpressionAndParameter.types"
          },
          {
            "path": "tests/baselines/reference/collisionThisExpressionAndPropertyNameAsConstuctorParameter.types"
          },
          {
            "path": "tests/baselines/reference/commentsFunction.js"
          },
          {
            "path": "tests/baselines/reference/contextualSignatureInstantiation2.types"
          },
          {
            "path": "tests/baselines/reference/contextualTypingOfAccessors.types"
          },
          {
            "path": "tests/baselines/reference/declFileTypeofFunction.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitArrowFunctionNoRenaming.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitBindingPatternsUnused.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitClassMemberNameConflict.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitExactOptionalPropertyTypesNodeNotReused(exactoptionalpropertytypes=false).types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitExactOptionalPropertyTypesNodeNotReused(exactoptionalpropertytypes=true).types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitResolveTypesIfNotReusable.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitTypeofRest.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationEmitTypeofRest.js"
          },
          {
            "path": "tests/baselines/reference/decoratedBlockScopedClass1.types"
          },
          {
            "path": "tests/baselines/reference/decoratedBlockScopedClass2.types"
          },
          {
            "path": "tests/baselines/reference/decoratedBlockScopedClass3.types"
          },
          {
            "path": "tests/baselines/reference/decoratorInstantiateModulesInFunctionBodies.types"
          },
          {
            "path": "tests/baselines/reference/duplicateIdentifierBindingElementInParameterDeclaration1.types"
          },
          {
            "path": "tests/baselines/reference/duplicateIdentifierBindingElementInParameterDeclaration2.types"
          },
          {
            "path": "tests/baselines/reference/emitArrowFunctionWhenUsingArguments08.types"
          },
          {
            "path": "tests/baselines/reference/emitArrowFunctionWhenUsingArguments08_ES6.types"
          },
          {
            "path": "tests/baselines/reference/emitThisInObjectLiteralGetter.types"
          },
          {
            "path": "tests/baselines/reference/esDecorators-contextualTypes.2.types"
          },
          {
            "path": "tests/baselines/reference/fatarrowfunctionsOptionalArgs.types"
          },
          {
            "path": "tests/baselines/reference/findAllRefsForFunctionExpression01.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/functionExpressionReturningItself.js"
          },
          {
            "path": "tests/baselines/reference/generatorTypeCheck39.types"
          },
          {
            "path": "tests/baselines/reference/genericCallWithObjectTypeArgs2.types"
          },
          {
            "path": "tests/baselines/reference/genericCallWithObjectTypeArgsAndConstraints4.types"
          },
          {
            "path": "tests/baselines/reference/genericCallWithObjectTypeArgsAndConstraints5.types"
          },
          {
            "path": "tests/baselines/reference/genericCallWithinOwnBodyCastTypeParameterIdentity.types"
          },
          {
            "path": "tests/baselines/reference/genericContextualTypes1.types"
          },
          {
            "path": "tests/baselines/reference/genericFunctionInference1.types"
          },
          {
            "path": "tests/baselines/reference/genericRestParameters1.types"
          },
          {
            "path": "tests/baselines/reference/genericTypeParameterEquivalence2.types"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.js"
          },
          {
            "path": "tests/baselines/reference/inferTypes1.types"
          },
          {
            "path": "tests/baselines/reference/instantiationExpressionErrorNoCrash.types"
          },
          {
            "path": "tests/baselines/reference/intersectionTypeInference1.types"
          },
          {
            "path": "tests/baselines/reference/intraExpressionInferences.types"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationsAddUndefined.types"
          },
          {
            "path": "tests/baselines/reference/jsdocSignatureOnReturnedFunction.types"
          },
          {
            "path": "tests/baselines/reference/keyofAndIndexedAccess.types"
          },
          {
            "path": "tests/baselines/reference/narrowingPastLastAssignment.types"
          },
          {
            "path": "tests/baselines/reference/nestedRecursiveLambda.types"
          },
          {
            "path": "tests/baselines/reference/parameterInitializersForwardReferencing1.types"
          },
          {
            "path": "tests/baselines/reference/parameterInitializersForwardReferencing1_es6.types"
          },
          {
            "path": "tests/baselines/reference/parameterReferenceInInitializer2.types"
          },
          {
            "path": "tests/baselines/reference/parseErrorIncorrectReturnToken.types"
          },
          {
            "path": "tests/baselines/reference/reactReduxLikeDeferredInferenceAllowsAssignment.types"
          },
          {
            "path": "tests/baselines/reference/returnStatement1.types"
          },
          {
            "path": "tests/baselines/reference/reverseMappedTypeIntersectionConstraint.types"
          },
          {
            "path": "tests/baselines/reference/reverseMappedTypeLimitedConstraint.types"
          },
          {
            "path": "tests/baselines/reference/spreadParameterTupleType.js"
          },
          {
            "path": "tests/baselines/reference/spreadParameterTupleType.symbols"
          },
          {
            "path": "tests/baselines/reference/spreadParameterTupleType.types"
          },
          {
            "path": "tests/baselines/reference/subtypingWithCallSignatures2.types"
          },
          {
            "path": "tests/baselines/reference/subtypingWithCallSignatures3.types"
          },
          {
            "path": "tests/baselines/reference/taggedTemplateStringsWithCurriedFunction.types"
          },
          {
            "path": "tests/baselines/reference/templateLiteralTypes1.types"
          },
          {
            "path": "tests/baselines/reference/thisExpressionInIndexExpression.types"
          },
          {
            "path": "tests/baselines/reference/thisTypeInClasses.types"
          },
          {
            "path": "tests/baselines/reference/trackedSymbolsNoCrash.types"
          },
          {
            "path": "tests/baselines/reference/transpile/declarationRestParameters.d.ts"
          },
          {
            "path": "tests/baselines/reference/typeParameterConstModifiers.types"
          },
          {
            "path": "tests/baselines/reference/typePredicateFreshLiteralWidening.types"
          },
          {
            "path": "tests/baselines/reference/unusedParametersInLambda1.types"
          },
          {
            "path": "tests/baselines/reference/unusedParametersInLambda2.types"
          },
          {
            "path": "tests/baselines/reference/variadicTuples1.js"
          },
          {
            "path": "tests/baselines/reference/variadicTuples1.types"
          },
          {
            "path": "tests/cases/compiler/spreadParameterTupleType.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Brz1f",
      "title": "Stub out copilotRelated command",
      "url": "https://github.com/microsoft/TypeScript/pull/60488",
      "mergedAt": "2024-11-13T16:33:01Z",
      "updatedAt": "2024-11-13T20:17:54Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "79ea5a5b358c41aac32866737deb7e17c73005a0"
      },
      "author": {
        "login": "sandersn"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/harness/client.ts"
          },
          {
            "path": "src/harness/fourslashImpl.ts"
          },
          {
            "path": "src/harness/fourslashInterfaceImpl.ts"
          },
          {
            "path": "src/server/protocol.ts"
          },
          {
            "path": "src/server/session.ts"
          },
          {
            "path": "src/services/services.ts"
          },
          {
            "path": "src/services/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/cases/fourslash/fourslash.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsDuplicate.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsDynamic.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsJSXFactory.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsNone.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsOne.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsOneJs.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsReexport.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsTslib.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_CVji",
      "title": "Let isolated declarations fixer add toplevel imports more",
      "url": "https://github.com/microsoft/TypeScript/pull/60267",
      "mergedAt": "2024-11-13T17:04:51Z",
      "updatedAt": "2024-11-13T18:49:40Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c043944b1434daa67b66573c66850d51c0a16944"
      },
      "author": {
        "login": "benjaminjkraft"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/helpers.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixMissingTypeAnnotationOnExports56-toplevel-import.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6BOtIk",
      "title": "Move to file: fix detection of references to globals that shouldn't be moved",
      "url": "https://github.com/microsoft/TypeScript/pull/60450",
      "mergedAt": "2024-11-15T22:21:39Z",
      "updatedAt": "2024-11-15T22:23:45Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b3c67d32020a3015fe068fbcb1dcfb18aedcaad3"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          },
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "iisaduan"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/refactors/moveToFile.ts"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_globalAndLocal1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_globalAndLocal2.js"
          },
          {
            "path": "tests/cases/fourslash/codeFixClassImplementInterfaceGlobal.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_globalAndLocal1.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_globalAndLocal2.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_globalAndLocal3.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_globalAndLocal4.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_globalAndLocal5.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_globalAndLocal6.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_importNameLikeGlobal1.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_globalAndLocal1.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_globalAndLocal2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6CDvfK",
      "title": "fix(60505): Convert to namespace import refactoring should drop file extensions on namespace name",
      "url": "https://github.com/microsoft/TypeScript/pull/60510",
      "mergedAt": "2024-11-20T03:42:17Z",
      "updatedAt": "2024-11-20T03:42:17Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d6b7c41fbcd9e2d72ea9d653b41e059d08c9c6cb"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "tests/cases/fourslash/refactorConvertImport_namedToNamespace11.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6BsKZY",
      "title": "fix(60484): Implementing a prim type in a class expression should report error",
      "url": "https://github.com/microsoft/TypeScript/pull/60490",
      "mergedAt": "2024-11-20T03:45:22Z",
      "updatedAt": "2024-11-20T03:45:22Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d85767abfd83880cea17cea70f9913e9c4496dcc"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/classExtendingPrimitive.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classExtendingPrimitive.js"
          },
          {
            "path": "tests/baselines/reference/classExtendingPrimitive.symbols"
          },
          {
            "path": "tests/baselines/reference/classExtendingPrimitive.types"
          },
          {
            "path": "tests/baselines/reference/classImplementsPrimitive.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classImplementsPrimitive.js"
          },
          {
            "path": "tests/baselines/reference/classImplementsPrimitive.symbols"
          },
          {
            "path": "tests/baselines/reference/classImplementsPrimitive.types"
          },
          {
            "path": "tests/cases/compiler/classImplementsPrimitive.ts"
          },
          {
            "path": "tests/cases/conformance/classes/classDeclarations/classHeritageSpecification/classExtendingPrimitive.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6C9P7w",
      "title": "Bump the github-actions group across 1 directory with 2 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/60581",
      "mergedAt": "2024-11-25T19:40:24Z",
      "updatedAt": "2024-11-25T19:40:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ee0e08bd96bdde7450337afe141e53018cfc89e4"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6DPVom",
      "title": "fix missing react error with fragments in `react-native`",
      "url": "https://github.com/microsoft/TypeScript/pull/60615",
      "mergedAt": "2024-11-26T21:24:45Z",
      "updatedAt": "2024-11-27T01:17:48Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "96410eb65516fd681f75ea595a68fe0ea908dfe2"
      },
      "author": {
        "login": "iisaduan"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/jsxFragReactReferenceErrors(jsx=preserve).js"
          },
          {
            "path": "tests/baselines/reference/jsxFragReactReferenceErrors(jsx=preserve).symbols"
          },
          {
            "path": "tests/baselines/reference/jsxFragReactReferenceErrors(jsx=preserve).types"
          },
          {
            "path": "tests/baselines/reference/jsxFragReactReferenceErrors(jsx=react-native).js"
          },
          {
            "path": "tests/baselines/reference/jsxFragReactReferenceErrors(jsx=react-native).symbols"
          },
          {
            "path": "tests/baselines/reference/jsxFragReactReferenceErrors(jsx=react-native).types"
          },
          {
            "path": "tests/cases/compiler/jsxFragReactReferenceErrors.tsx"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6DPZ7V",
      "title": "Fixed syntactic nullisness semantics for tagged template expressions",
      "url": "https://github.com/microsoft/TypeScript/pull/60616",
      "mergedAt": "2024-11-26T23:17:29Z",
      "updatedAt": "2024-12-16T19:43:56Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "9fe6c3661cd89952d9556ecb14ef366b44076064"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.errors.txt"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.js"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.symbols"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.types"
          },
          {
            "path": "tests/cases/compiler/predicateSemantics.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6BzaS5",
      "title": "Improve the definition of atan2()",
      "url": "https://github.com/microsoft/TypeScript/pull/60493",
      "mergedAt": "2024-11-27T23:12:21Z",
      "updatedAt": "2024-11-27T23:12:21Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b263cc4b2ef12ae013526a3d8808b6716146586a"
      },
      "author": {
        "login": "Psychpsyo"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "j4k0xb"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Psychpsyo"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/es5.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6A1zAX",
      "title": "Allow assignments to readonly class properties within IIFEs contained in constructors",
      "url": "https://github.com/microsoft/TypeScript/pull/60416",
      "mergedAt": "2024-12-02T19:15:47Z",
      "updatedAt": "2024-12-02T19:15:47Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "97177722b8facb30c3f27e124931257ae80b863d"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/readonlyMembers.errors.txt"
          },
          {
            "path": "tests/baselines/reference/readonlyMembers.js"
          },
          {
            "path": "tests/baselines/reference/readonlyMembers.symbols"
          },
          {
            "path": "tests/baselines/reference/readonlyMembers.types"
          },
          {
            "path": "tests/cases/compiler/readonlyMembers.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6DoHHI",
      "title": "Check if switch statements are exhaustive when their expressions is generic with a literal type constraint",
      "url": "https://github.com/microsoft/TypeScript/pull/60644",
      "mergedAt": "2024-12-02T20:12:59Z",
      "updatedAt": "2024-12-02T20:12:59Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "14c65b311959501b6720ff48b9cb02eecbcee4a7"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType9.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType9.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType9.types"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType9.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6DQP36",
      "title": "Fix library inclusions for ES2024 target",
      "url": "https://github.com/microsoft/TypeScript/pull/60622",
      "mergedAt": "2024-12-03T22:19:58Z",
      "updatedAt": "2024-12-04T20:16:51Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6f75783184328087627da983fe30a05fca4f6314"
      },
      "author": {
        "login": "billyjanitsch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "petamoriken"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "petamoriken"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/transformers/esnext.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/compiler/utilitiesPublic.ts"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true-useFsEventsOnParentDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-event-ends-with-tilde.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-occurs-when-file-is-still-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-dynamic-polling-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-watchDirectory-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-watchFile-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders-with-synchronousWatchDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-renaming-a-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-with-outDir-and-declaration-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-fallbackPolling-option.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-watchDirectory-option.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/file-rename-on-wsl2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/recursive-directory-does-not-watch-files-starting-with-dot-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-dynamic-polling-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-non-recursive-watchDirectory-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-watchFile-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/watching-npm-install-in-codespaces-where-workspaces-folder-is-hosted-at-root.js"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6D9A2H",
      "title": "Do not require import attributes for JSON imports in `--module node16`",
      "url": "https://github.com/microsoft/TypeScript/pull/60673",
      "mergedAt": "2024-12-04T16:47:16Z",
      "updatedAt": "2024-12-04T16:47:21Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "9bf5aa7fe234d58b1fa4b435f9a0b9dcd16fe216"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node16).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node16).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=nodenext).types"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesJson.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6D0m5a",
      "title": "Fix flow node improper reuse",
      "url": "https://github.com/microsoft/TypeScript/pull/60662",
      "mergedAt": "2024-12-04T17:13:13Z",
      "updatedAt": "2024-12-04T17:13:15Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6b1ea96b9404ccfc8e66e22fa2a7b645781255c3"
      },
      "author": {
        "login": "gabritto"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/binder.ts"
          },
          {
            "path": "tests/cases/fourslash/unreachableStatementNodeReuse.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6C8h-L",
      "title": "Avoid incorrectly reusing assertion nodes from property assignments",
      "url": "https://github.com/microsoft/TypeScript/pull/60576",
      "mergedAt": "2024-12-04T20:04:14Z",
      "updatedAt": "2024-12-04T20:06:09Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "676d32994813badf283a0b1601665c901dd697f2"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/expressionToTypeNode.ts"
          },
          {
            "path": "tests/baselines/reference/declarationAssertionNodeNotReusedWhenTypeNotEquivalent1.js"
          },
          {
            "path": "tests/baselines/reference/declarationAssertionNodeNotReusedWhenTypeNotEquivalent1.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationAssertionNodeNotReusedWhenTypeNotEquivalent1.types"
          },
          {
            "path": "tests/cases/compiler/declarationAssertionNodeNotReusedWhenTypeNotEquivalent1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickInfoAssertionNodeNotReusedWhenTypeNotEquivalent1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EF270",
      "title": "Mark the inherited any-based index signature so it can be elided in declaration emit",
      "url": "https://github.com/microsoft/TypeScript/pull/60680",
      "mergedAt": "2024-12-04T21:21:16Z",
      "updatedAt": "2024-12-16T19:36:12Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "42f893ff75e0bcf73eb936d3e986bd7c3358cb8c"
      },
      "author": {
        "login": "weswigham"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/declarationEmitClassInherritsAny.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitClassInherritsAny.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitClassInherritsAny.types"
          },
          {
            "path": "tests/cases/compiler/declarationEmitClassInherritsAny.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc56cDr1",
      "title": "Include type-meaning 'extends' clause in auto-import fix list",
      "url": "https://github.com/microsoft/TypeScript/pull/59853",
      "mergedAt": "2024-12-04T21:22:26Z",
      "updatedAt": "2024-12-04T21:22:30Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "410513462673bad5696dad89b7103f31681ca1c6"
      },
      "author": {
        "login": "RyanCavanaugh"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/importFixes.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFix_all.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EGHIk",
      "title": "Cache started nonexistent property error checks to prevent reentrancy in the check",
      "url": "https://github.com/microsoft/TypeScript/pull/60683",
      "mergedAt": "2024-12-04T23:13:20Z",
      "updatedAt": "2024-12-05T20:57:57Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "517da72a57c878e5d4fbd260e7f1f8b019efbb27"
      },
      "author": {
        "login": "weswigham"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/checkingObjectWithThisInNamePositionNoCrash.errors.txt"
          },
          {
            "path": "tests/baselines/reference/checkingObjectWithThisInNamePositionNoCrash.js"
          },
          {
            "path": "tests/baselines/reference/checkingObjectWithThisInNamePositionNoCrash.symbols"
          },
          {
            "path": "tests/baselines/reference/checkingObjectWithThisInNamePositionNoCrash.types"
          },
          {
            "path": "tests/cases/compiler/checkingObjectWithThisInNamePositionNoCrash.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EGPgD",
      "title": "Lookup non-local element factory for reference marking when marking fragment references",
      "url": "https://github.com/microsoft/TypeScript/pull/60684",
      "mergedAt": "2024-12-05T00:44:24Z",
      "updatedAt": "2024-12-05T00:44:24Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "12d96878bc51df4b1707b6f92f5094f51513a16d"
      },
      "author": {
        "login": "weswigham"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "iisaduan"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentAndFactoryUsedOnFragmentUse.js"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentAndFactoryUsedOnFragmentUse.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentAndFactoryUsedOnFragmentUse.types"
          },
          {
            "path": "tests/cases/compiler/jsxFragmentAndFactoryUsedOnFragmentUse.tsx"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EKGTR",
      "title": "Add extra test cases for fixed `reportNonexistentProperty` crashes",
      "url": "https://github.com/microsoft/TypeScript/pull/60690",
      "mergedAt": "2024-12-05T17:21:09Z",
      "updatedAt": "2024-12-05T18:47:46Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "9ef98be5175bf8ee25c33ad1117ff13cf3877135"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "tests/baselines/reference/checkingObjectDefinePropertyOnFunctionNonexistentPropertyNoCrash1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/checkingObjectDefinePropertyOnFunctionNonexistentPropertyNoCrash1.js"
          },
          {
            "path": "tests/baselines/reference/checkingObjectDefinePropertyOnFunctionNonexistentPropertyNoCrash1.symbols"
          },
          {
            "path": "tests/baselines/reference/checkingObjectDefinePropertyOnFunctionNonexistentPropertyNoCrash1.types"
          },
          {
            "path": "tests/baselines/reference/findAllRefsNonexistentPropertyNoCrash1.baseline.jsonc"
          },
          {
            "path": "tests/cases/compiler/checkingObjectDefinePropertyOnFunctionNonexistentPropertyNoCrash1.ts"
          },
          {
            "path": "tests/cases/fourslash/findAllRefsNonexistentPropertyNoCrash1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Cb7iJ",
      "title": "Switch coverage image from ubuntu-22.04 to mariner-2.0",
      "url": "https://github.com/microsoft/TypeScript/pull/60541",
      "mergedAt": "2024-12-05T23:16:53Z",
      "updatedAt": "2024-12-05T23:17:25Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "edd278a10415476afb90f3f0523e132805626e52"
      },
      "author": {
        "login": "HannahOshlag"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EKXNc",
      "title": "Error on `override` used on dynamically named class members",
      "url": "https://github.com/microsoft/TypeScript/pull/60691",
      "mergedAt": "2024-12-06T19:05:25Z",
      "updatedAt": "2024-12-06T19:05:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "239a2a936f30de0172d1700695c8f746e9009255"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=false).errors.txt"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=false).js"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=false).symbols"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=false).types"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=true).js"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=true).symbols"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=true).types"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=false).errors.txt"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=false).js"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=false).symbols"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=false).types"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=true).js"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=true).symbols"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=true).types"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableName1(noimplicitoverride=false).errors.txt"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableName1(noimplicitoverride=false).js"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableName1(noimplicitoverride=false).symbols"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableName1(noimplicitoverride=false).types"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableName1(noimplicitoverride=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableName1(noimplicitoverride=true).js"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableName1(noimplicitoverride=true).symbols"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableName1(noimplicitoverride=true).types"
          },
          {
            "path": "tests/cases/conformance/override/overrideDynamicName1.ts"
          },
          {
            "path": "tests/cases/conformance/override/overrideLateBindableIndexSignature1.ts"
          },
          {
            "path": "tests/cases/conformance/override/overrideLateBindableName1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EPkv8",
      "title": "Fix incorrect usage of package.json `types`/`main` in package subdirectories",
      "url": "https://github.com/microsoft/TypeScript/pull/60696",
      "mergedAt": "2024-12-06T21:47:41Z",
      "updatedAt": "2025-01-03T21:00:27Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "421f5c5458d09dad601604e6eff8765283aef14e"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/moduleNameResolver.ts"
          },
          {
            "path": "tests/baselines/reference/moduleResolution_packageJson_yesAtPackageRoot.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolution_packageJson_yesAtPackageRoot_fakeScopedPackage.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.ambientModules.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.ambient.trace.json"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EG-RY",
      "title": "Remove reference not found errors from `jsx: preserve`",
      "url": "https://github.com/microsoft/TypeScript/pull/60687",
      "mergedAt": "2024-12-09T18:38:37Z",
      "updatedAt": "2024-12-10T05:03:45Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3d2b8f33d4ff86ec351ba93a557d37720962c921"
      },
      "author": {
        "login": "iisaduan"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentFactoryReference(jsx=react).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentFactoryReference(jsx=react-jsx).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentFactoryReference(jsx=react-jsxdev).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImport(jsx=react-jsx).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImport(jsx=react-jsxdev).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImportPragma(jsx=react-jsx).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImportPragma(jsx=react-jsxdev).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxRuntimePragma(jsx=preserve).js"
          },
          {
            "path": "tests/baselines/reference/jsxRuntimePragma(jsx=preserve).symbols"
          },
          {
            "path": "tests/baselines/reference/jsxRuntimePragma(jsx=preserve).types"
          },
          {
            "path": "tests/baselines/reference/parseUnaryExpressionNoTypeAssertionInJsx2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parseUnaryExpressionNoTypeAssertionInJsx4.errors.txt"
          },
          {
            "path": "tests/cases/compiler/jsxFragmentFactoryReference.tsx"
          },
          {
            "path": "tests/cases/compiler/jsxRuntimePragma.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EdwGZ",
      "title": "Bump the github-actions group with 3 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/60713",
      "mergedAt": "2024-12-11T09:20:52Z",
      "updatedAt": "2024-12-11T09:20:55Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6a00bd2422ffa46c13ac8ff81d7b4b1157e60ba7"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FDHwj",
      "title": "Do not require import attribute on type-only JSON import",
      "url": "https://github.com/microsoft/TypeScript/pull/60749",
      "mergedAt": "2024-12-12T19:42:25Z",
      "updatedAt": "2024-12-12T19:42:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "44e84bb7b0ced9bc703b05e317893f594bfcb920"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node16).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node16).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=nodenext).types"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesJson.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FEbp0",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20241212204530251 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/60752",
      "mergedAt": "2024-12-12T21:21:18Z",
      "updatedAt": "2024-12-12T21:21:20Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "4a18b5cf8d41975c86cde25a0b2229f81e3b08d2"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EmU8B",
      "title": "Add `--module node18`",
      "url": "https://github.com/microsoft/TypeScript/pull/60722",
      "mergedAt": "2024-12-13T18:16:23Z",
      "updatedAt": "2024-12-13T18:16:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "f69580f82146bebfb2bee8c7b8666af0e04c7e34"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/program.ts"
          },
          {
            "path": "src/compiler/transformer.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/server/protocol.ts"
          },
          {
            "path": "src/services/codefixes/fixModuleAndTargetOptions.ts"
          },
          {
            "path": "src/services/codefixes/importFixes.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/arbitraryModuleNamespaceIdentifiers_module(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/arbitraryModuleNamespaceIdentifiers_module(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/arbitraryModuleNamespaceIdentifiers_module(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/arbitraryModuleNamespaceIdentifiers_module(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/awaitInNonAsyncFunction.errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.1(target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.1(target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.2(target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.2(target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.3(target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.3(target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarationsInForAwaitOf.3(target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse empty options of --module.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of module to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of module to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/emitHelpersWithLocalCollisions(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/emitHelpersWithLocalCollisions(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/importAssertion1(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAssertion1(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAssertion2(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAssertion2(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAssertion3(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes1(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes1(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes2(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes2(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes3(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importCallExpressionErrorInES2015.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importCallExpressionGrammarError.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importCallExpressionNestedES2015.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importCallExpressionNestedES20152.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importMeta(module=commonjs,target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importMeta(module=commonjs,target=esnext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importTag14.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importTag15(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleNodeDefaultImports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleNodeDefaultImports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/moduleNodeDefaultImports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleNodeDefaultImports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/modulePreserveTopLevelAwait1(target=es2016).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node18,moduleresolution=node16).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node18,moduleresolution=node16).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node18,moduleresolution=node16).types"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node18,moduleresolution=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node18,moduleresolution=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node18,moduleresolution=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/nodeAllowJsPackageSelfName(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeAllowJsPackageSelfName(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeAllowJsPackageSelfName(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeAllowJsPackageSelfName(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModules1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModules1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModules1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModules1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJs1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJs1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJs1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJs1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsCjsFromJs(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsCjsFromJs(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsDynamicImport(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsDynamicImport(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsDynamicImport(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportAssignment(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportAssignment(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportAssignment(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportAssignment(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportlessJsModuleDetectionAuto(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportlessJsModuleDetectionAuto(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportlessJsModuleDetectionAuto(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsGeneratedNameCollisions(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsGeneratedNameCollisions(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsGeneratedNameCollisions(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsGeneratedNameCollisions(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportAssignment(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportAssignment(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportAssignment(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportAssignment(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions2(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions2(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions2(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions2(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions3(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions3(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions3(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions3(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportMeta(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportMeta(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportMeta(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportMeta(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsExclude(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsExclude(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsExclude(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsExclude(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsSynchronousCallErrors(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsSynchronousCallErrors(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsSynchronousCallErrors(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsSynchronousCallErrors(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsTopLevelAwait(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsTopLevelAwait(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsTopLevelAwait(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsTopLevelAwait(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCjsFormatFileAlwaysHasDefault(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCjsFormatFileAlwaysHasDefault(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCjsFormatFileAlwaysHasDefault(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitWithPackageExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitWithPackageExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitWithPackageExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitWithPackageExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDynamicImport(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDynamicImport(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDynamicImport(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportAssignments(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportAssignments(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportAssignments(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportAssignments(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksSpecifierResolution(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksSpecifierResolution(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksSpecifierResolution(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksSpecifierResolution(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node18).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSourceTs(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSourceTs(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSourceTs(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSourceTs(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationConditions(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationConditions(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationConditions(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationConditions(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationDirectory(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationDirectory(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationDirectory(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationDirectory(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationPattern(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationPattern(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationPattern(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationPattern(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesForbidenSyntax(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesForbidenSyntax(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesForbidenSyntax(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesForbidenSyntax(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesGeneratedNameCollisions(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesGeneratedNameCollisions(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesGeneratedNameCollisions(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesGeneratedNameCollisions(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssignments(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssignments(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssignments(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributes(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributes(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributes(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributes(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributes(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit1(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit2(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit2(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit2(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit2(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit2(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmitErrors(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmitErrors(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmitErrors(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmitErrors(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmitErrors(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmit(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmit(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmit(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmitErrors(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmitErrors(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmitErrors(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmitErrors(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions2(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions2(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions2(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions2(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions3(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions3(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions3(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions3(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportMeta(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportMeta(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportMeta(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportMeta(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionIntoExport(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionIntoExport(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionIntoExport(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionNoCycle(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionNoCycle(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionNoCycle(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionNoCycle(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmit1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmit1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmit1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmitErrors1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmitErrors1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmitErrors1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmitErrors1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node18).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsExclude(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsExclude(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsExclude(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsExclude(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node18).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesResolveJsonModule(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesResolveJsonModule(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesResolveJsonModule(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesResolveJsonModule(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesSynchronousCallErrors(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesSynchronousCallErrors(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesSynchronousCallErrors(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesSynchronousCallErrors(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTopLevelAwait(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTopLevelAwait(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTopLevelAwait(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTopLevelAwait(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit2(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit2(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit2(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit3(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit3(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit3(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit4(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit4(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit4(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit5(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit5(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit5(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit6(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit6(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit6(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit7(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit7(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit7(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride2(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride2(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride2(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride2(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride3(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride3(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride3(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride3(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride4(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride4(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride4(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride4(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride5(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride5(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride5(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverrideModeError(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverrideModeError(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverrideModeError(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverrideModeError(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTypesVersionPackageExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTypesVersionPackageExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTypesVersionPackageExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfName(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfName(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfName(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfName(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfNameScoped(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfNameScoped(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfNameScoped(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfNameScoped(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/parser.forAwait.es2018.errors.txt"
          },
          {
            "path": "tests/baselines/reference/topLevelAwait.1(module=es2022,target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/topLevelAwait.1(module=esnext,target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/topLevelAwait.1(module=system,target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options module-kind is out-of-range.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options module-kind is out-of-range.js"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options module-kind is out-of-range.oldTranspile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options module-kind is out-of-range.oldTranspile.js"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options target-script is out-of-range.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options target-script is out-of-range.js"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options target-script is out-of-range.oldTranspile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options target-script is out-of-range.oldTranspile.js"
          },
          {
            "path": "tests/baselines/reference/tripleSlashTypesReferenceWithMissingExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/tripleSlashTypesReferenceWithMissingExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/tripleSlashTypesReferenceWithMissingExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/tripleSlashTypesReferenceWithMissingExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/does-not-add-color-when-NO_COLOR-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped-when-host-can't-provide-terminal-width.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped.js"
          },
          {
            "path": "tests/cases/compiler/moduleNodeDefaultImports.ts"
          },
          {
            "path": "tests/cases/compiler/moduleResolutionWithModule.ts"
          },
          {
            "path": "tests/cases/compiler/tripleSlashTypesReferenceWithMissingExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeAllowJsPackageSelfName.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJs1.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsCjsFromJs.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsConditionalPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsDynamicImport.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsExportAssignment.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsExportlessJsModuleDetectionAuto.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsGeneratedNameCollisions.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsImportAssignment.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsImportHelpersCollisions1.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsImportHelpersCollisions2.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsImportHelpersCollisions3.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsImportMeta.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsPackageImports.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsPackagePatternExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsPackagePatternExportsExclude.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsPackagePatternExportsTrailers.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsSynchronousCallErrors.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsTopLevelAwait.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModules1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesCjsFormatFileAlwaysHasDefault.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesConditionalPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesDeclarationEmitWithPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesDynamicImport.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportAssignments.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsBlocksSpecifierResolution.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsBlocksTypesVersions.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsSourceTs.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsSpecifierGenerationConditions.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsSpecifierGenerationDirectory.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsSpecifierGenerationPattern.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesForbidenSyntax.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesGeneratedNameCollisions.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAssertions.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAssignments.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAttributes.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAttributesModeDeclarationEmit1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAttributesModeDeclarationEmit2.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAttributesModeDeclarationEmitErrors.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAttributesTypeModeDeclarationEmit.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAttributesTypeModeDeclarationEmitErrors.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportHelpersCollisions.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportHelpersCollisions2.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportHelpersCollisions3.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportMeta.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportModeDeclarationEmit1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportModeDeclarationEmit2.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportModeDeclarationEmitErrors1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportResolutionIntoExport.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportResolutionNoCycle.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportTypeModeDeclarationEmit1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportTypeModeDeclarationEmitErrors1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesJson.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesPackageImports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesPackagePatternExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesPackagePatternExportsExclude.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesPackagePatternExportsTrailers.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesResolveJsonModule.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesSynchronousCallErrors.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTopLevelAwait.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit2.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit3.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit4.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit5.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit6.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit7.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeOverride1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeOverride2.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeOverride3.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeOverride4.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeOverride5.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeOverrideModeError.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTypesVersionPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodePackageSelfName.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodePackageSelfNameScoped.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Famdu",
      "title": "Point TypeScript-Twoslash-Repro-Action back to main branch",
      "url": "https://github.com/microsoft/TypeScript/pull/60779",
      "mergedAt": "2024-12-16T22:57:14Z",
      "updatedAt": "2024-12-16T22:57:17Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ed1f2ccfa86f1439ed87d2a93a700cc2eb1c93ee"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/twoslash-repros.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Fatz4",
      "title": "Use macos-latest in CI",
      "url": "https://github.com/microsoft/TypeScript/pull/60780",
      "mergedAt": "2024-12-16T22:57:33Z",
      "updatedAt": "2024-12-16T22:57:33Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ac2cfccd64d5f4a860b7c24335679da9c04bf525"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FiqgZ",
      "title": "Harden `sanitizeLog` against incorrect matches on TypeScript versions.",
      "url": "https://github.com/microsoft/TypeScript/pull/60794",
      "mergedAt": "2024-12-17T20:56:21Z",
      "updatedAt": "2024-12-17T20:58:33Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "7be4b2c6977c9d81006ac1fe080321247d025371"
      },
      "author": {
        "login": "DanielRosenwasser"
      },
      "assignees": {
        "nodes": [
          {
            "login": "DanielRosenwasser"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/harness/tsserverLogger.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FjOpz",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20241217202808030 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/60797",
      "mergedAt": "2024-12-17T21:27:17Z",
      "updatedAt": "2024-12-17T21:27:19Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e1db57d83c97b2046ebd47dfcf9bc6b892f4207e"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Fknb0",
      "title": "Add tests for `getNormalizedAbsolutePath`.",
      "url": "https://github.com/microsoft/TypeScript/pull/60802",
      "mergedAt": "2024-12-18T01:45:48Z",
      "updatedAt": "2024-12-18T01:45:50Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c8af21b4fb6cf5b08cedab6beb69b7c89767cc09"
      },
      "author": {
        "login": "DanielRosenwasser"
      },
      "assignees": {
        "nodes": [
          {
            "login": "DanielRosenwasser"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/testRunner/unittests/paths.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Fa_56",
      "title": "Update dependencies",
      "url": "https://github.com/microsoft/TypeScript/pull/60781",
      "mergedAt": "2024-12-18T02:28:58Z",
      "updatedAt": "2024-12-18T02:29:01Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "52717acf8722ad153b3ee49cd59b7c95b0f4ee04"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".dprint.jsonc"
          },
          {
            "path": "package-lock.json"
          },
          {
            "path": "package.json"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Firt0",
      "title": "Improve `unknown` narrowing by negated type predicates",
      "url": "https://github.com/microsoft/TypeScript/pull/60795",
      "mergedAt": "2024-12-18T18:44:43Z",
      "updatedAt": "2024-12-19T11:23:01Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0dda037f9fc53af3623b9e7371a731947a572d40"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/narrowUnknownByTypePredicate.symbols"
          },
          {
            "path": "tests/baselines/reference/narrowUnknownByTypePredicate.types"
          },
          {
            "path": "tests/cases/compiler/narrowUnknownByTypePredicate.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6AsWSv",
      "title": "Don't try to add an implicit undefined for mapped properties outside of `strictNullChecks`",
      "url": "https://github.com/microsoft/TypeScript/pull/60393",
      "mergedAt": "2024-12-19T19:47:26Z",
      "updatedAt": "2024-12-19T19:49:15Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "12e205b1e980d6c46921c78283802ae2bbe034ce"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks1.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks1.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks1.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks2.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks2.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks2.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks3.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks3.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks3.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks4.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks4.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks4.types"
          },
          {
            "path": "tests/cases/compiler/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks1.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks2.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks3.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks4.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6F1uaY",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20241219202405650 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/60826",
      "mergedAt": "2024-12-19T20:59:24Z",
      "updatedAt": "2024-12-19T20:59:25Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "56a08250f3516b3f5bc120d6c7ab4450a9a69352"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6F8-QF",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20241220203953707 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/60833",
      "mergedAt": "2025-01-03T02:02:45Z",
      "updatedAt": "2025-01-03T02:02:47Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "21c1a61b49082915f93e3327dad0d73205cf4273"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6GBqrp",
      "title": "Bump the github-actions group across 1 directory with 3 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/60844",
      "mergedAt": "2025-01-06T19:32:54Z",
      "updatedAt": "2025-01-06T19:32:57Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d49b89618058b028a65ba5d9a04886e9d0928840"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6F2oJ-",
      "title": "Fix CodeQL configuration, releases",
      "url": "https://github.com/microsoft/TypeScript/pull/60828",
      "mergedAt": "2025-01-06T20:35:44Z",
      "updatedAt": "2025-01-06T20:37:32Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c0b3ff2da1a5c1480710a81a994659ea706af484"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/codeql/codeql-configuration.yml"
          },
          {
            "path": "azure-pipelines.release.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6G65F2",
      "title": "Narrow types by typeof operands with extra parenthesis",
      "url": "https://github.com/microsoft/TypeScript/pull/60928",
      "mergedAt": "2025-01-07T20:26:00Z",
      "updatedAt": "2025-01-07T20:55:43Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "a5196c7d3bdb9e7e1e4e0268e4a5817d6282aaa7"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/binder.ts"
          },
          {
            "path": "tests/baselines/reference/narrowingTypeofParenthesized1.symbols"
          },
          {
            "path": "tests/baselines/reference/narrowingTypeofParenthesized1.types"
          },
          {
            "path": "tests/cases/compiler/narrowingTypeofParenthesized1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6G4QD1",
      "title": "Fixed BADCLIENT error message",
      "url": "https://github.com/microsoft/TypeScript/pull/60925",
      "mergedAt": "2025-01-07T23:58:37Z",
      "updatedAt": "2025-01-07T23:58:37Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "717d05cc2d528deb51cf7785bdd71891935d19a8"
      },
      "author": {
        "login": "armanio123"
      },
      "assignees": {
        "nodes": [
          {
            "login": "armanio123"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/server/session.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6HIq5a",
      "title": "Fix GHA badge in readme",
      "url": "https://github.com/microsoft/TypeScript/pull/60937",
      "mergedAt": "2025-01-08T23:15:35Z",
      "updatedAt": "2025-01-08T23:15:38Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e1cef5fa3a616bd800fa5e23c2312fc9f951e59f"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "README.md"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FtElA",
      "title": "Write path normalization without array allocations",
      "url": "https://github.com/microsoft/TypeScript/pull/60812",
      "mergedAt": "2025-01-09T19:36:08Z",
      "updatedAt": "2025-02-15T11:06:46Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e9738050cf896a9c08d1d3d911f304513f80b76a"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/path.ts"
          },
          {
            "path": "src/testRunner/unittests/paths.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6HIJC-",
      "title": "Add non-generic fallback overloads for TypedArray constructors",
      "url": "https://github.com/microsoft/TypeScript/pull/60934",
      "mergedAt": "2025-01-09T21:28:50Z",
      "updatedAt": "2025-01-09T22:23:42Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "df54a3d6b49071d59f67f1710cc6aa91aeda6d02"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/es2020.bigint.d.ts"
          },
          {
            "path": "src/lib/es5.d.ts"
          },
          {
            "path": "tests/cases/compiler/typedArrayConstructorOverloads.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FFWmE",
      "title": "Skip `verifyCompilerOptions` when possible on program updates",
      "url": "https://github.com/microsoft/TypeScript/pull/60754",
      "mergedAt": "2025-01-10T01:35:20Z",
      "updatedAt": "2025-01-10T18:15:40Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "cbac1ddfc73ca3b9d8741c1b51b74663a0f24695"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/_namespaces/ts.ts"
          },
          {
            "path": "src/compiler/program.ts"
          },
          {
            "path": "src/compiler/programDiagnostics.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Hd5D_",
      "title": "Bump the github-actions group with 2 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/60963",
      "mergedAt": "2025-01-13T18:42:48Z",
      "updatedAt": "2025-01-13T18:42:50Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "700ee076e515db2ef49d8cf7e4dc4bf70679575c"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6IC0lb",
      "title": "Fix JSDoc for Array#sort, TypedArray#sort and Array#toSorted methods",
      "url": "https://github.com/microsoft/TypeScript/pull/60983",
      "mergedAt": "2025-01-16T23:58:52Z",
      "updatedAt": "2025-01-17T11:25:39Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "7901a397214e8c7b39de8954eecc707dce8cb099"
      },
      "author": {
        "login": "derdelean"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/es2023.array.d.ts"
          },
          {
            "path": "src/lib/es5.d.ts"
          },
          {
            "path": "tests/baselines/reference/completionEntryForUnionMethod.baseline"
          },
          {
            "path": "tests/baselines/reference/goToTypeDefinition_arrayType.baseline.jsonc"
          },
          {
            "path": "tests/lib/lib.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6B-zpu",
      "title": "feat(60475): Add getUnknownType to checker api",
      "url": "https://github.com/microsoft/TypeScript/pull/60502",
      "mergedAt": "2025-01-17T19:57:01Z",
      "updatedAt": "2025-01-17T19:57:01Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "32e8f8b81c84acb929c77cc06929e7e5f59f309a"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FkgLF",
      "title": "fix(60551): satisfies is shown on go-to-implementation",
      "url": "https://github.com/microsoft/TypeScript/pull/60801",
      "mergedAt": "2025-01-17T20:05:26Z",
      "updatedAt": "2025-01-17T20:05:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "f99803d05f3ec8b4b5317359f05a15a17f69dec4"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": [
          {
            "login": "navya9singh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/findAllReferences.ts"
          },
          {
            "path": "tests/baselines/reference/goToImplementation_satisfies.baseline.jsonc"
          },
          {
            "path": "tests/cases/fourslash/goToImplementation_satisfies.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6DkPGJ",
      "title": "fix(60592): JSDoc implements space sensetive",
      "url": "https://github.com/microsoft/TypeScript/pull/60640",
      "mergedAt": "2025-01-17T20:12:13Z",
      "updatedAt": "2025-01-17T20:12:13Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "5170645f4e4b395891fad823bfe03ac628411afb"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/parser.ts"
          },
          {
            "path": "tests/baselines/reference/extendsTag3.js"
          },
          {
            "path": "tests/baselines/reference/extendsTag3.symbols"
          },
          {
            "path": "tests/baselines/reference/extendsTag3.types"
          },
          {
            "path": "tests/baselines/reference/extendsTag6.symbols"
          },
          {
            "path": "tests/baselines/reference/extendsTag6.types"
          },
          {
            "path": "tests/baselines/reference/jsdocImplementsTag.symbols"
          },
          {
            "path": "tests/baselines/reference/jsdocImplementsTag.types"
          },
          {
            "path": "tests/cases/conformance/jsdoc/extendsTag3.ts"
          },
          {
            "path": "tests/cases/conformance/jsdoc/extendsTag6.ts"
          },
          {
            "path": "tests/cases/conformance/jsdoc/jsdocImplementsTag.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Ac1RN",
      "title": "fix(60375): Parameter inlay hint is incorrect when function has a this type",
      "url": "https://github.com/microsoft/TypeScript/pull/60378",
      "mergedAt": "2025-01-17T21:30:35Z",
      "updatedAt": "2025-01-17T21:30:35Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "589f734e5edd1eef8cc69e99f67e418598e24d44"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/inlayHints.ts"
          },
          {
            "path": "tests/baselines/reference/inlayHintsThisParameter.baseline"
          },
          {
            "path": "tests/cases/fourslash/inlayHintsThisParameter.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6C4tT9",
      "title": "fix(60563):@import * as namespace cannot be used with @implements",
      "url": "https://github.com/microsoft/TypeScript/pull/60566",
      "mergedAt": "2025-01-17T22:54:28Z",
      "updatedAt": "2025-01-17T22:54:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "a086a3c42b1fb8177f1a8683b7017a288167e648"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/importTag23.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importTag23.symbols"
          },
          {
            "path": "tests/baselines/reference/importTag23.types"
          },
          {
            "path": "tests/cases/conformance/jsdoc/importTag23.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6H_WYl",
      "title": "Fixed wrong error being reported on required initialized parameters with `isolatedDeclarations`",
      "url": "https://github.com/microsoft/TypeScript/pull/60980",
      "mergedAt": "2025-01-18T06:08:12Z",
      "updatedAt": "2025-01-18T07:07:54Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0745e6a0e00f5e6f000493c7e794ff53935a6664"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/transformers/declarations/diagnostics.ts"
          },
          {
            "path": "tests/baselines/reference/transpile/declarationFunctionDeclarations.d.ts"
          },
          {
            "path": "tests/baselines/reference/transpile/declarationFunctionDeclarations.js"
          },
          {
            "path": "tests/cases/transpile/declarationFunctionDeclarations.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6GfXMt",
      "title": "Fixed \"Delete all unused declarations\" to delete self-referential functions",
      "url": "https://github.com/microsoft/TypeScript/pull/60888",
      "mergedAt": "2025-01-18T06:11:42Z",
      "updatedAt": "2025-01-18T06:11:42Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "8da951cbb629b648753454872df4e1754982aef1"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/fixUnusedIdentifier.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixUnusedIdentifier_all_selfReferencingFunction.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6GsJa4",
      "title": "Fix ESM/CJS resolution cache collision in non-nodenext resolution modes",
      "url": "https://github.com/microsoft/TypeScript/pull/60910",
      "mergedAt": "2025-01-21T19:10:51Z",
      "updatedAt": "2025-01-21T19:10:56Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b78f4668122b9d67d6fc4765b989cdd51694f548"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/moduleNameResolver.ts"
          },
          {
            "path": "src/testRunner/unittests/tsserver/inferredProjects.ts"
          },
          {
            "path": "tests/baselines/reference/resolutionModeCache.errors.txt"
          },
          {
            "path": "tests/baselines/reference/resolutionModeCache.symbols"
          },
          {
            "path": "tests/baselines/reference/resolutionModeCache.trace.json"
          },
          {
            "path": "tests/baselines/reference/resolutionModeCache.types"
          },
          {
            "path": "tests/baselines/reference/tsserver/inferredProjects/closing-file-with-shared-resolutions.js"
          },
          {
            "path": "tests/cases/conformance/moduleResolution/resolutionModeCache.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59u1wb",
      "title": "Add ESNext float16 features and fix TypedArrays of BigInt types",
      "url": "https://github.com/microsoft/TypeScript/pull/60151",
      "mergedAt": "2025-01-22T03:04:15Z",
      "updatedAt": "2025-01-22T08:20:42Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "1c4083f4edc71cb1744a62013732e3c95d05a035"
      },
      "author": {
        "login": "petamoriken"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/lib/es2015.iterable.d.ts"
          },
          {
            "path": "src/lib/es2020.bigint.d.ts"
          },
          {
            "path": "src/lib/es2023.array.d.ts"
          },
          {
            "path": "src/lib/es5.d.ts"
          },
          {
            "path": "src/lib/esnext.d.ts"
          },
          {
            "path": "src/lib/esnext.float16.d.ts"
          },
          {
            "path": "src/lib/esnext.iterator.d.ts"
          },
          {
            "path": "src/lib/libs.json"
          },
          {
            "path": "tests/baselines/reference/builtinIterator.symbols"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse --lib option with extra comma.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse --lib option with trailing white-space.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse invalid option of library flags.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs array to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs array to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert trailing-whitespace string option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert trailing-whitespace string option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/dependentDestructuredVariables.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentDestructuredVariablesFromNestedPatterns.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType1.symbols"
          },
          {
            "path": "tests/baselines/reference/generatorNoImplicitReturns.symbols"
          },
          {
            "path": "tests/baselines/reference/generatorReturnTypeInference.symbols"
          },
          {
            "path": "tests/baselines/reference/generatorReturnTypeInferenceNonStrict.symbols"
          },
          {
            "path": "tests/baselines/reference/goToTypeDefinition_arrayType.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/inferenceOptionalPropertiesToIndexSignatures.symbols"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorsExpressions.symbols"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorsObjects.symbols"
          },
          {
            "path": "tests/baselines/reference/modulePreserve2.trace.json"
          },
          {
            "path": "tests/baselines/reference/modulePreserve3.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNext.trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNextEsm.trace.json"
          },
          {
            "path": "tests/baselines/reference/simpleRecursionWithBaseCase2.symbols"
          },
          {
            "path": "tests/baselines/reference/simpleRecursionWithBaseCase3.symbols"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/does-not-add-color-when-NO_COLOR-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped-when-host-can't-provide-terminal-width.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true-useFsEventsOnParentDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-event-ends-with-tilde.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-occurs-when-file-is-still-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-dynamic-polling-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-watchDirectory-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-watchFile-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders-with-synchronousWatchDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-renaming-a-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-with-outDir-and-declaration-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-fallbackPolling-option.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-watchDirectory-option.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/file-rename-on-wsl2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/does-not-expose-paths.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/recursive-directory-does-not-watch-files-starting-with-dot-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-dynamic-polling-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-non-recursive-watchDirectory-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-watchFile-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/watching-npm-install-in-codespaces-where-workspaces-folder-is-hosted-at-root.js"
          },
          {
            "path": "tests/baselines/reference/typedArrays.types"
          },
          {
            "path": "tests/baselines/reference/typesVersions.ambientModules.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.emptyTypes.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.justIndex.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.ambient.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToSelf.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToUnmapped.trace.json"
          },
          {
            "path": "tests/baselines/reference/uniqueSymbols.symbols"
          },
          {
            "path": "tests/baselines/reference/uniqueSymbolsDeclarations.symbols"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6GTjuH",
      "title": "Treat `BigInt` type references in JSDoc as intended `bigint`s",
      "url": "https://github.com/microsoft/TypeScript/pull/60863",
      "mergedAt": "2025-01-22T16:33:01Z",
      "updatedAt": "2025-01-22T17:28:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ce73b174f16580e2d2f4ef43d7e210a288b2d99a"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/checkJsdocTypeTag8.symbols"
          },
          {
            "path": "tests/baselines/reference/checkJsdocTypeTag8.types"
          },
          {
            "path": "tests/baselines/reference/jsdocTypeTag.js"
          },
          {
            "path": "tests/baselines/reference/jsdocTypeTag.symbols"
          },
          {
            "path": "tests/baselines/reference/jsdocTypeTag.types"
          },
          {
            "path": "tests/cases/conformance/jsdoc/checkJsdocTypeTag8.ts"
          },
          {
            "path": "tests/cases/conformance/jsdoc/jsdocTypeTag.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6IEwmm",
      "title": "DOM update 2025/01/16",
      "url": "https://github.com/microsoft/TypeScript/pull/60987",
      "mergedAt": "2025-01-22T18:36:00Z",
      "updatedAt": "2025-01-22T19:49:13Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b886b48950da9783eed344f1438eea2c24299270"
      },
      "author": {
        "login": "sandersn"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/dom.generated.d.ts"
          },
          {
            "path": "src/lib/dom.iterable.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.iterable.generated.d.ts"
          },
          {
            "path": "tests/baselines/reference/globalThisBlockscopedProperties.types"
          },
          {
            "path": "tests/baselines/reference/implicitAnyInCatch.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.errors.txt"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.types"
          },
          {
            "path": "tests/baselines/reference/verifyDefaultLib_webworker.types"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6HauK5",
      "title": "Fixed an issue with for statement's incrementor missing continue's control flow information",
      "url": "https://github.com/microsoft/TypeScript/pull/60950",
      "mergedAt": "2025-01-22T19:40:58Z",
      "updatedAt": "2025-01-22T21:41:58Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "7f802bbca25634c6bffe316de75771274f1d9b1d"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/binder.ts"
          },
          {
            "path": "tests/baselines/reference/controlFlowForStatementContinueIntoIncrementor1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/controlFlowForStatementContinueIntoIncrementor1.symbols"
          },
          {
            "path": "tests/baselines/reference/controlFlowForStatementContinueIntoIncrementor1.types"
          },
          {
            "path": "tests/cases/compiler/controlFlowForStatementContinueIntoIncrementor1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FdTJ9",
      "title": "Narrow types by satisfies expressions",
      "url": "https://github.com/microsoft/TypeScript/pull/60782",
      "mergedAt": "2025-01-22T21:44:58Z",
      "updatedAt": "2025-01-22T22:13:37Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "efe07a09210bb1d7739874edc8e890bfdff2ed8c"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.errors.txt"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.js"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.symbols"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.types"
          },
          {
            "path": "tests/cases/compiler/inferTypePredicates.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FLYXC",
      "title": "Support `require(esm)` in `--module nodenext`",
      "url": "https://github.com/microsoft/TypeScript/pull/60761",
      "mergedAt": "2025-01-23T00:56:17Z",
      "updatedAt": "2025-03-24T16:51:01Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "5e52b28ee6d54f6637990be6d0dda1e974f78345"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=node18,moduleresolution=bundler).errors.txt"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=node18,moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=node18,moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=bundler).errors.txt"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/cjsErrors(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/cjsErrors(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/cjsErrors(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/cjsErrors(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=node18).js"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=node18).types"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=true,module=node18).js"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=true,module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=true,module=node18).types"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=true,module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=true,module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=true,module=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/importAssertionNonstring.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/nodeAllowJsPackageSelfName(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModules1(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJs1(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsSynchronousCallErrors(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCJSEmit1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCJSEmit1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCJSEmit1(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCJSEmit1(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitWithPackageExports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsDoubleAsterisk(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsDoubleAsterisk(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageExports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsExclude(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesSynchronousCallErrors(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfName(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfNameScoped(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nonTSExtensions(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nonTSExtensions(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/packageJsonImportsErrors(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/packageJsonImportsErrors(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/packageJsonImportsErrors(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/packageJsonImportsErrors(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/typeOnlyESMImportFromCJS(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/typeOnlyESMImportFromCJS(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/typeOnlyESMImportFromCJS(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/typeOnlyESMImportFromCJS(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/typeOnlyESMImportFromCJS(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/typeOnlyESMImportFromCJS(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/typeOnlyESMImportFromCJS(module=nodenext).types"
          },
          {
            "path": "tests/cases/conformance/externalModules/moduleResolutionWithoutExtension3.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/moduleResolutionWithoutExtension4.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/cjsErrors.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/nodeModulesTsFiles.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/nonTSExtensions.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/packageJsonImportsErrors.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/typeOnly/typeOnlyESMImportFromCJS.ts"
          },
          {
            "path": "tests/cases/conformance/importAttributes/importAttributes6.ts"
          },
          {
            "path": "tests/cases/conformance/moduleResolution/bundler/bundlerDirectoryModule.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesCJSEmit1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesDeclarationEmitDynamicImportWithPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsDoubleAsterisk.ts"
          },
          {
            "path": "tests/cases/conformance/nonjsExtensions/declarationFileForTsJsImport.ts"
          },
          {
            "path": "tests/cases/conformance/nonjsExtensions/declarationFilesForNodeNativeModules.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportAllowImportingTsExtensionsPackageJsonImports1.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportCompletionExportListAugmentation1.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportCompletionExportListAugmentation2.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportCompletionExportListAugmentation3.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportCompletionExportListAugmentation4.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportNoPackageJson_nodenext.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportNodeNextJSRequire.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonExportsSpecifierEndsInTs.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsCaseSensitivity.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsConditions.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsLength1.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsLength2.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsPattern.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsPattern_js.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsPattern_js_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsPattern_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsPattern_ts_js.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsPattern_ts_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsPreference1.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsPreference2.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsPreference3.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImports_capsInPath1.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImports_capsInPath2.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImports_js.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImports_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportVerbatimCJS1.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportVerbatimTypeOnly1.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportsNodeNext1.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixMissingResolutionModeImportAttribute.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsClassMemberImportTypeNodeParameter1.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsClassMemberImportTypeNodeParameter2.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsClassMemberImportTypeNodeParameter3.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsClassMemberImportTypeNodeParameter4.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImportDefaultExportCrash1.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImportDefaultExportCrash2.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImportTypeKeyword.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_promoteTypeOnly6.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_promoteTypeOnly7.ts"
          },
          {
            "path": "tests/cases/fourslash/getOccurrencesNonStringImportAssertion.ts"
          },
          {
            "path": "tests/cases/fourslash/getOccurrencesNonStringImportAttributes.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonExportsSpecifierEndsInTs.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonExportsTrailingSlash1.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsConditions1.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsLength1.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsLength2.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern2.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_capsInPath1.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_capsInPath2.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_js.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_js_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_ts_js.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_ts_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImports_js.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImports_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFix_barrelExport5.ts"
          },
          {
            "path": "tests/cases/fourslash/inlayHintsInteractiveMultifileFunctionCalls.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToFile_ctsTomts.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToFile_impossibleImport.ts"
          },
          {
            "path": "tests/cases/fourslash/nodeModulesImportCompletions1.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsCustomConditions.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard1.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard12.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard2.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard3.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard4.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard5.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard6.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard7.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard8.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard9.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsCustomConditions.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsIgnoreMatchingNodeModule1.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsIgnoreMatchingNodeModule2.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsOnlyFromClosestScope1.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard1.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard12.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard2.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard3.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard4.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard5.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard6.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard7.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard8.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard9.ts"
          },
          {
            "path": "tests/cases/fourslash/refactorConvertToEsModule_module_nodenext.ts"
          },
          {
            "path": "tests/cases/fourslash/refactorToReturnTypeWithImportAssertions.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6I0IQ9",
      "title": "Ensure createProgram stops referencing rootNamesOrOptions to ensure oldProgram is GC'd",
      "url": "https://github.com/microsoft/TypeScript/pull/61034",
      "mergedAt": "2025-01-23T23:05:21Z",
      "updatedAt": "2025-01-23T23:05:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "51d9a98c5510aa45870ff85b65e2c4afca4cd5dd"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          },
          {
            "login": "sheetalkamat"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/program.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6G391C",
      "title": "Fix missing failed lookup locations when resolving bare-specifier package.json `\"imports\"`",
      "url": "https://github.com/microsoft/TypeScript/pull/60924",
      "mergedAt": "2025-01-23T23:28:53Z",
      "updatedAt": "2025-01-23T23:28:58Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "329387d76f88713b1818b2489d14214407f7883c"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/moduleNameResolver.ts"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/packageJsonImportsFailedLookups.js"
          },
          {
            "path": "tests/cases/fourslash/server/packageJsonImportsFailedLookups.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Ik99K",
      "title": "`--erasableSyntaxOnly`",
      "url": "https://github.com/microsoft/TypeScript/pull/61011",
      "mergedAt": "2025-01-23T23:56:35Z",
      "updatedAt": "2025-03-06T23:40:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2c865e461e9a55f7a6283acc7aed614832a9b75e"
      },
      "author": {
        "login": "RyanCavanaugh"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Default initialized TSConfig/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with --help/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with --watch/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with advanced options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with boolean value compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with enum value compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with files options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with incorrect compiler option value/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with incorrect compiler option/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with list compiler options with enum value/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with list compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/showConfig/Shows tsconfig for single option/erasableSyntaxOnly/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.errors.txt"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.symbols"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.types"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnlyDeclaration.errors.txt"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnlyDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnlyDeclaration.types"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/cases/compiler/erasableSyntaxOnly.ts"
          },
          {
            "path": "tests/cases/compiler/erasableSyntaxOnlyDeclaration.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6GZ9jv",
      "title": "fix: do not use `JSX.ElementChildrenAttribute` under `jsx: react-jsx` or `jsx: react-jsxdev`",
      "url": "https://github.com/microsoft/TypeScript/pull/60880",
      "mergedAt": "2025-01-24T00:03:08Z",
      "updatedAt": "2025-01-24T01:14:37Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0e371c4bf587e1254e5810d88ae055073b18ab0b"
      },
      "author": {
        "login": "uhyo"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "uhyo"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "iisaduan"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx(jsx=react-jsx).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx(jsx=react-jsx).js"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx(jsx=react-jsx).symbols"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx(jsx=react-jsxdev).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx(jsx=react-jsxdev).js"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx(jsx=react-jsxdev).symbols"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceNoElementChildrenAttributeReactJsx(jsx=react-jsx).js"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceNoElementChildrenAttributeReactJsx(jsx=react-jsx).symbols"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceNoElementChildrenAttributeReactJsx(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceNoElementChildrenAttributeReactJsx(jsx=react-jsxdev).js"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceNoElementChildrenAttributeReactJsx(jsx=react-jsxdev).symbols"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceNoElementChildrenAttributeReactJsx(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/cases/compiler/jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx.tsx"
          },
          {
            "path": "tests/cases/compiler/jsxNamespaceNoElementChildrenAttributeReactJsx.tsx"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-YC-V",
      "title": "Expose method for retrieving inferred generic type arguments for a signature on the TypeChecker (#59637)",
      "url": "https://github.com/microsoft/TypeScript/pull/60201",
      "mergedAt": "2025-01-24T00:43:59Z",
      "updatedAt": "2025-01-24T00:44:00Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "f28c5180dfc928a06abdd309480d31e7c12c8d28"
      },
      "author": {
        "login": "tristanmenzel"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Aj5ox",
      "title": "allow calling `goToDef` on modifiers of named declarations",
      "url": "https://github.com/microsoft/TypeScript/pull/60384",
      "mergedAt": "2025-01-24T01:30:35Z",
      "updatedAt": "2025-01-24T01:30:40Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c5058f0066d77ffa341efb9ae68ee27d37f157fb"
      },
      "author": {
        "login": "iisaduan"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "mjbvz"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "DISMISSED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "mjbvz"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/goToDefinition.ts"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionAwait1.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionAwait3.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionMember.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionModifiers.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionOverriddenMember6.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionOverriddenMember7.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionReturn5.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionYield3.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionYield4.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToTypeDefinitionModifiers.baseline.jsonc"
          },
          {
            "path": "tests/cases/fourslash/goToDefinitionMember.ts"
          },
          {
            "path": "tests/cases/fourslash/goToDefinitionModifiers.ts"
          },
          {
            "path": "tests/cases/fourslash/goToTypeDefinitionModifiers.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6F2rAA",
      "title": "Add new option \"libReplacement\"",
      "url": "https://github.com/microsoft/TypeScript/pull/60829",
      "mergedAt": "2025-01-24T01:34:52Z",
      "updatedAt": "2025-01-24T01:34:52Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "220706eb0320ff46fad8bf80a5e99db624ee7dfb"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/program.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/testRunner/unittests/helpers/libraryResolution.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Default initialized TSConfig/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with --help/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with --watch/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with advanced options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with boolean value compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with enum value compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with files options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with incorrect compiler option value/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with incorrect compiler option/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with list compiler options with enum value/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with list compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/showConfig/Shows tsconfig for single option/libReplacement/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/libReplacement(libreplacement=false).trace.json"
          },
          {
            "path": "tests/baselines/reference/libReplacement(libreplacement=true).trace.json"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptOverrideSimple.errors.txt"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptOverrideSimple.js"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptOverrideSimple.symbols"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptOverrideSimpleConfig.errors.txt"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptOverrideSimpleConfig.js"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptOverrideSimpleConfig.symbols"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptSubfileResolving.errors.txt"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptSubfileResolving.js"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptSubfileResolving.symbols"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptSubfileResolvingConfig.errors.txt"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptSubfileResolvingConfig.js"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptSubfileResolvingConfig.symbols"
          },
          {
            "path": "tests/baselines/reference/tsbuild/libraryResolution/with-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/libraryResolution/with-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/libraryResolution/unknown-lib.js"
          },
          {
            "path": "tests/baselines/reference/tsc/libraryResolution/with-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tsc/libraryResolution/without-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/libraryResolution/unknwon-lib.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/libraryResolution/with-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/libraryResolution/with-config.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/libraryResolution/without-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/libraryResolution/with-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/libraryResolution/with-config.js"
          },
          {
            "path": "tests/cases/compiler/libReplacement.ts"
          },
          {
            "path": "tests/cases/compiler/libTypeScriptOverrideSimple.ts"
          },
          {
            "path": "tests/cases/compiler/libTypeScriptOverrideSimpleConfig.ts"
          },
          {
            "path": "tests/cases/compiler/libTypeScriptSubfileResolving.ts"
          },
          {
            "path": "tests/cases/compiler/libTypeScriptSubfileResolvingConfig.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6I2FZ9",
      "title": "Disable broken CodeQL query",
      "url": "https://github.com/microsoft/TypeScript/pull/61040",
      "mergedAt": "2025-01-24T16:20:52Z",
      "updatedAt": "2025-01-24T16:20:56Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d1e2e50ff3e0a7219d561c946996342f9667bd3e"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/codeql/codeql-configuration.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc58lLHq",
      "title": "Computed names in declarations files are resolved even when non-literal, preserve computed names when expressions are entity names",
      "url": "https://github.com/microsoft/TypeScript/pull/60052",
      "mergedAt": "2025-01-24T19:44:54Z",
      "updatedAt": "2025-03-06T14:57:50Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "caf1aee269d1660b4d2a8b555c2d602c97cb28d7"
      },
      "author": {
        "login": "weswigham"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty1.types"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/capturedParametersInInitializers1.types"
          },
          {
            "path": "tests/baselines/reference/capturedParametersInInitializers2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/checkJsObjectLiteralIndexSignatures.types"
          },
          {
            "path": "tests/baselines/reference/classNonUniqueSymbolMethodHasSymbolIndexer.js"
          },
          {
            "path": "tests/baselines/reference/commaOperatorInConditionalExpression.types"
          },
          {
            "path": "tests/baselines/reference/complicatedPrivacy.errors.txt"
          },
          {
            "path": "tests/baselines/reference/computedPropertiesInDestructuring1.types"
          },
          {
            "path": "tests/baselines/reference/computedPropertiesInDestructuring1_ES6.types"
          },
          {
            "path": "tests/baselines/reference/computedPropertiesNarrowed.errors.txt"
          },
          {
            "path": "tests/baselines/reference/computedPropertiesNarrowed.types"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames12_ES5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames12_ES6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames48_ES5.types"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames48_ES6.types"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames6_ES5.types"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames6_ES6.types"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNamesOnOverloads_ES5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNamesOnOverloads_ES6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationEmitAnyComputedPropertyInClass.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitClassMemberWithComputedPropertyName.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitComputedNameWithQuestionToken.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitComputedNameWithQuestionToken.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitComputedNameWithQuestionToken.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitComputedNamesInaccessible.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitComputedNamesInaccessible.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitComputedNamesInaccessible.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitComputedPropertyNameEnum2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationEmitComputedPropertyNameEnum3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationEmitMultipleComputedNamesSameDomain.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitMultipleComputedNamesSameDomain.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitMultipleComputedNamesSameDomain.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitSimpleComputedNames1.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitSimpleComputedNames1.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitSimpleComputedNames1.types"
          },
          {
            "path": "tests/baselines/reference/decoratorsOnComputedProperties.errors.txt"
          },
          {
            "path": "tests/baselines/reference/destructuringObjectBindingPatternAndAssignment8(target=es5).types"
          },
          {
            "path": "tests/baselines/reference/destructuringObjectBindingPatternAndAssignment8(target=esnext).types"
          },
          {
            "path": "tests/baselines/reference/duplicateObjectLiteralProperty_computedNameNegative1.types"
          },
          {
            "path": "tests/baselines/reference/es5-asyncFunctionObjectLiterals.types"
          },
          {
            "path": "tests/baselines/reference/esDecorators-classDeclaration-missingEmitHelpers-staticComputedAutoAccessor.errors.txt"
          },
          {
            "path": "tests/baselines/reference/esDecorators-classDeclaration-missingEmitHelpers-staticComputedField.errors.txt"
          },
          {
            "path": "tests/baselines/reference/esDecorators-classExpression-missingEmitHelpers-classDecorator.16.errors.txt"
          },
          {
            "path": "tests/baselines/reference/indexSignatureMustHaveTypeAnnotation.errors.txt"
          },
          {
            "path": "tests/baselines/reference/indexSignatures1.types"
          },
          {
            "path": "tests/baselines/reference/indexWithoutParamType2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorsClasses.errors.txt"
          },
          {
            "path": "tests/baselines/reference/overloadsWithComputedNames.errors.txt"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=false).js"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=true).js"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=false).js"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=true).js"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName10.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName11.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName13.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName14.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName15.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName18.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName19.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName20.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName21.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName22.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName25.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName28.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName29.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName31.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName32.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName36.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName7.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName8.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName9.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5ComputedPropertyName1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5ComputedPropertyName10.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5ComputedPropertyName11.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5ComputedPropertyName5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5ComputedPropertyName7.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5ComputedPropertyName8.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5ComputedPropertyName9.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty8.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty9.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserIndexSignature11.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserIndexSignature5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/privateIndexer2.types"
          },
          {
            "path": "tests/baselines/reference/propertiesOfGenericConstructorFunctions.types"
          },
          {
            "path": "tests/baselines/reference/propertyAssignment.errors.txt"
          },
          {
            "path": "tests/baselines/reference/spreadInvalidArgumentType.types"
          },
          {
            "path": "tests/baselines/reference/symbolProperty1.types"
          },
          {
            "path": "tests/baselines/reference/symbolProperty2.types"
          },
          {
            "path": "tests/baselines/reference/symbolProperty52.types"
          },
          {
            "path": "tests/baselines/reference/symbolProperty58.types"
          },
          {
            "path": "tests/baselines/reference/symbolProperty59.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transformParenthesizesConditionalSubexpression.types"
          },
          {
            "path": "tests/baselines/reference/tsxEmitSpreadAttribute(target=es2015).types"
          },
          {
            "path": "tests/baselines/reference/tsxEmitSpreadAttribute(target=es2018).types"
          },
          {
            "path": "tests/baselines/reference/tsxEmitSpreadAttribute(target=esnext).types"
          },
          {
            "path": "tests/baselines/reference/tsxReactEmitSpreadAttribute(target=es2015).types"
          },
          {
            "path": "tests/baselines/reference/tsxReactEmitSpreadAttribute(target=es2018).types"
          },
          {
            "path": "tests/baselines/reference/tsxReactEmitSpreadAttribute(target=esnext).types"
          },
          {
            "path": "tests/baselines/reference/typeUsedAsTypeLiteralIndex.errors.txt"
          },
          {
            "path": "tests/baselines/reference/useBeforeDeclaration_propertyAssignment.types"
          },
          {
            "path": "tests/cases/compiler/declarationEmitComputedNameWithQuestionToken.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitComputedNamesInaccessible.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitMultipleComputedNamesSameDomain.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitSimpleComputedNames1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6JBiyJ",
      "title": "Bump the github-actions group with 2 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/61055",
      "mergedAt": "2025-01-27T15:54:45Z",
      "updatedAt": "2025-01-27T15:54:47Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "32ebd28578902d5437e541cf185ea2a32742686d"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6JR6Rr",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250128203517120 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/61067",
      "mergedAt": "2025-01-28T21:07:00Z",
      "updatedAt": "2025-01-28T21:07:02Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "fed7a7f48ef6ce69a604b15a5a76c7525239aa6a"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6JRcK7",
      "title": "Fix error message incorrectly referencing 'asserts' instead of 'assert'.",
      "url": "https://github.com/microsoft/TypeScript/pull/61066",
      "mergedAt": "2025-01-28T22:42:35Z",
      "updatedAt": "2025-01-28T22:42:37Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0652664e6408f7704395fc53fe245e2e77367fe8"
      },
      "author": {
        "login": "DanielRosenwasser"
      },
      "assignees": {
        "nodes": [
          {
            "login": "DanielRosenwasser"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/importAssertionNonstring.errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=nodenext).errors.txt"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6JiA3B",
      "title": "Fix accidental ESM-mode directory module lookup in package non-root",
      "url": "https://github.com/microsoft/TypeScript/pull/61082",
      "mergedAt": "2025-01-30T18:17:14Z",
      "updatedAt": "2025-02-28T23:44:35Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "019fec8bf21202e9f7694135a0371c8c444839f6"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/moduleNameResolver.ts"
          },
          {
            "path": "tests/baselines/reference/nodeModulesNoDirectoryModule.errors.txt"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesNoDirectoryModule.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6JY5iA",
      "title": "DOM update 2025/01/29",
      "url": "https://github.com/microsoft/TypeScript/pull/61073",
      "mergedAt": "2025-01-30T19:39:52Z",
      "updatedAt": "2025-01-30T19:39:56Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "66e1b24831bb8b44a83fb98987cb9a6caec9a98c"
      },
      "author": {
        "login": "sandersn"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/dom.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.generated.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6JiVpo",
      "title": "[moveToFile] Fix symbols with empty `declarations` being treated as importable",
      "url": "https://github.com/microsoft/TypeScript/pull/61084",
      "mergedAt": "2025-01-30T21:49:26Z",
      "updatedAt": "2025-01-30T21:49:31Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "739d729ecce60771c23723aad932ab35a34df82d"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "navya9singh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/refactors/moveToFile.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToFile_undefined.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6JxpCm",
      "title": "Bump the github-actions group with 2 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/61102",
      "mergedAt": "2025-02-03T16:36:45Z",
      "updatedAt": "2025-02-03T16:36:48Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "f511ed42d09b84d00a38309c647e69e82e02284f"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/accept-baselines-fix-lints.yaml"
          },
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/insiders.yaml"
          },
          {
            "path": ".github/workflows/lkg.yml"
          },
          {
            "path": ".github/workflows/new-release-branch.yaml"
          },
          {
            "path": ".github/workflows/nightly.yaml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          },
          {
            "path": ".github/workflows/set-version.yaml"
          },
          {
            "path": ".github/workflows/sync-branch.yaml"
          },
          {
            "path": ".github/workflows/twoslash-repros.yaml"
          },
          {
            "path": ".github/workflows/update-package-lock.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6JkJNd",
      "title": "DOM update MessageEventTarget missed this parameters",
      "url": "https://github.com/microsoft/TypeScript/pull/61086",
      "mergedAt": "2025-02-03T21:32:35Z",
      "updatedAt": "2025-02-03T21:32:35Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c50b5e718aa9acc98e7c786dfa43a68506d798fd"
      },
      "author": {
        "login": "sandersn"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/dom.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.generated.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6KDHJM",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250204202444390 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/61114",
      "mergedAt": "2025-02-04T20:46:49Z",
      "updatedAt": "2025-02-04T20:46:51Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "71716a2868c87248af5020e33a84a2178d41a2d6"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6KXLTe",
      "title": "Revert return type narrowing",
      "url": "https://github.com/microsoft/TypeScript/pull/61136",
      "mergedAt": "2025-02-07T18:55:35Z",
      "updatedAt": "2025-02-07T18:55:36Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c3ae7c418f6163cb7d051c7e153d77c4c4c73769"
      },
      "author": {
        "login": "gabritto"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/conditionalReturnExpression.errors.txt"
          },
          {
            "path": "tests/baselines/reference/conditionalReturnExpression.symbols"
          },
          {
            "path": "tests/baselines/reference/conditionalReturnExpression.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType1.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType1.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType2.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType2.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType3.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType3.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType4.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType4.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType5.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType5.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType6.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType6.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType8.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType8.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType9.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType9.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType9.types"
          },
          {
            "path": "tests/cases/compiler/conditionalReturnExpression.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType1.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType2.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType3.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType4.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType5.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType6.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType8.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType9.ts"
          },
          {
            "path": "tests/cases/fourslash/returnTypeNarrowingAfterCachingTypes.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6KUqJn",
      "title": "Revert \"Proposed expandable hover API\"",
      "url": "https://github.com/microsoft/TypeScript/pull/61132",
      "mergedAt": "2025-02-07T20:44:02Z",
      "updatedAt": "2025-02-10T17:25:16Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "34ea32f8ce2771fb3b063f66ec0bc7b0c017d9e4"
      },
      "author": {
        "login": "gabritto"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/harness/client.ts"
          },
          {
            "path": "src/harness/fourslashImpl.ts"
          },
          {
            "path": "src/harness/fourslashInterfaceImpl.ts"
          },
          {
            "path": "src/server/protocol.ts"
          },
          {
            "path": "src/server/session.ts"
          },
          {
            "path": "src/services/services.ts"
          },
          {
            "path": "src/services/symbolDisplay.ts"
          },
          {
            "path": "src/services/types.ts"
          },
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosity1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosity2.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityClass1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityInterface1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityIntersection1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityObjectType1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityServer.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityTruncation.baseline"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/quickinfoVerbosityServer.js"
          },
          {
            "path": "tests/cases/fourslash/fourslash.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosity1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosity2.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityClass1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityInterface1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityIntersection1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityObjectType1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityTruncation.ts"
          },
          {
            "path": "tests/cases/fourslash/server/quickinfoVerbosityServer.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6KeEeC",
      "title": "Pass ignoreErrors=true to more resolveEntityName callers",
      "url": "https://github.com/microsoft/TypeScript/pull/61144",
      "mergedAt": "2025-02-10T17:26:52Z",
      "updatedAt": "2025-02-10T17:26:57Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e1629e540ef361167e0c96c8703728a419b6e8e9"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6KkocN",
      "title": "Bump github/codeql-action from 3.28.8 to 3.28.9 in the github-actions group",
      "url": "https://github.com/microsoft/TypeScript/pull/61156",
      "mergedAt": "2025-02-10T17:27:08Z",
      "updatedAt": "2025-02-10T17:27:11Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "775412a81af187e67371cd31719d19ab075b4ef3"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6KkWQo",
      "title": "Fixed `rewriteRelativeImportExtensions` for `import()` within call expressions",
      "url": "https://github.com/microsoft/TypeScript/pull/61154",
      "mergedAt": "2025-02-10T23:02:37Z",
      "updatedAt": "2025-02-10T23:02:37Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "df342b7206cb56b56bb3b3aecbb2ee2d2ff7b217"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/transformers/module/esnextAnd2015.ts"
          },
          {
            "path": "tests/baselines/reference/emit(jsx=preserve).errors.txt"
          },
          {
            "path": "tests/baselines/reference/emit(jsx=preserve).js"
          },
          {
            "path": "tests/baselines/reference/emit(jsx=react).errors.txt"
          },
          {
            "path": "tests/baselines/reference/emit(jsx=react).js"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/emit.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6K7_IC",
      "title": "Bump esbuild from 0.24.0 to 0.25.0",
      "url": "https://github.com/microsoft/TypeScript/pull/61166",
      "mergedAt": "2025-02-12T17:15:11Z",
      "updatedAt": "2025-02-12T17:15:13Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6af21a4a3df87e1f9d6218de63a3c36bcee870b0"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "package-lock.json"
          },
          {
            "path": "package.json"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6LLNZe",
      "title": "Ban import=require and export= under erasableSyntaxOnly",
      "url": "https://github.com/microsoft/TypeScript/pull/61175",
      "mergedAt": "2025-02-14T20:55:17Z",
      "updatedAt": "2025-02-18T16:41:06Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0f4737e0d55363ac40198b33a80fff0d01c1d8cf"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.errors.txt"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.js"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.symbols"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.types"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnlyDeclaration.errors.txt"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnlyDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnlyDeclaration.types"
          },
          {
            "path": "tests/cases/compiler/erasableSyntaxOnly.ts"
          },
          {
            "path": "tests/cases/compiler/erasableSyntaxOnlyDeclaration.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Ljq8E",
      "title": "Fix mistakenly disallowed default export under erasableSyntaxOnly",
      "url": "https://github.com/microsoft/TypeScript/pull/61210",
      "mergedAt": "2025-02-18T16:06:12Z",
      "updatedAt": "2025-03-04T21:32:55Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c9cb6c3c34aac30e050796bf7b9e452cd6879c27"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.errors.txt"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.js"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.symbols"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.types"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnlyDeclaration.errors.txt"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnlyDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnlyDeclaration.types"
          },
          {
            "path": "tests/cases/compiler/erasableSyntaxOnly.ts"
          },
          {
            "path": "tests/cases/compiler/erasableSyntaxOnlyDeclaration.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6LpPQL",
      "title": "Bump version to 5.9",
      "url": "https://github.com/microsoft/TypeScript/pull/61218",
      "mergedAt": "2025-02-18T19:16:22Z",
      "updatedAt": "2025-05-27T07:19:19Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "246507f7f90e08a330fc9f63c1b11c2e706d9193"
      },
      "author": {
        "login": "DanielRosenwasser"
      },
      "assignees": {
        "nodes": [
          {
            "login": "DanielRosenwasser"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "package-lock.json"
          },
          {
            "path": "package.json"
          },
          {
            "path": "src/compiler/corePublic.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6HlUMg",
      "title": "Update deps, a few majors",
      "url": "https://github.com/microsoft/TypeScript/pull/60967",
      "mergedAt": "2025-02-20T00:54:44Z",
      "updatedAt": "2025-02-20T00:54:50Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "eb25b581149478c299cbc0cf919f644c9e375969"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".dprint.jsonc"
          },
          {
            "path": "Herebyfile.mjs"
          },
          {
            "path": "package-lock.json"
          },
          {
            "path": "package.json"
          },
          {
            "path": "scripts/browserIntegrationTest.mjs"
          },
          {
            "path": "scripts/build/tests.mjs"
          },
          {
            "path": "scripts/build/utils.mjs"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5i-ZW2",
      "title": "Treat contextually typed functions in JS files as typed",
      "url": "https://github.com/microsoft/TypeScript/pull/56907",
      "mergedAt": "2025-02-20T00:58:32Z",
      "updatedAt": "2025-02-20T00:58:33Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "71b16ea186cc48a9af398fe91589cc07d9b1d96f"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/checkJsdocSatisfiesTag15.errors.txt"
          },
          {
            "path": "tests/baselines/reference/checkJsdocSatisfiesTag15.js"
          },
          {
            "path": "tests/baselines/reference/checkJsdocSatisfiesTag15.symbols"
          },
          {
            "path": "tests/baselines/reference/checkJsdocSatisfiesTag15.types"
          },
          {
            "path": "tests/cases/conformance/jsdoc/checkJsdocSatisfiesTag15.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6L0BY2",
      "title": "Fix quick fix for isolatedDeclarations to keep trailing unknown in generics",
      "url": "https://github.com/microsoft/TypeScript/pull/61227",
      "mergedAt": "2025-02-20T01:28:50Z",
      "updatedAt": "2025-02-20T01:28:50Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3f416e0f527e8967ac2bd490dffe76034db57a26"
      },
      "author": {
        "login": "blickly"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "blickly"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/helpers.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixMissingTypeAnnotationOnExports57-generics-doesnt-drop-trailing-unknown.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixMissingTypeAnnotationOnExports58-genercs-doesnt-drop-trailing-unknown-2.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixMissingTypeAnnotationOnExports59-drops-unneeded-after-unknown.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixMissingTypeAnnotationOnExports60-drops-unneeded-non-trailing-unknown.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc555Gf2",
      "title": "Remove redundant `getStringLiteralType` call",
      "url": "https://github.com/microsoft/TypeScript/pull/59803",
      "mergedAt": "2025-02-20T18:48:09Z",
      "updatedAt": "2025-02-20T18:48:09Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d8f6aa7c1f5796ab8d3b0a060d26f5497453e247"
      },
      "author": {
        "login": "MichalMarsalek"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6LWSWy",
      "title": "Fixed JSDoc checking on enum members",
      "url": "https://github.com/microsoft/TypeScript/pull/61184",
      "mergedAt": "2025-02-20T18:48:34Z",
      "updatedAt": "2025-02-20T18:48:34Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "5695986fbdf5f69b25793be4476cff60ab87b6a7"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/jsdocLinkTag9.symbols"
          },
          {
            "path": "tests/baselines/reference/jsdocLinkTag9.types"
          },
          {
            "path": "tests/cases/conformance/jsdoc/jsdocLinkTag9.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc50krDu",
      "title": "Fix of #58996",
      "url": "https://github.com/microsoft/TypeScript/pull/59155",
      "mergedAt": "2025-02-20T19:41:32Z",
      "updatedAt": "2025-02-20T19:41:32Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "12c232333b3c3a2e4827d7360bff339b415d7a8e"
      },
      "author": {
        "login": "MichalMarsalek"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.errors.txt"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.js"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.symbols"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.types"
          },
          {
            "path": "tests/cases/compiler/inferTypePredicates.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Hffz3",
      "title": "Infer from annotated return type nodes before assigning contextual parameter types",
      "url": "https://github.com/microsoft/TypeScript/pull/60964",
      "mergedAt": "2025-02-20T20:06:50Z",
      "updatedAt": "2025-02-22T08:35:01Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0d016920e6ce97722f82de7dcabfd92e69fea7cd"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/inferFromAnnotatedReturn1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/inferFromAnnotatedReturn1.symbols"
          },
          {
            "path": "tests/baselines/reference/inferFromAnnotatedReturn1.types"
          },
          {
            "path": "tests/cases/compiler/inferFromAnnotatedReturn1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_E2cX",
      "title": "Provide string completions for `in` keyword checks",
      "url": "https://github.com/microsoft/TypeScript/pull/60272",
      "mergedAt": "2025-02-20T22:01:52Z",
      "updatedAt": "2025-02-21T11:58:59Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b95187d1ce2368a93a51b31c0cd11f5ba2557627"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/stringCompletions.ts"
          },
          {
            "path": "tests/cases/fourslash/completionInChecks1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6L3uHf",
      "title": "Find method references through base abstract classes implementing an interface",
      "url": "https://github.com/microsoft/TypeScript/pull/61234",
      "mergedAt": "2025-02-21T19:08:34Z",
      "updatedAt": "2025-02-21T19:08:35Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "edc497bb2bf9ceccfdbfea59b42f9ae565ffa1cb"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/findAllReferences.ts"
          },
          {
            "path": "tests/baselines/reference/referencesForInheritedProperties10.baseline.jsonc"
          },
          {
            "path": "tests/cases/fourslash/referencesForInheritedProperties10.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc535ovW",
      "title": "Account for right operands & fix a weird error message for leftmost nullish literals in checkNullishCoalesceOperands",
      "url": "https://github.com/microsoft/TypeScript/pull/59569",
      "mergedAt": "2025-02-21T22:17:09Z",
      "updatedAt": "2025-02-21T22:17:10Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2bed7feee877fd7a6fdba1acdb642d016c3471e8"
      },
      "author": {
        "login": "ChiriVulpes"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.errors.txt"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.js"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.symbols"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.types"
          },
          {
            "path": "tests/cases/compiler/predicateSemantics.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6LBp--",
      "title": "fix(61167): Incorrect \"Import may be converted to a default import\" autofix for import export",
      "url": "https://github.com/microsoft/TypeScript/pull/61171",
      "mergedAt": "2025-02-21T23:23:22Z",
      "updatedAt": "2025-02-21T23:23:22Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "1cd8e20f947513cc8c0c7c59e55b2f4524eff316"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/suggestionDiagnostics.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixUseDefaultImport.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6MN6uw",
      "title": "Bump the github-actions group with 4 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/61257",
      "mergedAt": "2025-02-24T17:05:10Z",
      "updatedAt": "2025-02-24T17:05:14Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b8b7a38ee9c34490fa3f764a7d37ce386cc720a5"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc54qTYU",
      "title": "make exported destructured discriminated union narrowing work",
      "url": "https://github.com/microsoft/TypeScript/pull/59673",
      "mergedAt": "2025-02-24T18:29:01Z",
      "updatedAt": "2025-02-24T18:29:01Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "244303f92f6cda9c5c30a5425210b7d00d31d958"
      },
      "author": {
        "login": "MichalMarsalek"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "MichalMarsalek"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "MichalMarsalek"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/dependentDestructuredVariablesWithExport.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentDestructuredVariablesWithExport.types"
          },
          {
            "path": "tests/cases/conformance/controlFlow/dependentDestructuredVariablesWithExport.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59utOH",
      "title": "Fix to use string literal type in ArrayBuffer's `Symbol.toStringTag`",
      "url": "https://github.com/microsoft/TypeScript/pull/60150",
      "mergedAt": "2025-02-24T19:17:35Z",
      "updatedAt": "2025-02-27T18:25:09Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "8ae98d02d812f077cf77b4b21a2b256c6ee7ef2f"
      },
      "author": {
        "login": "petamoriken"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "petamoriken"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/harness/vfsUtil.ts"
          },
          {
            "path": "src/lib/es2015.symbol.wellknown.d.ts"
          },
          {
            "path": "tests/baselines/reference/assignSharedArrayBufferToArrayBuffer.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignSharedArrayBufferToArrayBuffer.js"
          },
          {
            "path": "tests/baselines/reference/assignSharedArrayBufferToArrayBuffer.symbols"
          },
          {
            "path": "tests/baselines/reference/assignSharedArrayBufferToArrayBuffer.types"
          },
          {
            "path": "tests/cases/conformance/es2017/assignSharedArrayBufferToArrayBuffer.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Giqs_",
      "title": "fix(60887): Incorrect Formatting on if (a) try {} finally {} ",
      "url": "https://github.com/microsoft/TypeScript/pull/60898",
      "mergedAt": "2025-02-24T19:51:29Z",
      "updatedAt": "2025-02-24T19:51:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2c3be449ff2e883d67135cbe889db982f66a224c"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/formatting/smartIndenter.ts"
          },
          {
            "path": "tests/cases/fourslash/formatTryFinally.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6LTbk5",
      "title": "Don't widen unique symbols annotated by effective type nodes in JS files",
      "url": "https://github.com/microsoft/TypeScript/pull/61180",
      "mergedAt": "2025-02-24T19:53:10Z",
      "updatedAt": "2025-02-24T23:21:02Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "7507b055dea43e65b9b2ad458ef3ae1a6c706261"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/uniqueSymbolJs2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/uniqueSymbolJs2.js"
          },
          {
            "path": "tests/baselines/reference/uniqueSymbolJs2.symbols"
          },
          {
            "path": "tests/baselines/reference/uniqueSymbolJs2.types"
          },
          {
            "path": "tests/cases/compiler/uniqueSymbolJs2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Mh3T0",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250225202237529 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/61269",
      "mergedAt": "2025-02-25T22:39:49Z",
      "updatedAt": "2025-02-25T22:39:51Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "afc463980f55d634c56dfedc6852f6f46f596621"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6MTrWf",
      "title": "Fixed accidentally reused comments between files in the emitter",
      "url": "https://github.com/microsoft/TypeScript/pull/61261",
      "mergedAt": "2025-02-26T20:48:59Z",
      "updatedAt": "2025-02-26T20:51:00Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b97eafbf3b64fd3110f75a4164a8fb07cebfff5e"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "DISMISSED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/expressionToTypeNode.ts"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoInvalidCommentReuse1.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoInvalidCommentReuse1.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoInvalidCommentReuse1.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoInvalidCommentReuse2.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoInvalidCommentReuse2.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoInvalidCommentReuse2.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoInvalidCommentReuse3.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoInvalidCommentReuse3.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoInvalidCommentReuse3.types"
          },
          {
            "path": "tests/cases/compiler/declarationEmitNoInvalidCommentReuse1.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitNoInvalidCommentReuse2.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitNoInvalidCommentReuse3.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Miuzu",
      "title": "lib.es2017: Move `SharedArrayBuffer[Symbol.species]` onto constructor interface",
      "url": "https://github.com/microsoft/TypeScript/pull/61271",
      "mergedAt": "2025-02-26T21:47:50Z",
      "updatedAt": "2025-02-26T22:15:40Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6121f45347685e9341d2e61730fbdd5a0b5cbf16"
      },
      "author": {
        "login": "Renegade334"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/es2017.sharedmemory.d.ts"
          },
          {
            "path": "tests/baselines/reference/useSharedArrayBuffer4.js"
          },
          {
            "path": "tests/baselines/reference/useSharedArrayBuffer4.symbols"
          },
          {
            "path": "tests/baselines/reference/useSharedArrayBuffer4.types"
          },
          {
            "path": "tests/baselines/reference/useSharedArrayBuffer5.js"
          },
          {
            "path": "tests/baselines/reference/useSharedArrayBuffer5.symbols"
          },
          {
            "path": "tests/baselines/reference/useSharedArrayBuffer5.types"
          },
          {
            "path": "tests/cases/conformance/es2017/useSharedArrayBuffer4.ts"
          },
          {
            "path": "tests/cases/conformance/es2017/useSharedArrayBuffer5.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6M2s7K",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250227204102665 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/61315",
      "mergedAt": "2025-02-27T20:58:31Z",
      "updatedAt": "2025-02-27T20:58:32Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "011f7e4ee5a102483f7e3397814bea185f4111a1"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6MGJ4f",
      "title": "Ban old-style type assertions under erasableSyntaxOnly",
      "url": "https://github.com/microsoft/TypeScript/pull/61244",
      "mergedAt": "2025-02-28T19:10:43Z",
      "updatedAt": "2025-03-19T21:40:30Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "15392346d05045742e653eab5c87538ff2a3c863"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.errors.txt"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.js"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.symbols"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.types"
          },
          {
            "path": "tests/cases/compiler/erasableSyntaxOnly.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6NFKvA",
      "title": "Bump the github-actions group with 2 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/61333",
      "mergedAt": "2025-03-03T17:46:35Z",
      "updatedAt": "2025-03-03T17:46:38Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "47442d958c4d906b75050a27be4570bb6018713e"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6NM_Gr",
      "title": "Rename type parameters when they are shadowed.",
      "url": "https://github.com/microsoft/TypeScript/pull/61342",
      "mergedAt": "2025-03-04T19:34:33Z",
      "updatedAt": "2025-03-04T19:36:37Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c85e626d8e17427a6865521737b45ccbbe9c78ef"
      },
      "author": {
        "login": "dragomirtitian"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/expressionToTypeNode.ts"
          },
          {
            "path": "tests/baselines/reference/declarationEmitShadowing.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitShadowing.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitShadowing.types"
          },
          {
            "path": "tests/cases/compiler/declarationEmitShadowing.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6NsLKD",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250306202248269 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/61368",
      "mergedAt": "2025-03-06T20:41:55Z",
      "updatedAt": "2025-03-06T20:41:56Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "1efdcd9ff7d6566cf9bf10975b6fc8ffb0b53c9b"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6N6swQ",
      "title": "Bump github/codeql-action from 3.28.10 to 3.28.11 in the github-actions group",
      "url": "https://github.com/microsoft/TypeScript/pull/61387",
      "mergedAt": "2025-03-10T16:17:17Z",
      "updatedAt": "2025-03-10T16:17:19Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0aac72020ee8414218273f654eb7ce1dc2dd0d6b"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6OBCRF",
      "title": "Fix serialization of accessor types in declaration files.",
      "url": "https://github.com/microsoft/TypeScript/pull/61392",
      "mergedAt": "2025-03-14T19:36:08Z",
      "updatedAt": "2025-03-14T19:38:50Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "a00b324ab2e9a303e8b2d94f3e0b2f3aa4975a5c"
      },
      "author": {
        "login": "dragomirtitian"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/expressionToTypeNode.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/declarationEmitGenericTypeParamerSerialization.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitGenericTypeParamerSerialization.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitGenericTypeParamerSerialization.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitGenericTypeParamerSerialization2.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitGenericTypeParamerSerialization2.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitGenericTypeParamerSerialization2.types"
          },
          {
            "path": "tests/baselines/reference/discriminateWithDivergentAccessors1.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.types"
          },
          {
            "path": "tests/baselines/reference/objectLiteralShorthandPropertiesErrorFromNotUsingIdentifier.types"
          },
          {
            "path": "tests/cases/compiler/declarationEmitGenericTypeParamerSerialization.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitGenericTypeParamerSerialization2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6G0vFS",
      "title": "fix(60908): Unexpected \"'Type' is declared but its value is never read.\" error with jsdoc @import syntax",
      "url": "https://github.com/microsoft/TypeScript/pull/60921",
      "mergedAt": "2025-03-17T20:29:48Z",
      "updatedAt": "2025-03-17T20:50:49Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ee3dd7264b23e58bbad86d08a475cac78f330abf"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/binder.ts"
          },
          {
            "path": "tests/baselines/reference/importTag24.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importTag24.symbols"
          },
          {
            "path": "tests/baselines/reference/importTag24.types"
          },
          {
            "path": "tests/baselines/reference/importTag25.symbols"
          },
          {
            "path": "tests/baselines/reference/importTag25.types"
          },
          {
            "path": "tests/cases/conformance/jsdoc/importTag24.ts"
          },
          {
            "path": "tests/cases/conformance/jsdoc/importTag25.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6PW12p",
      "title": "Fix errors on type assertions in erasableSyntaxOnly",
      "url": "https://github.com/microsoft/TypeScript/pull/61452",
      "mergedAt": "2025-03-19T23:25:22Z",
      "updatedAt": "2025-03-19T23:25:25Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "4dc677b292354f4b9162452b2e00f4d7dd118221"
      },
      "author": {
        "login": "DanielRosenwasser"
      },
      "assignees": {
        "nodes": [
          {
            "login": "DanielRosenwasser"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly2.js"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly2.symbols"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly2.types"
          },
          {
            "path": "tests/cases/compiler/erasableSyntaxOnly2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6PyV1r",
      "title": "Bump the github-actions group with 4 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/61474",
      "mergedAt": "2025-03-24T11:23:27Z",
      "updatedAt": "2025-03-24T11:23:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "19b777260b26aac5707b1efd34202054164d4a9d"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/accept-baselines-fix-lints.yaml"
          },
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/insiders.yaml"
          },
          {
            "path": ".github/workflows/lkg.yml"
          },
          {
            "path": ".github/workflows/new-release-branch.yaml"
          },
          {
            "path": ".github/workflows/nightly.yaml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          },
          {
            "path": ".github/workflows/set-version.yaml"
          },
          {
            "path": ".github/workflows/sync-branch.yaml"
          },
          {
            "path": ".github/workflows/twoslash-repros.yaml"
          },
          {
            "path": ".github/workflows/update-package-lock.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6P8dFA",
      "title": "Fix `lib.includes('dom')` check in `containerSeemsToBeEmptyDomElement`",
      "url": "https://github.com/microsoft/TypeScript/pull/61481",
      "mergedAt": "2025-03-25T23:24:53Z",
      "updatedAt": "2025-03-25T23:24:53Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "29e6d6689dfb422e4f1395546c1917d07e1f664d"
      },
      "author": {
        "login": "frodi-karlsson"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "MartinJohns"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/missingDomElement_UsingDomLib.errors.txt"
          },
          {
            "path": "tests/baselines/reference/missingDomElement_UsingDomLib.js"
          },
          {
            "path": "tests/baselines/reference/missingDomElement_UsingDomLib.symbols"
          },
          {
            "path": "tests/baselines/reference/missingDomElement_UsingDomLib.types"
          },
          {
            "path": "tests/cases/compiler/missingDomElement_UsingDomLib.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6QP90E",
      "title": "Add new release publisher yaml",
      "url": "https://github.com/microsoft/TypeScript/pull/61491",
      "mergedAt": "2025-03-31T23:10:52Z",
      "updatedAt": "2025-03-31T23:10:56Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c7a559eeae535724724ff7dac4e698129649be6c"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "DISMISSED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "azure-pipelines.release-publish.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Q2EwT",
      "title": "Fix incorrect name in new release pipeline",
      "url": "https://github.com/microsoft/TypeScript/pull/61514",
      "mergedAt": "2025-03-31T23:19:05Z",
      "updatedAt": "2025-03-31T23:19:09Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "7b26d2eba5626e15b9e85e8c3adff1e1c0583c6f"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "azure-pipelines.release-publish.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5YkT3c",
      "title": "Fixed a symbol display crash on expando members write locations",
      "url": "https://github.com/microsoft/TypeScript/pull/55478",
      "mergedAt": "2025-04-01T20:40:59Z",
      "updatedAt": "2025-04-01T21:18:14Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "89c572ca0cbed845e374c29ce3a9ef28715160be"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/symbolDisplay.ts"
          },
          {
            "path": "tests/cases/fourslash/quickInfoOnExpandoLikePropertyWithSetterDeclarationJs1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickInfoOnExpandoLikePropertyWithSetterDeclarationJs2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6QtfRR",
      "title": "Bump github/codeql-action from 3.28.12 to 3.28.13 in the github-actions group",
      "url": "https://github.com/microsoft/TypeScript/pull/61509",
      "mergedAt": "2025-04-01T20:54:16Z",
      "updatedAt": "2025-04-01T20:54:18Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "7205eda454ce8ac7313699bd5905ed3f689142bf"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5Jx5-8",
      "title": "Exclude completions of binding pattern variable initializers",
      "url": "https://github.com/microsoft/TypeScript/pull/52723",
      "mergedAt": "2025-04-02T20:47:43Z",
      "updatedAt": "2025-04-03T05:05:41Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ba663f6ac25ec7774b38a3fad04fe8ea016f9420"
      },
      "author": {
        "login": "zardoy"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/completions.ts"
          },
          {
            "path": "tests/cases/fourslash/completionListWithoutVariableinitializer.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6RKi5M",
      "title": "Convert release publishing inputs into parameters",
      "url": "https://github.com/microsoft/TypeScript/pull/61523",
      "mergedAt": "2025-04-04T19:22:19Z",
      "updatedAt": "2025-04-04T19:22:21Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "83dc0bb2ed91fe0815ab28dc3ff95fae7425e413"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "DISMISSED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "DISMISSED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "azure-pipelines.release-publish.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6LS3pA",
      "title": "Treat functions with `@type` tags on parameters as typed in JS files",
      "url": "https://github.com/microsoft/TypeScript/pull/61177",
      "mergedAt": "2025-04-14T22:35:21Z",
      "updatedAt": "2025-04-14T22:35:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "eef7c14ef163696d5ea85275ea122e28fb4eeab7"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/jsdocTypeTagOnParameter1.symbols"
          },
          {
            "path": "tests/baselines/reference/jsdocTypeTagOnParameter1.types"
          },
          {
            "path": "tests/cases/conformance/jsdoc/jsdocTypeTagOnParameter1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6QSuE8",
      "title": "Expandable hover",
      "url": "https://github.com/microsoft/TypeScript/pull/61492",
      "mergedAt": "2025-04-15T19:14:38Z",
      "updatedAt": "2025-04-18T23:15:39Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "069de743dbd17b47cc2fc58e1d16da5410911284"
      },
      "author": {
        "login": "gabritto"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/emitter.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/harness/client.ts"
          },
          {
            "path": "src/harness/fourslashImpl.ts"
          },
          {
            "path": "src/harness/fourslashInterfaceImpl.ts"
          },
          {
            "path": "src/server/protocol.ts"
          },
          {
            "path": "src/server/session.ts"
          },
          {
            "path": "src/services/services.ts"
          },
          {
            "path": "src/services/symbolDisplay.ts"
          },
          {
            "path": "src/services/types.ts"
          },
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosity1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosity2.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosity3.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityClass1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityClass2.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityConditionalType.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityEnum.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityFunction.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityImport.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityIndexSignature.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityIndexType.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityIndexedAccessType.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityInterface1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityInterface2.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityIntersection1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityJs.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityLibType.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityMappedType.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityNamespace.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityObjectType1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityRecursiveType.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityServer.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityToplevelTruncation.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityTruncation.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityTuple.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityTypeParameter.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityTypeof.baseline"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/quickinfoVerbosityServer.js"
          },
          {
            "path": "tests/cases/fourslash/fourslash.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosity1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosity2.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosity3.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityClass1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityClass2.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityConditionalType.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityEnum.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityFunction.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityImport.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityIndexSignature.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityIndexType.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityIndexedAccessType.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityInterface1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityInterface2.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityIntersection1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityJs.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityLibType.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityMappedType.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityNamespace.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityObjectType1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityRecursiveType.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityToplevelTruncation.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityTruncation.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityTuple.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityTypeParameter.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityTypeof.ts"
          },
          {
            "path": "tests/cases/fourslash/server/quickinfoVerbosityServer.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6StDeg",
      "title": "Fix crash when serializing default export in error",
      "url": "https://github.com/microsoft/TypeScript/pull/61582",
      "mergedAt": "2025-04-16T16:43:33Z",
      "updatedAt": "2025-04-24T20:47:15Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6afd0fb73fa18a48021ed54f44a0c51794519bf6"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "boneskull"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentExpressionIsExpressionNode.errors.txt"
          },
          {
            "path": "tests/cases/compiler/exportAssignmentExpressionIsExpressionNode.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6S24xe",
      "title": "Deemphasize old JSX transform",
      "url": "https://github.com/microsoft/TypeScript/pull/61586",
      "mergedAt": "2025-04-17T18:02:56Z",
      "updatedAt": "2025-04-19T15:51:15Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0a1aa6d6ebdfa16b82f4a6aaf282089b1d484e05"
      },
      "author": {
        "login": "eps1lon"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse empty options of --jsx.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of jsx to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of jsx to compiler-options with jsonSourceFile api.js"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6TPdGZ",
      "title": "Bump the github-actions group across 1 directory with 3 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/61601",
      "mergedAt": "2025-04-21T17:15:39Z",
      "updatedAt": "2025-04-21T17:15:41Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "62b172b515452b3fe19f4f2da81d4869caedc904"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/accept-baselines-fix-lints.yaml"
          },
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/insiders.yaml"
          },
          {
            "path": ".github/workflows/lkg.yml"
          },
          {
            "path": ".github/workflows/new-release-branch.yaml"
          },
          {
            "path": ".github/workflows/nightly.yaml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          },
          {
            "path": ".github/workflows/set-version.yaml"
          },
          {
            "path": ".github/workflows/sync-branch.yaml"
          },
          {
            "path": ".github/workflows/twoslash-repros.yaml"
          },
          {
            "path": ".github/workflows/update-package-lock.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6KC_ec",
      "title": "Fix #61098",
      "url": "https://github.com/microsoft/TypeScript/pull/61113",
      "mergedAt": "2025-04-24T20:55:56Z",
      "updatedAt": "2025-05-02T20:28:47Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "75202af2ccb8c797180f42f3317373ddc5793ad9"
      },
      "author": {
        "login": "HansBrende"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "HansBrende"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/assignmentToConditionalBrandedStringTemplateOrMapping.js"
          },
          {
            "path": "tests/baselines/reference/assignmentToConditionalBrandedStringTemplateOrMapping.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentToConditionalBrandedStringTemplateOrMapping.types"
          },
          {
            "path": "tests/cases/compiler/assignmentToConditionalBrandedStringTemplateOrMapping.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6SDpHe",
      "title": "Add the `.getNonPrimitiveType()` method to the `TypeChecker`",
      "url": "https://github.com/microsoft/TypeScript/pull/61562",
      "mergedAt": "2025-04-24T21:08:52Z",
      "updatedAt": "2025-04-24T21:08:52Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "38b78b70d291dc788569d2a58a5a52a7d479476d"
      },
      "author": {
        "login": "mrazauskas"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6MWuAC",
      "title": "fix(61258): Renaming namespace with const enum doesn't update enum references",
      "url": "https://github.com/microsoft/TypeScript/pull/61263",
      "mergedAt": "2025-04-24T21:35:05Z",
      "updatedAt": "2025-04-24T21:35:05Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "11e79327598db412a161616849041487673fadab"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/findAllReferences.ts"
          },
          {
            "path": "tests/baselines/reference/findAllRefs_importType_exportEquals.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/renameNamespace.baseline.jsonc"
          },
          {
            "path": "tests/cases/fourslash/renameNamespace.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc40FViv",
      "title": "`arguments` should not be allowed in class static block",
      "url": "https://github.com/microsoft/TypeScript/pull/48172",
      "mergedAt": "2025-05-02T13:38:34Z",
      "updatedAt": "2025-05-02T13:49:12Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e37ca49c70e683187000352b03da1ee8e24e7655"
      },
      "author": {
        "login": "Zzzen"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Zzzen"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Zzzen"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/argumentsUsedInClassFieldInitializerOrStaticInitializationBlock.errors.txt"
          },
          {
            "path": "tests/baselines/reference/argumentsUsedInClassFieldInitializerOrStaticInitializationBlock.js"
          },
          {
            "path": "tests/baselines/reference/argumentsUsedInClassFieldInitializerOrStaticInitializationBlock.symbols"
          },
          {
            "path": "tests/baselines/reference/argumentsUsedInClassFieldInitializerOrStaticInitializationBlock.types"
          },
          {
            "path": "tests/baselines/reference/classStaticBlock6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classStaticBlock6.js"
          },
          {
            "path": "tests/baselines/reference/classStaticBlock6.symbols"
          },
          {
            "path": "tests/baselines/reference/classStaticBlock6.types"
          },
          {
            "path": "tests/cases/compiler/argumentsUsedInClassFieldInitializerOrStaticInitializationBlock.ts"
          },
          {
            "path": "tests/cases/conformance/classes/classStaticBlock/classStaticBlock6.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc49dXYg",
      "title": "check usage before declaration for decorators",
      "url": "https://github.com/microsoft/TypeScript/pull/50372",
      "mergedAt": "2025-05-02T21:01:09Z",
      "updatedAt": "2025-05-03T00:09:55Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "5e367783305736672ffa3d17097a62ead1db3039"
      },
      "author": {
        "login": "Zzzen"
      },
      "assignees": {
        "nodes": [
          {
            "login": "navya9singh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Zzzen"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/blockScopedVariablesUseBeforeDef.errors.txt"
          },
          {
            "path": "tests/baselines/reference/blockScopedVariablesUseBeforeDef.js"
          },
          {
            "path": "tests/baselines/reference/blockScopedVariablesUseBeforeDef.symbols"
          },
          {
            "path": "tests/baselines/reference/blockScopedVariablesUseBeforeDef.types"
          },
          {
            "path": "tests/baselines/reference/decoratorUsedBeforeDeclaration.errors.txt"
          },
          {
            "path": "tests/baselines/reference/decoratorUsedBeforeDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/decoratorUsedBeforeDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/decoratorUsedBeforeDeclaration.types"
          },
          {
            "path": "tests/cases/compiler/blockScopedVariablesUseBeforeDef.ts"
          },
          {
            "path": "tests/cases/compiler/decoratorUsedBeforeDeclaration.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6TOohI",
      "title": "docs(lib): add @throws JSDoc for JSON methods",
      "url": "https://github.com/microsoft/TypeScript/pull/61596",
      "mergedAt": "2025-05-02T22:20:58Z",
      "updatedAt": "2025-05-07T22:02:00Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d88d3a46810bfae0b072beb023a2b09b8026b82c"
      },
      "author": {
        "login": "Joseph-Martre"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/es5.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6UyR--",
      "title": "DOM Update 2025-05-02",
      "url": "https://github.com/microsoft/TypeScript/pull/61647",
      "mergedAt": "2025-05-07T22:02:49Z",
      "updatedAt": "2025-05-07T22:02:51Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "8c62e08448e0ec76203bd519dd39608dbcb31705"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/dom.generated.d.ts"
          },
          {
            "path": "src/lib/dom.iterable.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.iterable.generated.d.ts"
          },
          {
            "path": "tests/baselines/reference/globalThisBlockscopedProperties.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.errors.txt"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.types"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6U-t_1",
      "title": "Add configurable maximum hover length",
      "url": "https://github.com/microsoft/TypeScript/pull/61662",
      "mergedAt": "2025-05-09T20:31:39Z",
      "updatedAt": "2025-05-12T18:10:24Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0ee67b517f008cbdfbccb54187c3a7510e1b089b"
      },
      "author": {
        "login": "gabritto"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/harness/client.ts"
          },
          {
            "path": "src/harness/fourslashImpl.ts"
          },
          {
            "path": "src/harness/fourslashInterfaceImpl.ts"
          },
          {
            "path": "src/server/session.ts"
          },
          {
            "path": "src/services/services.ts"
          },
          {
            "path": "src/services/symbolDisplay.ts"
          },
          {
            "path": "src/services/types.ts"
          },
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityToplevelTruncation1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityToplevelTruncation2.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityTruncation1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityTruncation2.baseline"
          },
          {
            "path": "tests/cases/fourslash/fourslash.ts"
          },
          {
            "path": "tests/cases/fourslash/quickInfoCanBeTruncated.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityToplevelTruncation1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityToplevelTruncation2.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityTruncation1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityTruncation2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6U2uWl",
      "title": "Fix unwanted constant comparisons potentially causing bugs",
      "url": "https://github.com/microsoft/TypeScript/pull/61655",
      "mergedAt": "2025-05-09T22:20:45Z",
      "updatedAt": "2025-05-09T22:54:13Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "7156300cee63147d8ec5c58c80b3fef2ab2aec77"
      },
      "author": {
        "login": "ulrichstark"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "IllusionMH"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "ulrichstark"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/resolutionCache.ts"
          },
          {
            "path": "src/harness/fourslashImpl.ts"
          },
          {
            "path": "tests/baselines/reference/jsdocParameterTagSnippetCompletion1.baseline"
          },
          {
            "path": "tests/baselines/reference/jsdocParameterTagSnippetCompletion2.baseline"
          },
          {
            "path": "tests/baselines/reference/quickInfoAlias.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosity3.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityImport.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityNamespace.baseline"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5TyhxU",
      "title": "Preserve type parameter constraint in emitted mapped types while preserving their distributivity",
      "url": "https://github.com/microsoft/TypeScript/pull/54759",
      "mergedAt": "2025-05-12T17:54:34Z",
      "updatedAt": "2025-05-13T16:28:14Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0fb5e3a8cff7f18a30cdcee2ead37c727674ccc5"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/computedTypesKeyofNoIndexSignatureType.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitMappedTypeDistributivityPreservesConstraints.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitMappedTypeDistributivityPreservesConstraints.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitMappedTypePreservesTypeParameterConstraint.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitMappedTypePreservesTypeParameterConstraint.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitMappedTypePreservesTypeParameterConstraint.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeGenericInstantiationPreservesHomomorphism.js"
          },
          {
            "path": "tests/baselines/reference/mappedTypeGenericInstantiationPreservesHomomorphism.types"
          },
          {
            "path": "tests/baselines/reference/recursiveConditionalCrash3.types"
          },
          {
            "path": "tests/cases/compiler/declarationEmitMappedTypePreservesTypeParameterConstraint.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6GPyYo",
      "title": "Stop reassigning `.valueDeclaration` to avoid replacing earlier declarations with late ones",
      "url": "https://github.com/microsoft/TypeScript/pull/60857",
      "mergedAt": "2025-05-15T16:51:34Z",
      "updatedAt": "2025-05-19T04:34:27Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b86ab7dbe0eb2f1c9a624486d72590d638495c97"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DingJun1028"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS1.js"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS1.symbols"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS1.types"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS2.js"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS2.symbols"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS2.types"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS3.js"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS3.symbols"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS3.types"
          },
          {
            "path": "tests/baselines/reference/lateBoundMethodNameAssigmentJS.js"
          },
          {
            "path": "tests/baselines/reference/lateBoundMethodNameAssigmentJS.symbols"
          },
          {
            "path": "tests/baselines/reference/lateBoundMethodNameAssigmentJS.types"
          },
          {
            "path": "tests/cases/compiler/lateBoundAssignmentCandidateJS1.ts"
          },
          {
            "path": "tests/cases/compiler/lateBoundAssignmentCandidateJS2.ts"
          },
          {
            "path": "tests/cases/compiler/lateBoundAssignmentCandidateJS3.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6WZSra",
      "title": "Fix getResolvePackageJsonImports utility",
      "url": "https://github.com/microsoft/TypeScript/pull/61707",
      "mergedAt": "2025-05-16T00:49:36Z",
      "updatedAt": "2025-05-16T00:49:36Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "81c951894e93bdc37c6916f18adcd80de76679bc"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sheetalkamat"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/utilities.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Wwf1m",
      "title": "Handle lock file 3 version when caching the typings ensuring we can reuse already installed packages ",
      "url": "https://github.com/microsoft/TypeScript/pull/61730",
      "mergedAt": "2025-05-21T20:58:23Z",
      "updatedAt": "2025-05-21T20:58:25Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b504a1eed45e35b5f54694a1e0a09f35d0a5663c"
      },
      "author": {
        "login": "sheetalkamat"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sheetalkamat"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/testRunner/unittests/tsserver/typingsInstaller.ts"
          },
          {
            "path": "src/typingsInstallerCore/typingsInstaller.ts"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/expired-cache-entry-lockFile3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/non-expired-cache-entry-lockFile3.js"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Yfvte",
      "title": "Update pr_owners.txt",
      "url": "https://github.com/microsoft/TypeScript/pull/61798",
      "mergedAt": "2025-06-03T21:22:16Z",
      "updatedAt": "2025-06-03T21:22:19Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "44d46714c81e0cadf9067cc32b649c63d2a4f436"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/pr_owners.txt"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6XHnxG",
      "title": "Initialize the map for dts to reference and source to reference when parsing project reference as its always needed",
      "url": "https://github.com/microsoft/TypeScript/pull/61746",
      "mergedAt": "2025-06-04T16:55:15Z",
      "updatedAt": "2025-06-04T16:55:16Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3dd0a35032ca78d8b220177362398b03457fb2d8"
      },
      "author": {
        "login": "sheetalkamat"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sheetalkamat"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/builderState.ts"
          },
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/moduleSpecifiers.ts"
          },
          {
            "path": "src/compiler/program.ts"
          },
          {
            "path": "src/compiler/resolutionCache.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/server/project.ts"
          },
          {
            "path": "src/services/utilities.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6ZFENf",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250604192236101 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/61815",
      "mergedAt": "2025-06-04T19:51:27Z",
      "updatedAt": "2025-06-04T19:51:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2b88aebaaae3dc431a56667f7b0dbc42ae329ec6"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Xjh1x",
      "title": "fix(61747): for (using of = is incorrectly parsed",
      "url": "https://github.com/microsoft/TypeScript/pull/61764",
      "mergedAt": "2025-06-05T23:37:41Z",
      "updatedAt": "2025-06-05T23:37:41Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "a591ca3fdcf056fbb70d4b4a964c8dd47bd412b4"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "JLHwung"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "JLHwung"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/parser.ts"
          },
          {
            "path": "tests/baselines/reference/usingDeclarationsInForOf.4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/usingDeclarationsInForOf.4.js"
          },
          {
            "path": "tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsInForOf.4.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6X5-lB",
      "title": "fix(checker): report error when using bigint as enum key",
      "url": "https://github.com/microsoft/TypeScript/pull/61777",
      "mergedAt": "2025-06-05T23:37:47Z",
      "updatedAt": "2025-06-06T01:00:24Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ac03ba4f021fce5a78bcdde39952879d0a4f35eb"
      },
      "author": {
        "login": "magic-akari"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "magic-akari"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "magic-akari"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/enumWithBigint.errors.txt"
          },
          {
            "path": "tests/baselines/reference/enumWithBigint.js"
          },
          {
            "path": "tests/baselines/reference/enumWithBigint.symbols"
          },
          {
            "path": "tests/baselines/reference/enumWithBigint.types"
          },
          {
            "path": "tests/cases/compiler/enumWithBigint.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6ZDp6V",
      "title": "tsc --init update",
      "url": "https://github.com/microsoft/TypeScript/pull/61813",
      "mergedAt": "2025-06-06T19:03:28Z",
      "updatedAt": "2025-06-07T14:23:44Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "cd341998a98b71275d4b4d6f41c08d9d0eb75d93"
      },
      "author": {
        "login": "RyanCavanaugh"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/executeCommandLine.ts"
          },
          {
            "path": "src/testRunner/unittests/config/initializeTSConfig.ts"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Default initialized TSConfig/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with --help/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with --watch/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with advanced options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with boolean value compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with enum value compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with files options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with incorrect compiler option value/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with incorrect compiler option/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with list compiler options with enum value/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with list compiler options/tsconfig.json"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FKC98",
      "title": "Add support for `import defer` proposal",
      "url": "https://github.com/microsoft/TypeScript/pull/60757",
      "mergedAt": "2025-06-06T19:11:21Z",
      "updatedAt": "2025-06-09T10:04:50Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "a69c6d0bb7a382538c8bbbecfb96431badb5c873"
      },
      "author": {
        "login": "nicolo-ribaudo"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          },
          {
            "login": "andrewbranch"
          },
          {
            "login": "jakebailey"
          },
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "nicolo-ribaudo"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Jack-Works"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "nicolo-ribaudo"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "nicolo-ribaudo"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/emitter.ts"
          },
          {
            "path": "src/compiler/factory/nodeFactory.ts"
          },
          {
            "path": "src/compiler/factory/utilities.ts"
          },
          {
            "path": "src/compiler/parser.ts"
          },
          {
            "path": "src/compiler/scanner.ts"
          },
          {
            "path": "src/compiler/transformers/declarations.ts"
          },
          {
            "path": "src/compiler/transformers/jsx.ts"
          },
          {
            "path": "src/compiler/transformers/module/esnextAnd2015.ts"
          },
          {
            "path": "src/compiler/transformers/ts.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/compiler/utilitiesPublic.ts"
          },
          {
            "path": "src/compiler/visitorPublic.ts"
          },
          {
            "path": "src/services/codefixes/convertToTypeOnlyImport.ts"
          },
          {
            "path": "src/services/codefixes/importFixes.ts"
          },
          {
            "path": "src/services/codefixes/requireInTs.ts"
          },
          {
            "path": "src/services/codefixes/splitTypeOnlyImport.ts"
          },
          {
            "path": "src/services/organizeImports.ts"
          },
          {
            "path": "src/services/refactors/convertImport.ts"
          },
          {
            "path": "src/services/refactors/moveToFile.ts"
          },
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "src/testRunner/unittests/transform.ts"
          },
          {
            "path": "tests/baselines/reference/JSDocParsing/DocComments.parsesCorrectly.importTag1.json"
          },
          {
            "path": "tests/baselines/reference/JSDocParsing/DocComments.parsesCorrectly.importTag2.json"
          },
          {
            "path": "tests/baselines/reference/JSDocParsing/DocComments.parsesCorrectly.importTag3.json"
          },
          {
            "path": "tests/baselines/reference/JSDocParsing/DocComments.parsesCorrectly.importTag4.json"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=commonjs).js"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=commonjs).symbols"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=commonjs).types"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=es2015).js"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=es2015).symbols"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=es2015).types"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=es2020).errors.txt"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=es2020).js"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=es2020).symbols"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=es2020).types"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=esnext).js"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=esnext).symbols"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=esnext).types"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=preserve).js"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=preserve).symbols"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=preserve).types"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDeferInvalidStandalone.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDeferInvalidStandalone.js"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDeferInvalidStandalone.symbols"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDeferInvalidStandalone.types"
          },
          {
            "path": "tests/baselines/reference/exportDeferInvalid.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportDeferInvalid.js"
          },
          {
            "path": "tests/baselines/reference/exportDeferInvalid.symbols"
          },
          {
            "path": "tests/baselines/reference/exportDeferInvalid.types"
          },
          {
            "path": "tests/baselines/reference/importDefaultBindingDefer.js"
          },
          {
            "path": "tests/baselines/reference/importDefaultBindingDefer.symbols"
          },
          {
            "path": "tests/baselines/reference/importDefaultBindingDefer.types"
          },
          {
            "path": "tests/baselines/reference/importDeferComments.js"
          },
          {
            "path": "tests/baselines/reference/importDeferComments.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferComments.types"
          },
          {
            "path": "tests/baselines/reference/importDeferDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/importDeferDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferDeclaration.types"
          },
          {
            "path": "tests/baselines/reference/importDeferInvalidDefault.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferInvalidDefault.js"
          },
          {
            "path": "tests/baselines/reference/importDeferInvalidDefault.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferInvalidDefault.types"
          },
          {
            "path": "tests/baselines/reference/importDeferInvalidNamed.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferInvalidNamed.js"
          },
          {
            "path": "tests/baselines/reference/importDeferInvalidNamed.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferInvalidNamed.types"
          },
          {
            "path": "tests/baselines/reference/importDeferJsdoc.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferJsdoc.js"
          },
          {
            "path": "tests/baselines/reference/importDeferJsdoc.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferJsdoc.types"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=commonjs).js"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=commonjs).symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=commonjs).types"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=es2015).js"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=es2015).symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=es2015).types"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=es2020).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=es2020).js"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=es2020).symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=es2020).types"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=esnext).js"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=esnext).symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=esnext).types"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=preserve).js"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=preserve).symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=preserve).types"
          },
          {
            "path": "tests/baselines/reference/importDeferTypeConflict1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferTypeConflict1.js"
          },
          {
            "path": "tests/baselines/reference/importDeferTypeConflict1.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferTypeConflict1.types"
          },
          {
            "path": "tests/baselines/reference/importDeferTypeConflict2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferTypeConflict2.js"
          },
          {
            "path": "tests/baselines/reference/importDeferTypeConflict2.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferTypeConflict2.types"
          },
          {
            "path": "tests/baselines/reference/importMetaPropertyInvalidInCall.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importMetaPropertyInvalidInCall.js"
          },
          {
            "path": "tests/baselines/reference/importMetaPropertyInvalidInCall.symbols"
          },
          {
            "path": "tests/baselines/reference/importMetaPropertyInvalidInCall.types"
          },
          {
            "path": "tests/baselines/reference/skipJSDocParsing/link-ParseForTypeErrors-file.js.diff"
          },
          {
            "path": "tests/baselines/reference/skipJSDocParsing/link-ParseForTypeErrors-file.ts.diff"
          },
          {
            "path": "tests/baselines/reference/skipJSDocParsing/link-ParseForTypeInfo-file.js.diff"
          },
          {
            "path": "tests/baselines/reference/skipJSDocParsing/link-ParseForTypeInfo-file.ts.diff"
          },
          {
            "path": "tests/baselines/reference/skipJSDocParsing/link-ParseNone-file.js.diff"
          },
          {
            "path": "tests/baselines/reference/skipJSDocParsing/link-ParseNone-file.ts.diff"
          },
          {
            "path": "tests/baselines/reference/typeofImportDefer.errors.txt"
          },
          {
            "path": "tests/baselines/reference/typeofImportDefer.js"
          },
          {
            "path": "tests/baselines/reference/typeofImportDefer.symbols"
          },
          {
            "path": "tests/baselines/reference/typeofImportDefer.types"
          },
          {
            "path": "tests/cases/conformance/importDefer/dynamicImportDefer.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/dynamicImportDeferInvalidStandalone.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/exportDeferInvalid.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importDefaultBindingDefer.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importDeferComments.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importDeferDeclaration.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importDeferInvalidDefault.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importDeferInvalidNamed.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importDeferNamespace.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importDeferTypeConflict1.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importDeferTypeConflict2.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importMetaPropertyInvalidInCall.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/typeofImportDefer.ts"
          },
          {
            "path": "tests/cases/conformance/jsdoc/importDeferJsdoc.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Fgc92",
      "title": "feat: add Error.isError() to ESNext lib",
      "url": "https://github.com/microsoft/TypeScript/pull/60788",
      "mergedAt": "2025-06-06T19:16:36Z",
      "updatedAt": "2025-06-06T19:16:36Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ffd98c17739b07d943571005dc0eadc3b14e6c9c"
      },
      "author": {
        "login": "dirkluijk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Renegade334"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/lib/esnext.d.ts"
          },
          {
            "path": "src/lib/esnext.error.d.ts"
          },
          {
            "path": "src/lib/libs.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse --lib option with extra comma.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse --lib option with trailing white-space.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse invalid option of library flags.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs array to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs array to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert trailing-whitespace string option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert trailing-whitespace string option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/libReplacement(libreplacement=true).trace.json"
          },
          {
            "path": "tests/baselines/reference/modulePreserve2.trace.json"
          },
          {
            "path": "tests/baselines/reference/modulePreserve3.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNext.trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNextEsm.trace.json"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/does-not-add-color-when-NO_COLOR-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped-when-host-can't-provide-terminal-width.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true-useFsEventsOnParentDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-event-ends-with-tilde.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-occurs-when-file-is-still-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-dynamic-polling-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-watchDirectory-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-watchFile-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders-with-synchronousWatchDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-renaming-a-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-with-outDir-and-declaration-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-fallbackPolling-option.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-watchDirectory-option.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/file-rename-on-wsl2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/does-not-expose-paths.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/recursive-directory-does-not-watch-files-starting-with-dot-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-dynamic-polling-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-non-recursive-watchDirectory-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-watchFile-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/watching-npm-install-in-codespaces-where-workspaces-folder-is-hosted-at-root.js"
          },
          {
            "path": "tests/baselines/reference/typesVersions.ambientModules.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.emptyTypes.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.justIndex.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.ambient.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToSelf.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToUnmapped.trace.json"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Qr-ue",
      "title": "Cache mapper instantiations",
      "url": "https://github.com/microsoft/TypeScript/pull/61505",
      "mergedAt": "2025-06-06T19:21:17Z",
      "updatedAt": "2025-06-06T19:21:18Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "51dcd9001d9dceb98d248f574f39f57497a44968"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/callsOnComplexSignatures.types"
          },
          {
            "path": "tests/baselines/reference/checkJsxChildrenCanBeTupleType.types"
          },
          {
            "path": "tests/baselines/reference/checkJsxChildrenProperty16.types"
          },
          {
            "path": "tests/baselines/reference/checkJsxUnionSFXContextualTypeInferredCorrectly.types"
          },
          {
            "path": "tests/baselines/reference/circularBaseConstraint.types"
          },
          {
            "path": "tests/baselines/reference/circularlySimplifyingConditionalTypesNoCrash.types"
          },
          {
            "path": "tests/baselines/reference/conditionalTypeDiscriminatingLargeUnionRegularTypeFetchingSpeedReasonable.types"
          },
          {
            "path": "tests/baselines/reference/conditionalTypeDoesntSpinForever.types"
          },
          {
            "path": "tests/baselines/reference/conditionalTypeVarianceBigArrayConstraintsPerformance.types"
          },
          {
            "path": "tests/baselines/reference/conditionalTypes1.types"
          },
          {
            "path": "tests/baselines/reference/contextualParameterAndSelfReferentialConstraint1.symbols"
          },
          {
            "path": "tests/baselines/reference/contextualParameterAndSelfReferentialConstraint1.types"
          },
          {
            "path": "tests/baselines/reference/contextuallyTypedJsxChildren.types"
          },
          {
            "path": "tests/baselines/reference/controlFlowOptionalChain3.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitHigherOrderRetainedGenerics.types"
          },
          {
            "path": "tests/baselines/reference/declarationsWithRecursiveInternalTypesProduceUniqueTypeParams.types"
          },
          {
            "path": "tests/baselines/reference/deeplyNestedMappedTypes.types"
          },
          {
            "path": "tests/baselines/reference/dependentDestructuredVariables.types"
          },
          {
            "path": "tests/baselines/reference/divideAndConquerIntersections.types"
          },
          {
            "path": "tests/baselines/reference/errorInfoForRelatedIndexTypesNoConstraintElaboration.types"
          },
          {
            "path": "tests/baselines/reference/excessiveStackDepthFlatArray.types"
          },
          {
            "path": "tests/baselines/reference/flatArrayNoExcessiveStackDepth.types"
          },
          {
            "path": "tests/baselines/reference/ignoredJsxAttributes.types"
          },
          {
            "path": "tests/baselines/reference/intraExpressionInferencesJsx.types"
          },
          {
            "path": "tests/baselines/reference/isomorphicMappedTypeInference.types"
          },
          {
            "path": "tests/baselines/reference/jsDeclarationsReactComponents.types"
          },
          {
            "path": "tests/baselines/reference/jsxCallElaborationCheckNoCrash1.types"
          },
          {
            "path": "tests/baselines/reference/jsxChildrenIndividualErrorElaborations.types"
          },
          {
            "path": "tests/baselines/reference/jsxChildrenWrongType.types"
          },
          {
            "path": "tests/baselines/reference/jsxComplexSignatureHasApplicabilityError.types"
          },
          {
            "path": "tests/baselines/reference/jsxDeclarationsWithEsModuleInteropNoCrash.types"
          },
          {
            "path": "tests/baselines/reference/jsxElementType.types"
          },
          {
            "path": "tests/baselines/reference/jsxElementTypeLiteral.types"
          },
          {
            "path": "tests/baselines/reference/jsxElementTypeLiteralWithGeneric.types"
          },
          {
            "path": "tests/baselines/reference/jsxEmptyExpressionNotCountedAsChild(jsx=react).types"
          },
          {
            "path": "tests/baselines/reference/jsxEmptyExpressionNotCountedAsChild(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxEmptyExpressionNotCountedAsChild(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxExcessPropsAndAssignability.types"
          },
          {
            "path": "tests/baselines/reference/jsxGenericComponentWithSpreadingResultOfGenericFunction.types"
          },
          {
            "path": "tests/baselines/reference/jsxInferenceProducesLiteralAsExpected.types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformChildren(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformChildren(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImport(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImport(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImportPragma(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImportPragma(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformKeyProp(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformKeyProp(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformKeyPropCustomImport(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformKeyPropCustomImport(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformKeyPropCustomImportPragma(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformKeyPropCustomImportPragma(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformNestedSelfClosingChild(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformNestedSelfClosingChild(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformSubstitutesNames(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformSubstitutesNames(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformSubstitutesNamesFragment(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformSubstitutesNamesFragment(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxPartialSpread.types"
          },
          {
            "path": "tests/baselines/reference/longObjectInstantiationChain1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/longObjectInstantiationChain1.symbols"
          },
          {
            "path": "tests/baselines/reference/longObjectInstantiationChain1.types"
          },
          {
            "path": "tests/baselines/reference/longObjectInstantiationChain2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/longObjectInstantiationChain2.symbols"
          },
          {
            "path": "tests/baselines/reference/longObjectInstantiationChain2.types"
          },
          {
            "path": "tests/baselines/reference/longObjectInstantiationChain3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/longObjectInstantiationChain3.symbols"
          },
          {
            "path": "tests/baselines/reference/longObjectInstantiationChain3.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.types"
          },
          {
            "path": "tests/baselines/reference/multiline.types"
          },
          {
            "path": "tests/baselines/reference/promisePermutations.types"
          },
          {
            "path": "tests/baselines/reference/propTypeValidatorInference.types"
          },
          {
            "path": "tests/baselines/reference/reactHOCSpreadprops.types"
          },
          {
            "path": "tests/baselines/reference/reactReadonlyHOCAssignabilityReal.types"
          },
          {
            "path": "tests/baselines/reference/reactReduxLikeDeferredInferenceAllowsAssignment.types"
          },
          {
            "path": "tests/baselines/reference/returnTypePredicateIsInstantiateInContextOfTarget.types"
          },
          {
            "path": "tests/baselines/reference/styledComponentsInstantiaionLimitNotReached.types"
          },
          {
            "path": "tests/baselines/reference/tsxInvokeComponentType.types"
          },
          {
            "path": "tests/baselines/reference/tsxNotUsingApparentTypeOfSFC.types"
          },
          {
            "path": "tests/baselines/reference/tsxResolveExternalModuleExportsTypes.types"
          },
          {
            "path": "tests/baselines/reference/tsxStatelessComponentDefaultProps.types"
          },
          {
            "path": "tests/baselines/reference/typeAliasInstantiationNoLeak1.symbols"
          },
          {
            "path": "tests/baselines/reference/typeAliasInstantiationNoLeak1.types"
          },
          {
            "path": "tests/baselines/reference/typeInferenceWithExcessPropertiesJsx.types"
          },
          {
            "path": "tests/cases/compiler/contextualParameterAndSelfReferentialConstraint1.ts"
          },
          {
            "path": "tests/cases/compiler/longObjectInstantiationChain1.ts"
          },
          {
            "path": "tests/cases/compiler/longObjectInstantiationChain2.ts"
          },
          {
            "path": "tests/cases/compiler/longObjectInstantiationChain3.ts"
          },
          {
            "path": "tests/cases/compiler/typeAliasInstantiationNoLeak1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Uxo5A",
      "title": "Add lib.esnext.sharedmemory",
      "url": "https://github.com/microsoft/TypeScript/pull/61646",
      "mergedAt": "2025-06-06T20:33:13Z",
      "updatedAt": "2025-06-06T21:02:42Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "652ed7fea0159dc996dc3d7d2ed47483bbc8ef82"
      },
      "author": {
        "login": "Renegade334"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/lib/esnext.d.ts"
          },
          {
            "path": "src/lib/esnext.sharedmemory.d.ts"
          },
          {
            "path": "src/lib/libs.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse --lib option with extra comma.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse --lib option with trailing white-space.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse invalid option of library flags.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs array to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs array to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert trailing-whitespace string option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert trailing-whitespace string option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/esnextSharedMemory.js"
          },
          {
            "path": "tests/baselines/reference/esnextSharedMemory.symbols"
          },
          {
            "path": "tests/baselines/reference/esnextSharedMemory.types"
          },
          {
            "path": "tests/baselines/reference/libReplacement(libreplacement=true).trace.json"
          },
          {
            "path": "tests/baselines/reference/modulePreserve2.trace.json"
          },
          {
            "path": "tests/baselines/reference/modulePreserve3.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNext.trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNextEsm.trace.json"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/does-not-add-color-when-NO_COLOR-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped-when-host-can't-provide-terminal-width.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true-useFsEventsOnParentDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-event-ends-with-tilde.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-occurs-when-file-is-still-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-dynamic-polling-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-watchDirectory-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-watchFile-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders-with-synchronousWatchDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-renaming-a-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-with-outDir-and-declaration-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-fallbackPolling-option.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-watchDirectory-option.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/file-rename-on-wsl2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/does-not-expose-paths.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/recursive-directory-does-not-watch-files-starting-with-dot-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-dynamic-polling-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-non-recursive-watchDirectory-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-watchFile-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/watching-npm-install-in-codespaces-where-workspaces-folder-is-hosted-at-root.js"
          },
          {
            "path": "tests/baselines/reference/typesVersions.ambientModules.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.emptyTypes.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.justIndex.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.ambient.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToSelf.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToUnmapped.trace.json"
          },
          {
            "path": "tests/cases/conformance/esnext/esnextSharedMemory.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6YGV9l",
      "title": "explicitly disallow `using` in ambient contexts",
      "url": "https://github.com/microsoft/TypeScript/pull/61781",
      "mergedAt": "2025-06-06T20:44:02Z",
      "updatedAt": "2025-06-06T21:02:35Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "1e2494566eb6d352844e00b34b15d67c025d307d"
      },
      "author": {
        "login": "Renegade334"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.16.errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.16.js"
          },
          {
            "path": "tests/baselines/reference/usingDeclarations.16.errors.txt"
          },
          {
            "path": "tests/baselines/reference/usingDeclarations.16.js"
          },
          {
            "path": "tests/cases/conformance/statements/VariableStatements/usingDeclarations/awaitUsingDeclarations.16.ts"
          },
          {
            "path": "tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarations.16.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Zb2ML",
      "title": "Issue \"'{0}' declarations can only be declared inside a block.\" for block-scoped variables in presence of parse errors",
      "url": "https://github.com/microsoft/TypeScript/pull/61824",
      "mergedAt": "2025-06-06T21:00:25Z",
      "updatedAt": "2025-06-06T21:00:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "fa2a0fc5a2f34d5c76dc4b105a93dbe3c4750d5f"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/disallowedBlockScopedInPresenceOfParseErrors1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/disallowedBlockScopedInPresenceOfParseErrors1.symbols"
          },
          {
            "path": "tests/baselines/reference/disallowedBlockScopedInPresenceOfParseErrors1.types"
          },
          {
            "path": "tests/cases/compiler/disallowedBlockScopedInPresenceOfParseErrors1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6ZEIbu",
      "title": "Fix helpers emit for .cjs files in ESM module mode",
      "url": "https://github.com/microsoft/TypeScript/pull/61814",
      "mergedAt": "2025-06-06T22:08:04Z",
      "updatedAt": "2025-06-06T22:08:04Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "7715955f89d4e5c7a26b18f4e15a19e7ae330e6d"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/factory/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/ctsFileInEsnextHelpers.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ctsFileInEsnextHelpers.js"
          },
          {
            "path": "tests/cases/compiler/ctsFileInEsnextHelpers.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6U6S0d",
      "title": "Avoid resolving source prop type when the target is `unknown`/`any`",
      "url": "https://github.com/microsoft/TypeScript/pull/61660",
      "mergedAt": "2025-06-06T22:17:50Z",
      "updatedAt": "2025-06-06T22:17:50Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "355b9e0984671f7eea9040f0ac8b68c16361729a"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/noCircularitySelfReferentialGetter1.symbols"
          },
          {
            "path": "tests/baselines/reference/noCircularitySelfReferentialGetter1.types"
          },
          {
            "path": "tests/baselines/reference/noCircularitySelfReferentialGetter2.symbols"
          },
          {
            "path": "tests/baselines/reference/noCircularitySelfReferentialGetter2.types"
          },
          {
            "path": "tests/baselines/reference/noCircularitySelfReferentialGetter3.symbols"
          },
          {
            "path": "tests/baselines/reference/noCircularitySelfReferentialGetter3.types"
          },
          {
            "path": "tests/baselines/reference/noCircularitySelfReferentialGetter4.symbols"
          },
          {
            "path": "tests/baselines/reference/noCircularitySelfReferentialGetter4.types"
          },
          {
            "path": "tests/baselines/reference/propTypeValidatorInference.types"
          },
          {
            "path": "tests/baselines/reference/tsxReactPropsInferenceSucceedsOnIntersections.types"
          },
          {
            "path": "tests/cases/compiler/noCircularitySelfReferentialGetter1.ts"
          },
          {
            "path": "tests/cases/compiler/noCircularitySelfReferentialGetter2.ts"
          },
          {
            "path": "tests/cases/compiler/noCircularitySelfReferentialGetter3.ts"
          },
          {
            "path": "tests/cases/compiler/noCircularitySelfReferentialGetter4.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6ZYE_E",
      "title": "optimization, reduce memory usage",
      "url": "https://github.com/microsoft/TypeScript/pull/61822",
      "mergedAt": "2025-06-09T18:48:31Z",
      "updatedAt": "2025-06-09T18:48:31Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "97cfa26f2ac4991183347c6f07959f4571dd5eb0"
      },
      "author": {
        "login": "VincentBailly"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/program.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6YqZqd",
      "title": "Add `--module node20`",
      "url": "https://github.com/microsoft/TypeScript/pull/61805",
      "mergedAt": "2025-06-09T21:20:01Z",
      "updatedAt": "2025-09-23T08:34:38Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "cb38d99d08fe9b304b3c5b18a558995280ec7865"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/transformer.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/server/protocol.ts"
          },
          {
            "path": "src/services/codefixes/fixModuleAndTargetOptions.ts"
          },
          {
            "path": "src/services/codefixes/importFixes.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/arbitraryModuleNamespaceIdentifiers_module(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/arbitraryModuleNamespaceIdentifiers_module(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/arbitraryModuleNamespaceIdentifiers_module(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/arbitraryModuleNamespaceIdentifiers_module(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/awaitInNonAsyncFunction.errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.1(target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.1(target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.2(target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.2(target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.3(target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.3(target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarationsInForAwaitOf.3(target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=node20,moduleresolution=bundler).errors.txt"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=node20,moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=node20,moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/cjsErrors(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/cjsErrors(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse empty options of --module.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of module to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of module to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/showConfig/Show TSConfig with transitively implied options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=node20).js"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=node20).types"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=true,module=node20).js"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=true,module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=true,module=node20).types"
          },
          {
            "path": "tests/baselines/reference/emitHelpersWithLocalCollisions(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/emitHelpersWithLocalCollisions(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/emitHelpersWithLocalCollisions(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/esmModuleExports1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/esmModuleExports1.symbols"
          },
          {
            "path": "tests/baselines/reference/esmModuleExports1.types"
          },
          {
            "path": "tests/baselines/reference/esmModuleExports2(esmoduleinterop=false).errors.txt"
          },
          {
            "path": "tests/baselines/reference/esmModuleExports2(esmoduleinterop=false).symbols"
          },
          {
            "path": "tests/baselines/reference/esmModuleExports2(esmoduleinterop=false).types"
          },
          {
            "path": "tests/baselines/reference/esmModuleExports2(esmoduleinterop=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/esmModuleExports2(esmoduleinterop=true).symbols"
          },
          {
            "path": "tests/baselines/reference/esmModuleExports2(esmoduleinterop=true).types"
          },
          {
            "path": "tests/baselines/reference/esmModuleExports3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/esmModuleExports3.symbols"
          },
          {
            "path": "tests/baselines/reference/esmModuleExports3.types"
          },
          {
            "path": "tests/baselines/reference/importAssertion1(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAssertion1(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAssertion2(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAssertion2(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAssertion3(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes1(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes1(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes2(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes2(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes3(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/importCallExpressionErrorInES2015.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importCallExpressionGrammarError.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importCallExpressionNestedES2015.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importCallExpressionNestedES20152.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importMeta(module=commonjs,target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importMeta(module=commonjs,target=esnext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importTag14.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importTag15(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleNodeDefaultImports(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleNodeDefaultImports(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/moduleNodeDefaultImports(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleNodeDefaultImports(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/modulePreserveTopLevelAwait1(target=es2016).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node20,moduleresolution=node16).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node20,moduleresolution=node16).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node20,moduleresolution=node16).types"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node20,moduleresolution=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node20,moduleresolution=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node20,moduleresolution=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeAllowJsPackageSelfName(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeAllowJsPackageSelfName(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeAllowJsPackageSelfName(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeAllowJsPackageSelfName(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModules1(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModules1(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModules1(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModules1(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJs1(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJs1(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJs1(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJs1(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsCjsFromJs(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsCjsFromJs(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsDynamicImport(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsDynamicImport(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsDynamicImport(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportAssignment(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportAssignment(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportAssignment(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportAssignment(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportlessJsModuleDetectionAuto(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportlessJsModuleDetectionAuto(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportlessJsModuleDetectionAuto(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsGeneratedNameCollisions(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsGeneratedNameCollisions(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsGeneratedNameCollisions(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsGeneratedNameCollisions(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportAssignment(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportAssignment(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportAssignment(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportAssignment(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions1(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions1(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions1(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions1(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions2(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions2(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions2(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions2(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions3(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions3(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions3(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions3(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportMeta(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportMeta(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportMeta(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportMeta(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsExclude(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsExclude(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsExclude(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsExclude(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsSynchronousCallErrors(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsSynchronousCallErrors(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsSynchronousCallErrors(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsSynchronousCallErrors(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsTopLevelAwait(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsTopLevelAwait(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsTopLevelAwait(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsTopLevelAwait(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCJSEmit1(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCJSEmit1(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCjsFormatFileAlwaysHasDefault(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCjsFormatFileAlwaysHasDefault(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCjsFormatFileAlwaysHasDefault(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitWithPackageExports(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitWithPackageExports(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitWithPackageExports(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitWithPackageExports(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDynamicImport(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDynamicImport(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDynamicImport(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportAssignments(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportAssignments(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportAssignments(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportAssignments(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksSpecifierResolution(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksSpecifierResolution(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksSpecifierResolution(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksSpecifierResolution(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node20).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsDoubleAsterisk(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSourceTs(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSourceTs(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSourceTs(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSourceTs(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationConditions(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationConditions(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationConditions(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationConditions(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationDirectory(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationDirectory(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationDirectory(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationDirectory(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationPattern(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationPattern(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationPattern(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationPattern(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesForbidenSyntax(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesForbidenSyntax(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesForbidenSyntax(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesForbidenSyntax(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesGeneratedNameCollisions(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesGeneratedNameCollisions(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesGeneratedNameCollisions(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesGeneratedNameCollisions(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssignments(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssignments(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssignments(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributes(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributes(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributes(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributes(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributes(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit1(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit1(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit1(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit1(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit1(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit2(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit2(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit2(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit2(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit2(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmitErrors(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmitErrors(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmitErrors(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmitErrors(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmitErrors(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmit(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmit(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmit(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmitErrors(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmitErrors(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmitErrors(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmitErrors(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions2(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions2(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions2(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions2(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions3(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions3(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions3(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions3(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportMeta(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportMeta(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportMeta(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportMeta(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionIntoExport(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionIntoExport(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionIntoExport(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionNoCycle(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionNoCycle(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionNoCycle(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionNoCycle(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmit1(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmit1(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmit1(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmitErrors1(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmitErrors1(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmitErrors1(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmitErrors1(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageExports(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageExports(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageExports(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageExports(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node20).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsExclude(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsExclude(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsExclude(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsExclude(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node20).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesResolveJsonModule(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesResolveJsonModule(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesResolveJsonModule(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesResolveJsonModule(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesSynchronousCallErrors(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesSynchronousCallErrors(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesSynchronousCallErrors(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTopLevelAwait(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTopLevelAwait(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTopLevelAwait(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTopLevelAwait(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit1(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit1(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit1(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit2(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit2(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit2(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit3(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit3(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit3(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit4(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit4(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit4(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit5(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit5(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit5(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit6(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit6(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit6(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit7(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit7(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit7(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride1(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride1(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride1(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride1(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride2(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride2(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride2(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride2(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride3(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride3(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride3(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride3(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride4(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride4(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride4(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride4(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride5(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride5(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride5(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverrideModeError(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverrideModeError(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverrideModeError(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverrideModeError(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTypesVersionPackageExports(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTypesVersionPackageExports(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTypesVersionPackageExports(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfName(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfName(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfName(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfNameScoped(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfNameScoped(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfNameScoped(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/nonTSExtensions(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/packageJsonImportsErrors(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/packageJsonImportsErrors(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/parser.forAwait.es2018.errors.txt"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNext.trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNextEsm.trace.json"
          },
          {
            "path": "tests/baselines/reference/topLevelAwait.1(module=es2022,target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/topLevelAwait.1(module=esnext,target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/topLevelAwait.1(module=system,target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options module-kind is out-of-range.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options module-kind is out-of-range.oldTranspile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options target-script is out-of-range.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options target-script is out-of-range.oldTranspile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/tripleSlashTypesReferenceWithMissingExports(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/tripleSlashTypesReferenceWithMissingExports(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/tripleSlashTypesReferenceWithMissingExports(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/tripleSlashTypesReferenceWithMissingExports(module=node20).types"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleResolution/shared-resolution-should-not-report-error.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleResolution/when-resolution-is-not-shared.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/does-not-add-color-when-NO_COLOR-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped-when-host-can't-provide-terminal-width.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/on-sample-project-with-nodenext.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/on-transitive-references-with-nodenext.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/rewriteRelativeImportExtensionsProjectReferences1.js"
          },
          {
            "path": "tests/baselines/reference/typeOnlyESMImportFromCJS(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/typeOnlyESMImportFromCJS(module=node20).symbols"
          },
          {
            "path": "tests/baselines/reference/typeOnlyESMImportFromCJS(module=node20).types"
          },
          {
            "path": "tests/cases/compiler/moduleNodeDefaultImports.ts"
          },
          {
            "path": "tests/cases/compiler/moduleResolutionWithModule.ts"
          },
          {
            "path": "tests/cases/compiler/tripleSlashTypesReferenceWithMissingExports.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/moduleResolutionWithoutExtension3.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/moduleResolutionWithoutExtension4.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/cjsErrors.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/nodeModulesTsFiles.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/nonTSExtensions.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/packageJsonImportsErrors.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/typeOnly/typeOnlyESMImportFromCJS.ts"
          },
          {
            "path": "tests/cases/conformance/importAttributes/importAttributes6.ts"
          },
          {
            "path": "tests/cases/conformance/moduleResolution/bundler/bundlerDirectoryModule.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeAllowJsPackageSelfName.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJs1.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsCjsFromJs.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsConditionalPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsDynamicImport.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsExportAssignment.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsExportlessJsModuleDetectionAuto.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsGeneratedNameCollisions.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsImportAssignment.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsImportHelpersCollisions1.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsImportHelpersCollisions2.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsImportHelpersCollisions3.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsImportMeta.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsPackageImports.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsPackagePatternExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsPackagePatternExportsExclude.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsPackagePatternExportsTrailers.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsSynchronousCallErrors.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsTopLevelAwait.ts"
          },
          {
            "path": "tests/cases/conformance/node/esmModuleExports1.ts"
          },
          {
            "path": "tests/cases/conformance/node/esmModuleExports2.ts"
          },
          {
            "path": "tests/cases/conformance/node/esmModuleExports3.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModules1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesCJSEmit1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesCjsFormatFileAlwaysHasDefault.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesConditionalPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesDeclarationEmitDynamicImportWithPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesDeclarationEmitWithPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesDynamicImport.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportAssignments.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsBlocksSpecifierResolution.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsBlocksTypesVersions.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsDoubleAsterisk.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsSourceTs.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsSpecifierGenerationConditions.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsSpecifierGenerationDirectory.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsSpecifierGenerationPattern.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesForbidenSyntax.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesGeneratedNameCollisions.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAssertions.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAssignments.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAttributes.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAttributesModeDeclarationEmit1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAttributesModeDeclarationEmit2.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAttributesModeDeclarationEmitErrors.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAttributesTypeModeDeclarationEmit.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAttributesTypeModeDeclarationEmitErrors.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportHelpersCollisions.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportHelpersCollisions2.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportHelpersCollisions3.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportMeta.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportModeDeclarationEmit1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportModeDeclarationEmit2.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportModeDeclarationEmitErrors1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportResolutionIntoExport.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportResolutionNoCycle.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportTypeModeDeclarationEmit1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportTypeModeDeclarationEmitErrors1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesJson.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesPackageImports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesPackagePatternExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesPackagePatternExportsExclude.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesPackagePatternExportsTrailers.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesResolveJsonModule.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesSynchronousCallErrors.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTopLevelAwait.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit2.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit3.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit4.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit5.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit6.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit7.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeOverride1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeOverride2.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeOverride3.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeOverride4.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeOverride5.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeOverrideModeError.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTypesVersionPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodePackageSelfName.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodePackageSelfNameScoped.ts"
          },
          {
            "path": "tests/cases/conformance/nonjsExtensions/declarationFileForTsJsImport.ts"
          },
          {
            "path": "tests/cases/conformance/nonjsExtensions/declarationFilesForNodeNativeModules.ts"
          },
          {
            "path": "tests/cases/fourslash/server/rewriteRelativeImportExtensionsProjectReferences1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6VWGoc",
      "title": "Fix type variable leaks and cache inconsistencies",
      "url": "https://github.com/microsoft/TypeScript/pull/61668",
      "mergedAt": "2025-06-09T21:20:28Z",
      "updatedAt": "2025-09-03T05:20:10Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "34d1ea68f6ef83689909ab77a625c177887d09b1"
      },
      "author": {
        "login": "ahejlsberg"
      },
      "assignees": {
        "nodes": [
          {
            "login": "ahejlsberg"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "DISMISSED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/declarationEmitHigherOrderRetainedGenerics.types"
          },
          {
            "path": "tests/baselines/reference/genericCallInferenceInConditionalTypes1.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallInferenceInConditionalTypes1.types"
          },
          {
            "path": "tests/baselines/reference/genericCallInferenceUsingThisTypeNoInvalidCacheReuseAfterMappedTypeApplication1.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallInferenceUsingThisTypeNoInvalidCacheReuseAfterMappedTypeApplication1.types"
          },
          {
            "path": "tests/baselines/reference/genericCallInferenceWithGenericLocalFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallInferenceWithGenericLocalFunction.types"
          },
          {
            "path": "tests/baselines/reference/genericFunctionInference1.types"
          },
          {
            "path": "tests/baselines/reference/inferenceFromGenericClassNoCrash1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/inferenceFromGenericClassNoCrash1.symbols"
          },
          {
            "path": "tests/baselines/reference/inferenceFromGenericClassNoCrash1.types"
          },
          {
            "path": "tests/baselines/reference/nestedGenericSpreadInference.js"
          },
          {
            "path": "tests/baselines/reference/nestedGenericSpreadInference.symbols"
          },
          {
            "path": "tests/baselines/reference/nestedGenericSpreadInference.types"
          },
          {
            "path": "tests/baselines/reference/promisePermutations.types"
          },
          {
            "path": "tests/cases/compiler/genericCallInferenceInConditionalTypes1.ts"
          },
          {
            "path": "tests/cases/compiler/genericCallInferenceUsingThisTypeNoInvalidCacheReuseAfterMappedTypeApplication1.ts"
          },
          {
            "path": "tests/cases/compiler/genericCallInferenceWithGenericLocalFunction.ts"
          },
          {
            "path": "tests/cases/compiler/genericCallWithinOwnBodyCastTypeParameterIdentity.ts"
          },
          {
            "path": "tests/cases/compiler/inferenceFromGenericClassNoCrash1.ts"
          },
          {
            "path": "tests/cases/compiler/nestedGenericSpreadInference.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6ZrkSi",
      "title": "Restore `import defer =` parsing",
      "url": "https://github.com/microsoft/TypeScript/pull/61837",
      "mergedAt": "2025-06-09T21:31:15Z",
      "updatedAt": "2025-06-09T22:19:34Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0dfd0c2143ffa68e60e5ee3ab8f2fa705b97df9f"
      },
      "author": {
        "login": "nicolo-ribaudo"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "nicolo-ribaudo"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "nicolo-ribaudo"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/parser.ts"
          },
          {
            "path": "tests/baselines/reference/importBindingDefer.js"
          },
          {
            "path": "tests/baselines/reference/importBindingDefer.symbols"
          },
          {
            "path": "tests/baselines/reference/importBindingDefer.types"
          },
          {
            "path": "tests/baselines/reference/importBindingDefer2.js"
          },
          {
            "path": "tests/baselines/reference/importBindingDefer2.symbols"
          },
          {
            "path": "tests/baselines/reference/importBindingDefer2.types"
          },
          {
            "path": "tests/baselines/reference/importDeferFromInvalid.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferFromInvalid.js"
          },
          {
            "path": "tests/baselines/reference/importDeferFromInvalid.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferFromInvalid.types"
          },
          {
            "path": "tests/baselines/reference/importEqualsBindingDefer.js"
          },
          {
            "path": "tests/baselines/reference/importEqualsBindingDefer.symbols"
          },
          {
            "path": "tests/baselines/reference/importEqualsBindingDefer.types"
          },
          {
            "path": "tests/cases/conformance/importDefer/importBindingDefer.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importBindingDefer2.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importDeferFromInvalid.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importEqualsBindingDefer.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6ZhZZV",
      "title": "Port \"Improve type discrimination algorithm\" from tsgo",
      "url": "https://github.com/microsoft/TypeScript/pull/61828",
      "mergedAt": "2025-06-09T23:20:15Z",
      "updatedAt": "2025-06-09T23:20:19Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "12e09f44f68155b2b6aac30dddbfbc25b96c5197"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "ahejlsberg"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/services/codefixes/importFixes.ts"
          },
          {
            "path": "tests/baselines/reference/discriminateWithMissingProperty.errors.txt"
          },
          {
            "path": "tests/baselines/reference/missingDiscriminants.errors.txt"
          },
          {
            "path": "tests/baselines/reference/missingDiscriminants.symbols"
          },
          {
            "path": "tests/baselines/reference/missingDiscriminants.types"
          },
          {
            "path": "tests/baselines/reference/promiseType.types"
          },
          {
            "path": "tests/cases/compiler/missingDiscriminants.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Z8Oyi",
      "title": "fix link to \"Help Wanted\" issues",
      "url": "https://github.com/microsoft/TypeScript/pull/61843",
      "mergedAt": "2025-06-11T15:58:23Z",
      "updatedAt": "2025-06-11T15:58:24Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "529ed0968b47f640ae052e6485a68aae3c81b015"
      },
      "author": {
        "login": "AllenSH12"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "CONTRIBUTING.md"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6aFynT",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250611192551558 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/61846",
      "mergedAt": "2025-06-11T20:57:44Z",
      "updatedAt": "2025-06-11T20:57:46Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "dd1e258ba56f1b511879372c857fb625de3dec4a"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6a9NHr",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250617192341571 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/61887",
      "mergedAt": "2025-06-17T20:28:42Z",
      "updatedAt": "2025-06-17T20:28:44Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "f1d2494e91a7ce04feace304d1a3bce36ba8746a"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6bIghI",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250618192323088 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/61898",
      "mergedAt": "2025-06-18T20:01:28Z",
      "updatedAt": "2025-06-18T20:01:31Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "5a3271b9ba508be8626d9fba3bffded66ab260c1"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6bIizg",
      "title": "Create fourslash syntax, compiler testcase, and build instructions summary",
      "url": "https://github.com/microsoft/TypeScript/pull/61900",
      "mergedAt": "2025-06-18T21:43:15Z",
      "updatedAt": "2025-06-18T21:43:17Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "479285d0ac293c35a926508d17f0bb5eca7e0303"
      },
      "author": {
        "login": "copilot-swe-agent"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          },
          {
            "login": "Copilot"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-swe-agent"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/copilot-instructions.md"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6bi2k2",
      "title": "Don't ignore completions at source file locations",
      "url": "https://github.com/microsoft/TypeScript/pull/61909",
      "mergedAt": "2025-06-23T20:20:43Z",
      "updatedAt": "2025-06-23T20:21:24Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "78c16795cdee70b9d9f0f248b6dbb6ba50994a59"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/completions.ts"
          },
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/tsserver/completions/in-project-reference-setup-with-path-mapping-with-existing-import-without-includeCompletionsForModuleExports.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completions/in-project-reference-setup-with-path-mapping-with-existing-import.js"
          },
          {
            "path": "tests/cases/fourslash/asOperatorCompletion2.ts"
          },
          {
            "path": "tests/cases/fourslash/asOperatorCompletion3.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6bt2Se",
      "title": "Allow trailing commas after import attributes in `ImportType`",
      "url": "https://github.com/microsoft/TypeScript/pull/61920",
      "mergedAt": "2025-06-24T16:49:37Z",
      "updatedAt": "2025-06-24T16:49:38Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "50b93bc8035091e42dc02d19b5e6d68099fa7906"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/parser.ts"
          },
          {
            "path": "tests/baselines/reference/importAttributes10.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes10.js"
          },
          {
            "path": "tests/baselines/reference/importAttributes10.symbols"
          },
          {
            "path": "tests/baselines/reference/importAttributes10.types"
          },
          {
            "path": "tests/cases/conformance/importAttributes/importAttributes10.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6b5igZ",
      "title": "Add Copilot setup steps",
      "url": "https://github.com/microsoft/TypeScript/pull/61933",
      "mergedAt": "2025-06-24T16:53:32Z",
      "updatedAt": "2025-06-24T17:00:07Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3af37ef921599c54e519c5b0e6cc02fb50cf0e4a"
      },
      "author": {
        "login": "RyanCavanaugh"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/copilot-setup-steps.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6b6Gd1",
      "title": "Update Copilot instructions and setup script",
      "url": "https://github.com/microsoft/TypeScript/pull/61937",
      "mergedAt": "2025-06-24T17:44:30Z",
      "updatedAt": "2025-06-24T17:44:35Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6dea899f2b4e9664fecccc6afe7e6ae5cc2af0aa"
      },
      "author": {
        "login": "RyanCavanaugh"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/copilot-instructions.md"
          },
          {
            "path": ".github/workflows/copilot-setup-steps.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6b6gD_",
      "title": "Remove corsa-specific steps from copilot-setup-steps.yml",
      "url": "https://github.com/microsoft/TypeScript/pull/61938",
      "mergedAt": "2025-06-24T18:35:21Z",
      "updatedAt": "2025-06-24T18:35:27Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "47ca599979c418ade9b0a2f4107c305822472e44"
      },
      "author": {
        "login": "RyanCavanaugh"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/copilot-setup-steps.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6bJQ7T",
      "title": "Fix bad JSON syntax in tests, use JSON.parse first for perf",
      "url": "https://github.com/microsoft/TypeScript/pull/61901",
      "mergedAt": "2025-06-24T21:51:47Z",
      "updatedAt": "2025-06-24T21:52:05Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "dca71700bac04ed4315eec612f4a1cb151e8c168"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "DISMISSED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/conditionalExportsResolutionFallback(moduleresolution=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/conditionalExportsResolutionFallback(moduleresolution=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTypesVersionPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTypesVersionPackageExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTypesVersionPackageExports(module=node20).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTypesVersionPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNext.js"
          },
          {
            "path": "tests/cases/compiler/reactJsxReactResolvedNodeNext.tsx"
          },
          {
            "path": "tests/cases/conformance/moduleResolution/conditionalExportsResolutionFallback.ts"
          },
          {
            "path": "tests/cases/conformance/moduleResolution/selfNameModuleAugmentation.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsConditionalPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsPackagePatternExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsPackagePatternExportsTrailers.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesConditionalPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesPackagePatternExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesPackagePatternExportsTrailers.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTypesVersionPackageExports.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsBundlerNoNodeCondition.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsCustomConditions.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsBundlerNoNodeCondition.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsCustomConditions.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6bRwdw",
      "title": "Use strict subtype relation in `getCommonSupertype`",
      "url": "https://github.com/microsoft/TypeScript/pull/61903",
      "mergedAt": "2025-06-24T22:38:59Z",
      "updatedAt": "2025-06-24T22:44:18Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e6a50a78619632bba7af4f23b2e7e4940b9cf788"
      },
      "author": {
        "login": "ahejlsberg"
      },
      "assignees": {
        "nodes": [
          {
            "login": "ahejlsberg"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6cFl3f",
      "title": "Add line endings and printf debugging section",
      "url": "https://github.com/microsoft/TypeScript/pull/61947",
      "mergedAt": "2025-06-25T17:31:28Z",
      "updatedAt": "2025-06-25T17:54:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d6c3ac3684f3dd87cab169063c78508cb6b79b21"
      },
      "author": {
        "login": "RyanCavanaugh"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "rubiesonthesky"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/copilot-instructions.md"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6bvkaN",
      "title": "Allow `accessor` properties in ambient contexts when targeting ES5",
      "url": "https://github.com/microsoft/TypeScript/pull/61927",
      "mergedAt": "2025-06-25T21:29:03Z",
      "updatedAt": "2025-06-25T21:29:03Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "1ed8674bba538a280c1846d628069fb9646731ab"
      },
      "author": {
        "login": "copilot-swe-agent"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          },
          {
            "login": "Copilot"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/accessorInAmbientContextES5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/accessorInAmbientContextES5.js"
          },
          {
            "path": "tests/baselines/reference/accessorInAmbientContextES5.symbols"
          },
          {
            "path": "tests/baselines/reference/accessorInAmbientContextES5.types"
          },
          {
            "path": "tests/cases/compiler/accessorInAmbientContextES5.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6b5xYe",
      "title": "Fix BigInt literal error in ambient contexts when targeting < ES2020",
      "url": "https://github.com/microsoft/TypeScript/pull/61935",
      "mergedAt": "2025-06-25T21:29:51Z",
      "updatedAt": "2025-06-25T21:29:52Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6e519c59c13e4e99da0bf779a1f2bbee232cf7a1"
      },
      "author": {
        "login": "copilot-swe-agent"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          },
          {
            "login": "Copilot"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-swe-agent"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/bigintAmbientMinimal.errors.txt"
          },
          {
            "path": "tests/baselines/reference/bigintAmbientMinimal.js"
          },
          {
            "path": "tests/baselines/reference/bigintAmbientMinimal.symbols"
          },
          {
            "path": "tests/baselines/reference/bigintAmbientMinimal.types"
          },
          {
            "path": "tests/cases/compiler/bigintAmbientMinimal.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6cIRM6",
      "title": "Update copilot-setup-steps.yml",
      "url": "https://github.com/microsoft/TypeScript/pull/61948",
      "mergedAt": "2025-06-25T21:35:09Z",
      "updatedAt": "2025-06-25T21:35:12Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "f3a6d3165ff91289bf8558ce981042d2fff22a36"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/copilot-setup-steps.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6bv1wg",
      "title": "Use jsx language variant for jsx file scanning in getChildren",
      "url": "https://github.com/microsoft/TypeScript/pull/61928",
      "mergedAt": "2025-06-25T22:37:21Z",
      "updatedAt": "2025-06-25T22:37:23Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "02672d281c26e561708127da1d8d1a6cae45fee2"
      },
      "author": {
        "login": "gabritto"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "DISMISSED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/services/completions.ts"
          },
          {
            "path": "src/services/services.ts"
          },
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/cases/fourslash/syntacticClassificationsJsx1.ts"
          },
          {
            "path": "tests/cases/fourslash/syntacticClassificationsJsx2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6cWZYJ",
      "title": "Revert #54442 and add a testcase",
      "url": "https://github.com/microsoft/TypeScript/pull/61955",
      "mergedAt": "2025-06-27T15:52:58Z",
      "updatedAt": "2025-06-27T15:52:59Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "efeb135c6f5cf2c0bc8c2569687225d40798566d"
      },
      "author": {
        "login": "RyanCavanaugh"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/interfaceMergeWithNonGenericTypeArguments.errors.txt"
          },
          {
            "path": "tests/baselines/reference/interfaceMergeWithNonGenericTypeArguments.js"
          },
          {
            "path": "tests/baselines/reference/interfaceMergeWithNonGenericTypeArguments.symbols"
          },
          {
            "path": "tests/baselines/reference/interfaceMergeWithNonGenericTypeArguments.types"
          },
          {
            "path": "tests/cases/compiler/interfaceMergeWithNonGenericTypeArguments.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6YexVu",
      "title": "Fix capitalisation for `checkJs`",
      "url": "https://github.com/microsoft/TypeScript/pull/61795",
      "mergedAt": "2025-06-29T16:24:21Z",
      "updatedAt": "2025-06-29T16:24:22Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "dfb74889780c1df7d0aeed1b32109142a6a2a09c"
      },
      "author": {
        "login": "GameRoMan"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "DISMISSED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/does-not-add-color-when-NO_COLOR-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped-when-host-can't-provide-terminal-width.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped.js"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6cqPIg",
      "title": "Fixed crash on `ConstructSignature` when computing interactive inlay hints",
      "url": "https://github.com/microsoft/TypeScript/pull/61973",
      "mergedAt": "2025-06-30T17:21:50Z",
      "updatedAt": "2025-06-30T17:21:50Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d297037a83f13dd31decb957a3f0dce7a8eac2c3"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/inlayHints.ts"
          },
          {
            "path": "tests/baselines/reference/inlayHintsVariableTypes3.baseline"
          },
          {
            "path": "tests/cases/fourslash/inlayHintsVariableTypes3.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Rs6G9",
      "title": "Improve release publisher pipeline",
      "url": "https://github.com/microsoft/TypeScript/pull/61551",
      "mergedAt": "2025-06-30T17:26:51Z",
      "updatedAt": "2025-06-30T17:26:53Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "36f7fbaded12b21249a4d6aa38a14a61c3db8384"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "azure-pipelines.release-publish.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6aSXxX",
      "title": "Fixed crash on `ComputedPropertyName` when computing interactive inlay hints",
      "url": "https://github.com/microsoft/TypeScript/pull/61857",
      "mergedAt": "2025-06-30T17:28:27Z",
      "updatedAt": "2025-06-30T17:28:28Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "8665f920c9f2a2cc400e2cd85bc0e3e183630d6e"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/inlayHints.ts"
          },
          {
            "path": "tests/baselines/reference/inlayHintsFunctionParameterTypes5.baseline"
          },
          {
            "path": "tests/cases/fourslash/inlayHintsFunctionParameterTypes5.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6bXi4P",
      "title": "Fix typo in nightly yaml",
      "url": "https://github.com/microsoft/TypeScript/pull/61906",
      "mergedAt": "2025-06-30T17:42:59Z",
      "updatedAt": "2025-07-01T10:05:54Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "88b3bea6df15007126f62174450afdda573bc89b"
      },
      "author": {
        "login": "steeleduncan"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/nightly.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Zb8ZB",
      "title": "Fixed JSDoc display on `JsxNamespacedName` attributes",
      "url": "https://github.com/microsoft/TypeScript/pull/61825",
      "mergedAt": "2025-06-30T18:07:48Z",
      "updatedAt": "2025-06-30T18:07:48Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b46556e7b7b71e5462fb2f675adf6a6709738851"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/services.ts"
          },
          {
            "path": "tests/cases/fourslash/quickInfoOnJsxNamespacedNameWithDoc1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6CYDge",
      "title": "Fixed a printer crash caused by empty parameter modifiers",
      "url": "https://github.com/microsoft/TypeScript/pull/60537",
      "mergedAt": "2025-06-30T18:14:10Z",
      "updatedAt": "2025-06-30T18:14:10Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c33f83ac9b80b2a38d208128c89f1b908ce6257d"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/expressionToTypeNode.ts"
          },
          {
            "path": "tests/cases/fourslash/completionEntryClassMembersWithInferredFunctionReturnType1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6NYzz5",
      "title": "Fixed crash in `hasVisibleDeclarations` related to binding elements",
      "url": "https://github.com/microsoft/TypeScript/pull/61352",
      "mergedAt": "2025-06-30T18:57:48Z",
      "updatedAt": "2025-06-30T18:57:48Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2ea2ecfdc15d09d45206f5a1b53bcbd09e3de237"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/computedPropertyBindingElementDeclarationNoCrash1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/computedPropertyBindingElementDeclarationNoCrash1.symbols"
          },
          {
            "path": "tests/baselines/reference/computedPropertyBindingElementDeclarationNoCrash1.types"
          },
          {
            "path": "tests/cases/compiler/computedPropertyBindingElementDeclarationNoCrash1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6DdKbh",
      "title": "Fixed crash when getting a definition for a class member with a computed name and an `override` modifier",
      "url": "https://github.com/microsoft/TypeScript/pull/60631",
      "mergedAt": "2025-06-30T19:48:39Z",
      "updatedAt": "2025-06-30T19:48:39Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "5519be3ae121a3a8bf867caf98eac3304c75258a"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/services/codefixes/fixAddMissingMember.ts"
          },
          {
            "path": "src/services/codefixes/fixPropertyOverrideAccessor.ts"
          },
          {
            "path": "src/services/codefixes/generateAccessors.ts"
          },
          {
            "path": "src/services/goToDefinition.ts"
          },
          {
            "path": "tests/baselines/reference/accessorsOverrideProperty10.errors.txt"
          },
          {
            "path": "tests/baselines/reference/accessorsOverrideProperty10.symbols"
          },
          {
            "path": "tests/baselines/reference/accessorsOverrideProperty10.types"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionOverriddenMember17.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionOverriddenMember18.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionOverriddenMember19.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionOverriddenMember20.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionOverriddenMember21.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionOverriddenMember22.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionOverriddenMember23.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionOverriddenMember24.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionOverriddenMember25.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionOverriddenMember26.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/propertyOverridesAccessors6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/propertyOverridesAccessors6.symbols"
          },
          {
            "path": "tests/baselines/reference/propertyOverridesAccessors6.types"
          },
          {
            "path": "tests/cases/conformance/classes/propertyMemberDeclarations/accessorsOverrideProperty10.ts"
          },
          {
            "path": "tests/cases/conformance/classes/propertyMemberDeclarations/propertyOverridesAccessors6.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixPropertyOverrideAccess4.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixPropertyOverrideAccess5.ts"
          },
          {
            "path": "tests/cases/fourslash/goToDefinitionOverriddenMember17.ts"
          },
          {
            "path": "tests/cases/fourslash/goToDefinitionOverriddenMember18.ts"
          },
          {
            "path": "tests/cases/fourslash/goToDefinitionOverriddenMember19.ts"
          },
          {
            "path": "tests/cases/fourslash/goToDefinitionOverriddenMember20.ts"
          },
          {
            "path": "tests/cases/fourslash/goToDefinitionOverriddenMember21.ts"
          },
          {
            "path": "tests/cases/fourslash/goToDefinitionOverriddenMember22.ts"
          },
          {
            "path": "tests/cases/fourslash/goToDefinitionOverriddenMember23.ts"
          },
          {
            "path": "tests/cases/fourslash/goToDefinitionOverriddenMember24.ts"
          },
          {
            "path": "tests/cases/fourslash/goToDefinitionOverriddenMember25.ts"
          },
          {
            "path": "tests/cases/fourslash/goToDefinitionOverriddenMember26.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6M9PQh",
      "title": "Handle `silentNeverType` in iteration-related functions",
      "url": "https://github.com/microsoft/TypeScript/pull/61317",
      "mergedAt": "2025-06-30T19:52:51Z",
      "updatedAt": "2025-06-30T19:52:51Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3267e426e3d380853efe4572abafe5d295f9b4b3"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "vahan-sahakyan-op"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/genericCallAtYieldExpressionInGenericCall1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericCallAtYieldExpressionInGenericCall1.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallAtYieldExpressionInGenericCall1.types"
          },
          {
            "path": "tests/baselines/reference/genericCallAtYieldExpressionInGenericCall2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallAtYieldExpressionInGenericCall2.types"
          },
          {
            "path": "tests/cases/compiler/genericCallAtYieldExpressionInGenericCall1.ts"
          },
          {
            "path": "tests/cases/compiler/genericCallAtYieldExpressionInGenericCall2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6GNoMF",
      "title": "Keep accessors as accessors in emitted anonymous class declarations",
      "url": "https://github.com/microsoft/TypeScript/pull/60853",
      "mergedAt": "2025-06-30T20:19:53Z",
      "updatedAt": "2025-06-30T20:19:54Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c35b14335a140e7e72d8da58b9ac3fad459a8407"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/anonymousClassAccessorsDeclarationEmit1.js"
          },
          {
            "path": "tests/baselines/reference/anonymousClassAccessorsDeclarationEmit1.symbols"
          },
          {
            "path": "tests/baselines/reference/anonymousClassAccessorsDeclarationEmit1.types"
          },
          {
            "path": "tests/baselines/reference/autoAccessor8.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitGenericTypeParamerSerialization3.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitGenericTypeParamerSerialization3.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitGenericTypeParamerSerialization3.types"
          },
          {
            "path": "tests/baselines/reference/jsDeclarationsFunctionLikeClasses2.types"
          },
          {
            "path": "tests/baselines/reference/mixinAccessors1.js"
          },
          {
            "path": "tests/baselines/reference/mixinAccessors1.symbols"
          },
          {
            "path": "tests/baselines/reference/mixinAccessors1.types"
          },
          {
            "path": "tests/baselines/reference/mixinAccessors2.js"
          },
          {
            "path": "tests/baselines/reference/mixinAccessors2.symbols"
          },
          {
            "path": "tests/baselines/reference/mixinAccessors2.types"
          },
          {
            "path": "tests/baselines/reference/mixinAccessors3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/mixinAccessors3.js"
          },
          {
            "path": "tests/baselines/reference/mixinAccessors3.symbols"
          },
          {
            "path": "tests/baselines/reference/mixinAccessors3.types"
          },
          {
            "path": "tests/baselines/reference/mixinAccessors4.js"
          },
          {
            "path": "tests/baselines/reference/mixinAccessors4.symbols"
          },
          {
            "path": "tests/baselines/reference/mixinAccessors4.types"
          },
          {
            "path": "tests/baselines/reference/mixinAccessors5.js"
          },
          {
            "path": "tests/baselines/reference/mixinAccessors5.symbols"
          },
          {
            "path": "tests/baselines/reference/mixinAccessors5.types"
          },
          {
            "path": "tests/cases/compiler/declarationEmitGenericTypeParamerSerialization3.ts"
          },
          {
            "path": "tests/cases/conformance/classes/mixinAccessors1.ts"
          },
          {
            "path": "tests/cases/conformance/classes/mixinAccessors2.ts"
          },
          {
            "path": "tests/cases/conformance/classes/mixinAccessors3.ts"
          },
          {
            "path": "tests/cases/conformance/classes/mixinAccessors4.ts"
          },
          {
            "path": "tests/cases/conformance/classes/mixinAccessors5.ts"
          },
          {
            "path": "tests/cases/conformance/declarationEmit/anonymousClassAccessorsDeclarationEmit1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc56E2S5",
      "title": "Don't return `tags` when returning quick info for JSDoc nodes",
      "url": "https://github.com/microsoft/TypeScript/pull/59816",
      "mergedAt": "2025-06-30T20:20:09Z",
      "updatedAt": "2025-06-30T20:20:09Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "58665cf3ae3a71f2db2bea61eeb5887dfa426839"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/symbolDisplay.ts"
          },
          {
            "path": "tests/cases/fourslash/jsDocContextualTagsInJsDoc1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6NyTPL",
      "title": "Fixed nullish coalesce operator's precedence",
      "url": "https://github.com/microsoft/TypeScript/pull/61372",
      "mergedAt": "2025-06-30T20:49:03Z",
      "updatedAt": "2025-06-30T20:49:03Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "91cdbd518c899317b0ba26bbb2a46aeea587cf27"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/testRunner/unittests/printer.ts"
          },
          {
            "path": "tests/baselines/reference/nullishCoalescingAssignmentVsPrivateFieldsJsEmit1.js"
          },
          {
            "path": "tests/baselines/reference/nullishCoalescingAssignmentVsPrivateFieldsJsEmit1.symbols"
          },
          {
            "path": "tests/baselines/reference/nullishCoalescingAssignmentVsPrivateFieldsJsEmit1.types"
          },
          {
            "path": "tests/baselines/reference/nullishCoalescingOperator5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/nullishCoalescingOperator5.js"
          },
          {
            "path": "tests/baselines/reference/nullishCoalescingOperator5.types"
          },
          {
            "path": "tests/baselines/reference/plainJSGrammarErrors.errors.txt"
          },
          {
            "path": "tests/baselines/reference/plainJSGrammarErrors.types"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryAmpersandAmpersandExpressionWithLeftConditionalExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryBarBarExpressionWithLeftConditionalExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryQuestionQuestionExpressionWithLeftConditionalExpression.js"
          },
          {
            "path": "tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingAssignmentVsPrivateFieldsJsEmit1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6cxP7R",
      "title": "Revert change to type print in an error message",
      "url": "https://github.com/microsoft/TypeScript/pull/61977",
      "mergedAt": "2025-06-30T21:30:05Z",
      "updatedAt": "2025-06-30T21:30:05Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b70d4d7e4be254c501ef8f9d88a56cb0296e757f"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/accessorsOverrideProperty10.errors.txt"
          },
          {
            "path": "tests/baselines/reference/propertyOverridesAccessors6.errors.txt"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6csN_L",
      "title": "Properly disallow `yield` in bodyless arrows",
      "url": "https://github.com/microsoft/TypeScript/pull/61976",
      "mergedAt": "2025-06-30T21:52:49Z",
      "updatedAt": "2025-06-30T22:11:35Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "1ea1809e16ffbfd722a5e630da9a48ae5f408612"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/parser.ts"
          },
          {
            "path": "tests/baselines/reference/YieldExpression20_es6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/YieldExpression20_es6.js"
          },
          {
            "path": "tests/baselines/reference/YieldExpression20_es6.symbols"
          },
          {
            "path": "tests/baselines/reference/YieldExpression20_es6.types"
          },
          {
            "path": "tests/cases/conformance/es6/yieldExpressions/YieldExpression20_es6.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6YhUzP",
      "title": "Bump the github-actions group across 1 directory with 3 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/61804",
      "mergedAt": "2025-06-30T21:53:13Z",
      "updatedAt": "2025-06-30T21:53:15Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "5fd65f3189211b655b8dba9fecc94fc074079d2f"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5vruR0",
      "title": "perf: improve regexp performance by using non-capturing groups",
      "url": "https://github.com/microsoft/TypeScript/pull/58551",
      "mergedAt": "2025-06-30T22:12:49Z",
      "updatedAt": "2025-06-30T22:12:49Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e58dde511c11804949c520dca8f7593d6c2b0705"
      },
      "author": {
        "login": "antfu"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/compiler/watch.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6cKoJ9",
      "title": "Fix Copilot instructions to emphasize mandatory lint, test, and format steps",
      "url": "https://github.com/microsoft/TypeScript/pull/61950",
      "mergedAt": "2025-06-30T22:22:29Z",
      "updatedAt": "2025-06-30T22:22:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "666ef27201c0c497770fdd1af4c13049b640ce63"
      },
      "author": {
        "login": "copilot-swe-agent"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          },
          {
            "login": "Copilot"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sheetalkamat"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/copilot-instructions.md"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6aHq_t",
      "title": "fix: diagnostic message for class name 'Object' when targeting different ECMAScript versions",
      "url": "https://github.com/microsoft/TypeScript/pull/61850",
      "mergedAt": "2025-06-30T22:46:33Z",
      "updatedAt": "2025-06-30T22:47:38Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3ba257fface990ec5ec59fa2bb8edd7a721e1013"
      },
      "author": {
        "login": "idango10"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/checkForObjectTooStrict.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportClassNameWithObjectAMD.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportClassNameWithObjectCommonJS.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportClassNameWithObjectSystem.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportClassNameWithObjectUMD.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportDefaultClassNameWithObject.errors.txt"
          },
          {
            "path": "tests/baselines/reference/instanceofOperator.errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsGeneratedNameCollisions(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsGeneratedNameCollisions(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsGeneratedNameCollisions(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsGeneratedNameCollisions(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesGeneratedNameCollisions(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesGeneratedNameCollisions(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesGeneratedNameCollisions(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesGeneratedNameCollisions(module=nodenext).errors.txt"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EGBul",
      "title": "Restore repo dispatch for twoslash-repros workflow",
      "url": "https://github.com/microsoft/TypeScript/pull/60682",
      "mergedAt": "2025-07-01T16:33:40Z",
      "updatedAt": "2025-07-01T16:33:43Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6d684e34e4d27e2759d379898d876b1164943182"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/twoslash-repros.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6L69dA",
      "title": "fix `Intl.Segments#containing` return value type",
      "url": "https://github.com/microsoft/TypeScript/pull/61236",
      "mergedAt": "2025-07-02T00:10:50Z",
      "updatedAt": "2025-07-03T14:30:32Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "8518a8764e8b7da66b720950e67c5c6bdfd8b357"
      },
      "author": {
        "login": "petamoriken"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/es2022.intl.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6c_pUo",
      "title": "DOM Update 2025-06-18",
      "url": "https://github.com/microsoft/TypeScript/pull/61986",
      "mergedAt": "2025-07-02T01:49:19Z",
      "updatedAt": "2025-07-02T02:29:59Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "441655c270069e6c5cc6d989859afa232d5dafcb"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/dom.generated.d.ts"
          },
          {
            "path": "src/lib/dom.iterable.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.iterable.generated.d.ts"
          },
          {
            "path": "tests/baselines/reference/correlatedUnions.js"
          },
          {
            "path": "tests/baselines/reference/correlatedUnions.types"
          },
          {
            "path": "tests/baselines/reference/globalThisBlockscopedProperties.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.errors.txt"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.types"
          },
          {
            "path": "tests/baselines/reference/recursiveTypeReferences1.symbols"
          },
          {
            "path": "tests/baselines/reference/recursiveTypeReferences1.types"
          },
          {
            "path": "tests/baselines/reference/reverseMappedTypeContextualTypesPerElementOfTupleConstraint.types"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6dBH_5",
      "title": "Just add a trailing call to `visitNode` instead of creating a new array when collecting outlining spans",
      "url": "https://github.com/microsoft/TypeScript/pull/61987",
      "mergedAt": "2025-07-02T17:18:13Z",
      "updatedAt": "2025-07-02T17:18:15Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "fe698aef2867507354ed45b97b130fc456486af2"
      },
      "author": {
        "login": "DanielRosenwasser"
      },
      "assignees": {
        "nodes": [
          {
            "login": "DanielRosenwasser"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "navya9singh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/outliningElementsCollector.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6dJLw2",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250702194908541 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/61992",
      "mergedAt": "2025-07-02T21:35:28Z",
      "updatedAt": "2025-07-02T21:35:30Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0018c9ff12e657b84997dc1843818fea0a2ce850"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6cFFko",
      "title": "Fix Symbol completion priority and cursor positioning",
      "url": "https://github.com/microsoft/TypeScript/pull/61945",
      "mergedAt": "2025-07-02T21:46:24Z",
      "updatedAt": "2025-07-02T21:46:25Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "833a8d492c728d606454865e8c0fee84842f9f10"
      },
      "author": {
        "login": "copilot-swe-agent"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          },
          {
            "login": "Copilot"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-swe-agent"
            }
          },
          {
            "state": "DISMISSED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/completions.ts"
          },
          {
            "path": "tests/baselines/reference/completionsUniqueSymbol2.baseline"
          },
          {
            "path": "tests/cases/fourslash/completionForComputedStringProperties.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsSymbolMembers.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsUniqueSymbol1.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsUniqueSymbol_import.ts"
          },
          {
            "path": "tests/cases/fourslash/symbolCompletionLowerPriority.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6LsIgJ",
      "title": "Fix for Issue 61081",
      "url": "https://github.com/microsoft/TypeScript/pull/61221",
      "mergedAt": "2025-07-07T20:30:01Z",
      "updatedAt": "2025-07-07T20:30:01Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "87740bc7fe3d8d2af47d767db081491f40b8a90d"
      },
      "author": {
        "login": "JulianTaub"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "birgersp"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "birgersp"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "JulianTaub"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "JulianTaub"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/es5.d.ts"
          },
          {
            "path": "tests/baselines/reference/completionEntryForUnionMethod.baseline"
          },
          {
            "path": "tests/baselines/reference/goToTypeDefinition_arrayType.baseline.jsonc"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6d1YrQ",
      "title": "Clear out checker-level stacks on pop",
      "url": "https://github.com/microsoft/TypeScript/pull/62016",
      "mergedAt": "2025-07-08T14:54:21Z",
      "updatedAt": "2025-07-23T23:01:39Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "9e20e032effad965567d4a1e1c30d5433b0a3332"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6eX5b3",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250710202354753 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/62038",
      "mergedAt": "2025-07-10T20:45:15Z",
      "updatedAt": "2025-07-23T23:01:40Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "65cb4bd2d52cd882f2c3a503681479eb2ed291ca"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6fat6n",
      "title": "Restore AbortSignal.abort",
      "url": "https://github.com/microsoft/TypeScript/pull/62086",
      "mergedAt": "2025-07-17T18:27:15Z",
      "updatedAt": "2025-07-23T23:01:41Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2778e84ed88894156e2c5a17d74a25c73cc96ffe"
      },
      "author": {
        "login": "sandersn"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/dom.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.generated.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6eWgo2",
      "title": "Remove unused and confusing dom.iterable.d.ts file",
      "url": "https://github.com/microsoft/TypeScript/pull/62037",
      "mergedAt": "2025-07-21T21:30:31Z",
      "updatedAt": "2025-07-23T23:01:40Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "f14b5c8a2f0be503ac455054a91573c63f0e5088"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/dom.iterable.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6fsVon",
      "title": "Don't use `noErrorTruncation` when printing types with `maximumLength` set",
      "url": "https://github.com/microsoft/TypeScript/pull/62091",
      "mergedAt": "2025-07-22T15:56:52Z",
      "updatedAt": "2025-07-23T23:01:41Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d5a414cd1dceb209fd2569e89d1096812218e8c5"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityNoErrorTruncation1.baseline"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityNoErrorTruncation1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6e24Vg",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250714192406710 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/62068",
      "mergedAt": "2025-07-22T20:23:04Z",
      "updatedAt": "2025-07-23T23:01:41Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "22ef57786f5ca99837c430439bc6003c068fe1d2"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6gULuH",
      "title": "Give more specific errors for `verbatimModuleSyntax`",
      "url": "https://github.com/microsoft/TypeScript/pull/62113",
      "mergedAt": "2025-07-23T22:38:02Z",
      "updatedAt": "2025-07-23T23:00:36Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "be8678315541e814da14316848a9468e8f90ab11"
      },
      "author": {
        "login": "DanielRosenwasser"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          },
          {
            "login": "RyanCavanaugh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/isolatedModulesShadowGlobalTypeNotValue(isolatedmodules=false,verbatimmodulesyntax=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/isolatedModulesShadowGlobalTypeNotValue(isolatedmodules=true,verbatimmodulesyntax=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/isolatedModulesSketchyAliasLocalMerge(isolatedmodules=false,verbatimmodulesyntax=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/isolatedModulesSketchyAliasLocalMerge(isolatedmodules=true,verbatimmodulesyntax=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/modulePreserve4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/noCrashWithVerbatimModuleSyntaxAndImportsNotUsedAsValues.errors.txt"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-errors-and-emit-when-verbatimModuleSyntax-changes.js"
          },
          {
            "path": "tests/baselines/reference/verbatimModuleSyntaxRestrictionsCJS.errors.txt"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6hmjoy",
      "title": "Add format to update baselines/fix lints task",
      "url": "https://github.com/microsoft/TypeScript/pull/62160",
      "mergedAt": "2025-07-31T20:57:52Z",
      "updatedAt": "2025-07-31T20:57:55Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c3ee238ae70ce226baadabe9a7fb91b03b1e9a1e"
      },
      "author": {
        "login": "weswigham"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/accept-baselines-fix-lints.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6hje0i",
      "title": "Fix private identifier fields generating errors in class expression declarations",
      "url": "https://github.com/microsoft/TypeScript/pull/62155",
      "mergedAt": "2025-07-31T22:51:51Z",
      "updatedAt": "2025-07-31T22:51:53Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "39c5d0187749f0db29295677b56ee6bba0d50039"
      },
      "author": {
        "login": "copilot-swe-agent"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          },
          {
            "login": "Copilot"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-swe-agent"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/privateFieldsInClassExpressionDeclaration.errors.txt"
          },
          {
            "path": "tests/baselines/reference/privateFieldsInClassExpressionDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/privateFieldsInClassExpressionDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/privateFieldsInClassExpressionDeclaration.types"
          },
          {
            "path": "tests/cases/compiler/privateFieldsInClassExpressionDeclaration.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6cxX8J",
      "title": "Restructure CI to prepare for required checks and merge queues",
      "url": "https://github.com/microsoft/TypeScript/pull/61978",
      "mergedAt": "2025-07-31T23:04:06Z",
      "updatedAt": "2025-07-31T23:06:07Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c1f5656041381845aec4563ddbe501b3a7b42ae4"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6hnTUa",
      "title": "Bump version to 6.0",
      "url": "https://github.com/microsoft/TypeScript/pull/62162",
      "mergedAt": "2025-07-31T23:21:24Z",
      "updatedAt": "2025-07-31T23:21:25Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c6a1812e0cc5e0c878d222fa80bc3225f72c136d"
      },
      "author": {
        "login": "DanielRosenwasser"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "package-lock.json"
          },
          {
            "path": "package.json"
          },
          {
            "path": "src/compiler/corePublic.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6iDBhS",
      "title": "added john favret to pr_owners.txt",
      "url": "https://github.com/microsoft/TypeScript/pull/62191",
      "mergedAt": "2025-08-04T17:40:58Z",
      "updatedAt": "2025-08-04T17:40:58Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e3ef7ff50db66b6a2af8090f79d9039356ec0096"
      },
      "author": {
        "login": "johnfav03"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/pr_owners.txt"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6dqlrK",
      "title": "Bump github/codeql-action from 3.29.1 to 3.29.2 in the github-actions group",
      "url": "https://github.com/microsoft/TypeScript/pull/62006",
      "mergedAt": "2025-08-05T16:14:48Z",
      "updatedAt": "2025-08-05T16:14:50Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "391616532d6827254a86dc266121fd5d1958ffb9"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6i9Gy9",
      "title": "Bump the github-actions group with 2 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/62252",
      "mergedAt": "2025-08-11T16:49:31Z",
      "updatedAt": "2025-08-11T16:49:33Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "605d7ee0bde95823d33251d0eb6d12764ecefd25"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6iHNuS",
      "title": "Update Node.js core modules",
      "url": "https://github.com/microsoft/TypeScript/pull/62201",
      "mergedAt": "2025-08-11T20:16:40Z",
      "updatedAt": "2025-08-11T21:26:07Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e39d5775b68800a3f8b57aab4734a770c4383a80"
      },
      "author": {
        "login": "Renegade334"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Renegade334"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/discover-typings-should-return-node-for-core-modules.js"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6jtQ40",
      "title": "Update deps",
      "url": "https://github.com/microsoft/TypeScript/pull/62285",
      "mergedAt": "2025-08-14T19:17:25Z",
      "updatedAt": "2025-08-14T19:17:28Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "73c0bc8bc84f398990b4a79d732bbd00ca453cd5"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "package-lock.json"
          },
          {
            "path": "package.json"
          },
          {
            "path": "src/compiler/core.ts"
          },
          {
            "path": "src/harness/harnessGlobals.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6kAq_H",
      "title": "Bump the github-actions group with 2 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/62299",
      "mergedAt": "2025-08-18T18:50:03Z",
      "updatedAt": "2025-08-18T18:50:05Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "261630d650c0c961860187bebc86e25c3707c05d"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/accept-baselines-fix-lints.yaml"
          },
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/copilot-setup-steps.yml"
          },
          {
            "path": ".github/workflows/create-cherry-pick-pr.yml"
          },
          {
            "path": ".github/workflows/insiders.yaml"
          },
          {
            "path": ".github/workflows/lkg.yml"
          },
          {
            "path": ".github/workflows/new-release-branch.yaml"
          },
          {
            "path": ".github/workflows/nightly.yaml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          },
          {
            "path": ".github/workflows/set-version.yaml"
          },
          {
            "path": ".github/workflows/sync-branch.yaml"
          },
          {
            "path": ".github/workflows/sync-wiki.yml"
          },
          {
            "path": ".github/workflows/twoslash-repros.yaml"
          },
          {
            "path": ".github/workflows/update-package-lock.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6k7L72",
      "title": "Allow `--module bundler --moduleResolution commonjs`",
      "url": "https://github.com/microsoft/TypeScript/pull/62320",
      "mergedAt": "2025-08-22T21:17:19Z",
      "updatedAt": "2025-08-25T12:58:13Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e635bb97f59c892f62c5061cbfeab5af211d743c"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/program.ts"
          },
          {
            "path": "tests/baselines/reference/allowImportingTsExtensions(moduleresolution=bundler).errors.txt"
          },
          {
            "path": "tests/baselines/reference/bundlerCommonJS.errors.txt"
          },
          {
            "path": "tests/baselines/reference/bundlerCommonJS.js"
          },
          {
            "path": "tests/baselines/reference/bundlerCommonJS.trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=node18,moduleresolution=bundler).errors.txt"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=node20,moduleresolution=bundler).errors.txt"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=bundler).errors.txt"
          },
          {
            "path": "tests/baselines/reference/bundlerOptionsCompat.errors.txt"
          },
          {
            "path": "tests/baselines/reference/extensionLoadingPriority(moduleresolution=bundler).errors.txt"
          },
          {
            "path": "tests/baselines/reference/impliedNodeFormatEmit1(module=amd).errors.txt"
          },
          {
            "path": "tests/baselines/reference/impliedNodeFormatEmit1(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/impliedNodeFormatEmit1(module=system).errors.txt"
          },
          {
            "path": "tests/baselines/reference/impliedNodeFormatEmit1(module=umd).errors.txt"
          },
          {
            "path": "tests/baselines/reference/impliedNodeFormatEmit2(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/impliedNodeFormatEmit3(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/impliedNodeFormatEmit4(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nestedPackageJsonRedirect(moduleresolution=bundler).errors.txt"
          },
          {
            "path": "tests/baselines/reference/packageJsonImportsExportsOptionCompat(moduleresolution=bundler).errors.txt"
          },
          {
            "path": "tests/baselines/reference/resolutionCandidateFromPackageJsonField2(moduleresolution=bundler).errors.txt"
          },
          {
            "path": "tests/cases/conformance/moduleResolution/bundler/bundlerCommonJS.ts"
          },
          {
            "path": "tests/cases/conformance/moduleResolution/bundler/bundlerOptionsCompat.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6lgImZ",
      "title": "Stop pinging Kat on protocol changes",
      "url": "https://github.com/microsoft/TypeScript/pull/62339",
      "mergedAt": "2025-08-26T23:34:39Z",
      "updatedAt": "2025-08-26T23:43:16Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3eb7b6a1794a6d2cde7948a3016c57e628b104b9"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/pr-modified-files.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6lgGSE",
      "title": "Deprecate `--moduleResolution node10`",
      "url": "https://github.com/microsoft/TypeScript/pull/62338",
      "mergedAt": "2025-08-27T20:51:20Z",
      "updatedAt": "2025-08-28T18:36:31Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "7956c00166df552a1d6da6c2f996b558e5dd94ff"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/program.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/server/protocol.ts"
          },
          {
            "path": "src/services/completions.ts"
          },
          {
            "path": "src/services/stringCompletions.ts"
          },
          {
            "path": "src/testRunner/unittests/tscWatch/watchEnvironment.ts"
          },
          {
            "path": "src/testRunner/unittests/tsserver/autoImportProvider.ts"
          },
          {
            "path": "src/testRunner/unittests/tsserver/completionsIncomplete.ts"
          },
          {
            "path": "src/testRunner/unittests/tsserver/getEditsForFileRename.ts"
          },
          {
            "path": "src/testRunner/unittests/tsserver/typingsInstaller.ts"
          },
          {
            "path": "tests/baselines/reference/allowImportingTsExtensions(moduleresolution=node10).errors.txt"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/cachedModuleResolution1.trace.json"
          },
          {
            "path": "tests/baselines/reference/cachedModuleResolution2.trace.json"
          },
          {
            "path": "tests/baselines/reference/cachedModuleResolution5.trace.json"
          },
          {
            "path": "tests/baselines/reference/cachedModuleResolution6.trace.json"
          },
          {
            "path": "tests/baselines/reference/cachedModuleResolution7.trace.json"
          },
          {
            "path": "tests/baselines/reference/commonSourceDir5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/completionsImport_asKeyword.baseline"
          },
          {
            "path": "tests/baselines/reference/completionsImport_satisfiesKeyword.baseline"
          },
          {
            "path": "tests/baselines/reference/config/showConfig/Show TSConfig with compileOnSave and more/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/showConfig/Show TSConfig with paths and more/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/showConfig/Show TSConfig with transitively implied options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/showConfig/Shows tsconfig for single option/module/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/showConfig/Shows tsconfig for single option/moduleResolution/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/duplicatePackage_relativeImportWithinPackage.trace.json"
          },
          {
            "path": "tests/baselines/reference/duplicatePackage_relativeImportWithinPackage_scoped.trace.json"
          },
          {
            "path": "tests/baselines/reference/es6ExportEqualsInterop.errors.txt"
          },
          {
            "path": "tests/baselines/reference/es6ExportEqualsInterop.types"
          },
          {
            "path": "tests/baselines/reference/es6ImportDefaultBindingInEs5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/es6ImportDefaultBindingInEs5.types"
          },
          {
            "path": "tests/baselines/reference/exportEqualsDefaultProperty.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportEqualsDefaultProperty.symbols"
          },
          {
            "path": "tests/baselines/reference/exportEqualsDefaultProperty.types"
          },
          {
            "path": "tests/baselines/reference/extensionLoadingPriority(moduleresolution=node).symbols"
          },
          {
            "path": "tests/baselines/reference/extensionLoadingPriority(moduleresolution=node).types"
          },
          {
            "path": "tests/baselines/reference/importCallExpressionInExportEqualsCJS.types"
          },
          {
            "path": "tests/baselines/reference/importWithTrailingSlash.trace.json"
          },
          {
            "path": "tests/baselines/reference/importWithTrailingSlash_noResolve.trace.json"
          },
          {
            "path": "tests/baselines/reference/javascriptImportDefaultBadExport.errors.txt"
          },
          {
            "path": "tests/baselines/reference/javascriptImportDefaultBadExport.types"
          },
          {
            "path": "tests/baselines/reference/legacyNodeModulesExportsSpecifierGenerationConditions.errors.txt"
          },
          {
            "path": "tests/baselines/reference/legacyNodeModulesExportsSpecifierGenerationConditions.js"
          },
          {
            "path": "tests/baselines/reference/legacyNodeModulesExportsSpecifierGenerationConditions.types"
          },
          {
            "path": "tests/baselines/reference/maxNodeModuleJsDepthDefaultsToZero.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleElementsInWrongContext.types"
          },
          {
            "path": "tests/baselines/reference/moduleResolution/relative-module-name-as-directory-load-index.js"
          },
          {
            "path": "tests/baselines/reference/moduleResolution/relative-module-name-as-directory.js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionAsTypeReferenceDirective.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionAsTypeReferenceDirectiveAmbient.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionAsTypeReferenceDirectiveScoped.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionPackageIdWithRelativeAndAbsolutePath.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithExtensions.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithExtensions_notSupported.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithExtensions_notSupported2.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithExtensions_notSupported3.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithExtensions_unexpected.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithExtensions_unexpected2.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithExtensions_withAmbientPresent.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithExtensions_withPaths.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithRequireAndImport.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_empty.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_notSpecified.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_oneBlank.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_oneNotFound.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_dirModuleWithIndex.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_externalModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_externalModulePath.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_externalModule_withPaths.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_externalTSModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_jsModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_jsonModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_threeLastIsBlank1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_threeLastIsBlank2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_threeLastIsBlank3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_threeLastIsBlank4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSymlinks.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSymlinks_notInNodeModules.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSymlinks_preserveSymlinks.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSymlinks_withOutDir.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolution_packageJson_notAtPackageRoot.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolution_packageJson_notAtPackageRoot_fakeScopedPackage.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolution_packageJson_scopedPackage.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolution_packageJson_yesAtPackageRoot.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolution_packageJson_yesAtPackageRoot_fakeScopedPackage.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolution_packageJson_yesAtPackageRoot_mainFieldInSubDirectory.trace.json"
          },
          {
            "path": "tests/baselines/reference/module_augmentUninstantiatedModule2.js"
          },
          {
            "path": "tests/baselines/reference/module_augmentUninstantiatedModule2.symbols"
          },
          {
            "path": "tests/baselines/reference/module_augmentUninstantiatedModule2.types"
          },
          {
            "path": "tests/baselines/reference/noBundledEmitFromNodeModules.errors.txt"
          },
          {
            "path": "tests/baselines/reference/node10AlternateResult_noResolution.errors.txt"
          },
          {
            "path": "tests/baselines/reference/node10Alternateresult_noTypes.errors.txt"
          },
          {
            "path": "tests/baselines/reference/node10IsNode_node.errors.txt"
          },
          {
            "path": "tests/baselines/reference/node10IsNode_node10.trace.json"
          },
          {
            "path": "tests/baselines/reference/node10IsNode_node10.types"
          },
          {
            "path": "tests/baselines/reference/nodeColonModuleResolution.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeColonModuleResolution2.trace.json"
          },
          {
            "path": "tests/baselines/reference/packageJsonImportsExportsOptionCompat(moduleresolution=node).errors.txt"
          },
          {
            "path": "tests/baselines/reference/packageJsonMain.trace.json"
          },
          {
            "path": "tests/baselines/reference/packageJsonMain_isNonRecursive.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution3_node.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution4_node.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution5_node.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution6_node.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution7_node.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution8_node.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_rootImport_aliasWithRoot.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_rootImport_aliasWithRoot_differentRootTypes.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_rootImport_aliasWithRoot_multipleAliases.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_rootImport_aliasWithRoot_realRootFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_rootImport_noAliasWithRoot.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_rootImport_noAliasWithRoot_realRootFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_withExtension.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_withExtensionInName.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_withExtension_MapedToNodeModules.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_withExtension_failedLookup.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathsValidation4.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathsValidation5.trace.json"
          },
          {
            "path": "tests/baselines/reference/project/nodeModulesImportHigher/amd/nodeModulesImportHigher.errors.txt"
          },
          {
            "path": "tests/baselines/reference/project/nodeModulesImportHigher/node/nodeModulesImportHigher.errors.txt"
          },
          {
            "path": "tests/baselines/reference/project/nodeModulesMaxDepthExceeded/amd/nodeModulesMaxDepthExceeded.errors.txt"
          },
          {
            "path": "tests/baselines/reference/project/nodeModulesMaxDepthExceeded/node/nodeModulesMaxDepthExceeded.errors.txt"
          },
          {
            "path": "tests/baselines/reference/project/nodeModulesMaxDepthIncreased/amd/nodeModulesMaxDepthIncreased.errors.txt"
          },
          {
            "path": "tests/baselines/reference/project/nodeModulesMaxDepthIncreased/node/nodeModulesMaxDepthIncreased.errors.txt"
          },
          {
            "path": "tests/baselines/reference/reexportMissingDefault4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/reexportMissingDefault4.types"
          },
          {
            "path": "tests/baselines/reference/requireOfJsonFileWithModuleNodeResolutionEmitAmd.errors.txt"
          },
          {
            "path": "tests/baselines/reference/requireOfJsonFileWithModuleNodeResolutionEmitAmdOutFile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/requireOfJsonFileWithModuleNodeResolutionEmitNone.errors.txt"
          },
          {
            "path": "tests/baselines/reference/requireOfJsonFileWithModuleNodeResolutionEmitSystem.errors.txt"
          },
          {
            "path": "tests/baselines/reference/requireOfJsonFileWithModuleNodeResolutionEmitUmd.errors.txt"
          },
          {
            "path": "tests/baselines/reference/requireOfJsonFileWithoutResolveJsonModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/requireOfJsonFileWithoutResolveJsonModule.js"
          },
          {
            "path": "tests/baselines/reference/requireOfJsonFileWithoutResolveJsonModule.symbols"
          },
          {
            "path": "tests/baselines/reference/requireOfJsonFileWithoutResolveJsonModule.types"
          },
          {
            "path": "tests/baselines/reference/requireOfJsonFileWithoutResolveJsonModuleAndPathMapping.trace.json"
          },
          {
            "path": "tests/baselines/reference/requireOfJsonFile_PathMapping.trace.json"
          },
          {
            "path": "tests/baselines/reference/resolutionCandidateFromPackageJsonField2(moduleresolution=node10).errors.txt"
          },
          {
            "path": "tests/baselines/reference/resolutionCandidateFromPackageJsonField2(moduleresolution=node10).js"
          },
          {
            "path": "tests/baselines/reference/resolutionCandidateFromPackageJsonField2(moduleresolution=node10).symbols"
          },
          {
            "path": "tests/baselines/reference/resolutionCandidateFromPackageJsonField2(moduleresolution=node10).types"
          },
          {
            "path": "tests/baselines/reference/resolutionCandidateFromPackageJsonField2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/resolutionCandidateFromPackageJsonField2.js"
          },
          {
            "path": "tests/baselines/reference/resolutionCandidateFromPackageJsonField2.symbols"
          },
          {
            "path": "tests/baselines/reference/resolutionCandidateFromPackageJsonField2.types"
          },
          {
            "path": "tests/baselines/reference/resolutionModeImportType1(moduleresolution=node10).errors.txt"
          },
          {
            "path": "tests/baselines/reference/resolutionModeImportType1(moduleresolution=node10).symbols"
          },
          {
            "path": "tests/baselines/reference/resolutionModeImportType1(moduleresolution=node10).types"
          },
          {
            "path": "tests/baselines/reference/resolutionModeTripleSlash4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/resolutionModeTripleSlash5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/resolutionModeTypeOnlyImport1(moduleresolution=node10).errors.txt"
          },
          {
            "path": "tests/baselines/reference/resolutionModeTypeOnlyImport1(moduleresolution=node10).js"
          },
          {
            "path": "tests/baselines/reference/resolutionModeTypeOnlyImport1(moduleresolution=node10).symbols"
          },
          {
            "path": "tests/baselines/reference/resolutionModeTypeOnlyImport1(moduleresolution=node10).types"
          },
          {
            "path": "tests/baselines/reference/scopedPackages.trace.json"
          },
          {
            "path": "tests/baselines/reference/syntheticDefaultExportsWithDynamicImports.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Correctly serialize metadata when transpile with CommonJS option (verbatimModuleSyntax=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Correctly serialize metadata when transpile with CommonJS option (verbatimModuleSyntax=true).oldTranspile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Correctly serialize metadata when transpile with CommonJS option.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Correctly serialize metadata when transpile with CommonJS option.oldTranspile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Correctly serialize metadata when transpile with System option.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Correctly serialize metadata when transpile with System option.oldTranspile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Supports setting moduleResolution (verbatimModuleSyntax=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Supports setting moduleResolution (verbatimModuleSyntax=true).oldTranspile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Supports setting moduleResolution.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Supports setting moduleResolution.oldTranspile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/tripleSlashTypesReferenceWithMissingExports(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/tsbuild/extends/configDir-template.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/fileDelete/multiFile/deleted-file-without-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/fileDelete/multiFile/detects-deleted-file.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleResolution/resolves-specifier-in-output-declaration-file-from-referenced-project-correctly-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleResolution/resolves-specifier-in-output-declaration-file-from-referenced-project-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/files-containing-json-file-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/files-containing-json-file.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-and-files-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-and-files.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-of-json-along-with-other-include-and-file-name-matches-ts-file-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-of-json-along-with-other-include-and-file-name-matches-ts-file.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-of-json-along-with-other-include-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-of-json-along-with-other-include.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-with-json-not-in-rootDir-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-with-json-not-in-rootDir.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-with-json-without-rootDir-but-outside-configDirectory-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-with-json-without-rootDir-but-outside-configDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-without-outDir-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-without-outDir.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/sourcemap-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/sourcemap.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/without-outDir-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/without-outDir.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/roots/when-root-file-is-from-referenced-project-and-shared-is-first.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/roots/when-root-file-is-from-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/transitiveReferences/reports-error-about-module-not-found-with-node-resolution-with-external-module-name.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/extends/configDir-template.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/moduleResolution/build-mode-watches-for-changes-to-package-json-main-fields.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/works-with-extended-source-files.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/roots/when-root-file-is-from-referenced-project-and-shared-is-first.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/roots/when-root-file-is-from-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsc/declarationEmit/when-same-version-is-referenced-through-source-and-another-symlinked-package-moduleCaseChange.js"
          },
          {
            "path": "tests/baselines/reference/tsc/declarationEmit/when-same-version-is-referenced-through-source-and-another-symlinked-package-with-indirect-link-moduleCaseChange.js"
          },
          {
            "path": "tests/baselines/reference/tsc/declarationEmit/when-same-version-is-referenced-through-source-and-another-symlinked-package-with-indirect-link.js"
          },
          {
            "path": "tests/baselines/reference/tsc/declarationEmit/when-same-version-is-referenced-through-source-and-another-symlinked-package.js"
          },
          {
            "path": "tests/baselines/reference/tsc/declarationEmit/when-using-Windows-paths-and-uppercase-letters.js"
          },
          {
            "path": "tests/baselines/reference/tsc/extends/configDir-template-with-commandline.js"
          },
          {
            "path": "tests/baselines/reference/tsc/extends/configDir-template.js"
          },
          {
            "path": "tests/baselines/reference/tsc/moduleResolution/pnpm-style-layout.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/extends/configDir-template.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/jsxImportSource-option-changed.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/when-file-is-included-from-multiple-places-with-different-casing.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/editing-module-augmentation-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/importHelpers-backing-types-removed-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/jsxImportSource-backing-types-added-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/jsxImportSource-backing-types-removed-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/jsxImportSource-option-changed-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/moduleResolution/ambient-module-names-are-resolved-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/moduleResolution/late-discovered-dependency-symlink.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/moduleResolution/watches-for-changes-to-package-json-main-fields.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/can-correctly-update-configured-project-when-set-of-root-files-has-changed-through-include.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/correctly-parses-wild-card-directories-from-implicit-glob-when-two-keys-differ-only-in-directory-seperator.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/should-properly-handle-module-resolution-changes-in-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-moduleResolution-when-resolveJsonModule-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/when-changing-checkJs-of-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/when-changing-noUncheckedSideEffectImports-of-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/on-sample-project.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/on-transitive-references-in-different-folders-with-no-files-clause.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/on-transitive-references-in-different-folders.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/on-transitive-references.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/when-declarationMap-changes-for-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/when-referenced-project-uses-different-module-resolution.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/ignores-changes-in-node_modules-that-start-with-dot/watch-with-configFile.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/ignores-changes-in-node_modules-that-start-with-dot/watch-without-configFile.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/reusing-type-ref-resolution.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/scoped-package-installation.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/when-dir-watcher-is-invoked-without-file-change.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/with-modules-linked-to-sibling-folder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/works-when-included-file-with-ambient-module-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/works-when-module-resolution-changes-to-ambient-module.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/works-when-renaming-node_modules-folder-that-already-contains-@types-folder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/works-when-reusing-program-with-files-from-external-library.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-packageJson-has-types-field-when-solution-is-already-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-packageJson-has-types-field-with-preserveSymlinks-when-solution-is-already-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-packageJson-has-types-field-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-packageJson-has-types-field-with-scoped-package-when-solution-is-already-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-packageJson-has-types-field-with-scoped-package-with-preserveSymlinks-when-solution-is-already-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-packageJson-has-types-field-with-scoped-package-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-packageJson-has-types-field-with-scoped-package.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-packageJson-has-types-field.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-referencing-file-from-subFolder-when-solution-is-already-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-referencing-file-from-subFolder-with-preserveSymlinks-when-solution-is-already-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-referencing-file-from-subFolder-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-referencing-file-from-subFolder-with-scoped-package-when-solution-is-already-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-referencing-file-from-subFolder-with-scoped-package-with-preserveSymlinks-when-solution-is-already-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-referencing-file-from-subFolder-with-scoped-package-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-referencing-file-from-subFolder-with-scoped-package.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-referencing-file-from-subFolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-package1-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-Windows.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-Windows.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/host-implements-does-not-implement-hasInvalidatedResolutions.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/host-implements-hasInvalidatedResolutions.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/verify-that-module-resolution-with-json-extension-works-when-returned-without-extension.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders-with-synchronousWatchDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-with-outDir-and-declaration-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeFiles-option-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeFiles-option.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/Auto-importable-file-is-in-inferred-project-until-imported.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/Does-not-schedule-ensureProjectForOpenFiles-on-AutoImportProviderProject-creation.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/Responds-to-automatic-changes-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/Responds-to-manual-changes-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/Shared-source-files-between-AutoImportProvider-and-main-program.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/dependencies-are-already-in-main-program.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/auxiliaryProject/does-not-remove-scrips-from-InferredProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/auxiliaryProject/file-is-added-later-through-finding-definition.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/auxiliaryProject/resolution-is-reused-from-different-folder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/includes-the-parent-folder-FLLs-in-Classic-module-resolution-mode.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/includes-the-parent-folder-FLLs-in-Node-module-resolution-mode.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/npm-install-works-when-timeout-occurs-after-installation.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/npm-install-works-when-timeout-occurs-inbetween-installation.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/watchDirectories-for-config-file-with-case-insensitive-file-system.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/watchDirectories-for-config-file-with-case-sensitive-file-system.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/when-node_modules-dont-receive-event-for-the-@types-file-addition.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/codeFix/install-package-when-serialized.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/codeFix/install-package.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completions/in-project-reference-setup-with-path-mapping-with-existing-import-without-includeCompletionsForModuleExports.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completions/in-project-reference-setup-with-path-mapping-with-existing-import.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completions/in-project-reference-setup-with-path-mapping-without-includeCompletionsForModuleExports.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completions/in-project-reference-setup-with-path-mapping.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completions/in-project-where-there-are-no-imports-but-has-project-references-setup.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completions/works-when-files-are-included-from-two-different-drives-of-windows.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completions/works.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completionsIncomplete/ambient-module-specifier-resolutions-do-not-count-against-the-resolution-limit.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completionsIncomplete/resolves-more-when-available-from-module-specifier-cache-(1).js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completionsIncomplete/resolves-more-when-available-from-module-specifier-cache-(2).js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completionsIncomplete/works-for-transient-symbols-between-requests.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completionsIncomplete/works-with-PackageJsonAutoImportProvider.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completionsIncomplete/works.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configFileSearch/should-use-projectRootPath-when-searching-for-inferred-project-again-2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configFileSearch/should-use-projectRootPath-when-searching-for-inferred-project-again.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configFileSearch/tsconfig-for-the-file-does-not-exist.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configFileSearch/tsconfig-for-the-file-exists.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/failed-lookup-locations-uses-parent-most-node_modules-directory.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/should-properly-handle-module-resolution-changes-in-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/when-multiple-projects-are-open-detects-correct-default-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/documentRegistry/works-when-reusing-orphan-script-info-with-different-scriptKind.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/duplicatePackages/works-with-import-fixes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/largeFileReferenced/when-large-js-file-is-included-by-module-resolution.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-project-is-at-root-level.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-project-is-not-at-root-level.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-project-is-at-root-level.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-project-is-not-at-root-level.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-project-is-at-root-level.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-project-is-not-at-root-level.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/watchEvents/canUseWatchEvents-on-windows.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/watchEvents/canUseWatchEvents-without-canUseEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/watchEvents/canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/caches-auto-imports-in-the-same-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/does-not-invalidate-the-cache-when-package.json-is-changed-inconsequentially.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/does-not-invalidate-the-cache-when-referenced-project-changes-inconsequentially-referencedInProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/does-not-invalidate-the-cache-when-referenced-project-changes-inconsequentially.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/does-not-store-transient-symbols-through-program-updates.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/invalidates-the-cache-when-files-are-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/invalidates-the-cache-when-new-files-are-added.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/invalidates-the-cache-when-package.json-change-results-in-AutoImportProvider-change.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/invalidates-the-cache-when-referenced-project-changes-signatures-referencedInProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/invalidates-the-cache-when-referenced-project-changes-signatures.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/extends/configDir-template.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/correctly-handling-add-or-remove-tsconfig---1-with-lazyConfiguredProjectsFromExternalProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/correctly-handling-add-or-remove-tsconfig---1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/deleting-config-file-opened-from-the-external-project-works.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-file-is-included-from-multiple-places-with-different-casing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_baseUrl_toDist.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_paths_toDist2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportPackageJsonFilterExistingImport1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider6.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider9.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_exportMap1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_exportMap2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_exportMap3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_exportMap4.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_exportMap5.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_exportMap6.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_exportMap7.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_exportMap8.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_exportMap9.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportReExportFromAmbientModule.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/completionEntryDetailAcrossFiles01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/completionEntryDetailAcrossFiles02.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/completionsImport_addToNamedWithDifferentCacheValue.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/completionsImport_defaultAndNamedConflict_server.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/completionsImport_jsModuleExportsAssignment.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/completionsImport_mergedReExport.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/declarationMapsOutOfDateMapping.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource10_mapFromAtTypes3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource11_propertyOfAlias.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource12_callbackParam.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource14_unresolvedRequireDestructuring.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource16_callbackParamDifferentFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource17_AddsFileToProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource18_reusedFromDifferentFolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource1_localJsBesideDts.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource2_nodeModulesWithTypes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource3_nodeModulesAtTypes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource6_sameAsGoToDef2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource7_conditionallyMinified.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource8_mapFromAtTypes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource9_mapFromAtTypes2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importStatementCompletions_pnpmTransitive.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/navto_serverExcludeLib.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/nonJsDeclarationFilePathCompletions.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getEditsForFileRename/works-when-moving-file-to-and-from-folder-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getEditsForFileRename/works-when-moving-file-to-and-from-folder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getEditsForFileRename/works-with-when-file-is-opened-after-seeing-file-existance-on-the-disk-with-updateOpen.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getEditsForFileRename/works-with-when-file-is-opened-after-seeing-file-existance-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getEditsForFileRename/works-with-when-file-is-opened-before-seeing-file-existance-on-the-disk-closed-before-change-with-updateOpen.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getEditsForFileRename/works-with-when-file-is-opened-before-seeing-file-existance-on-the-disk-closed-before-change.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getEditsForFileRename/works-with-when-file-is-opened-before-seeing-file-existance-on-the-disk-with-updateOpen.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getEditsForFileRename/works-with-when-file-is-opened-before-seeing-file-existance-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/importHelpers/import-helpers-successfully.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/importHelpers/should-not-crash-in-tsserver.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/inferredProjects/project-settings-for-inferred-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/inferredProjects/when-existing-inferred-project-has-no-root-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/maxNodeModuleJsDepth/handles-resolutions-when-currentNodeModulesDepth-changes-when-referencing-file-from-another-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/maxNodeModuleJsDepth/should-be-set-to-2-if-the-project-has-js-root-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleSpecifierCache/caches-importability-within-a-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleSpecifierCache/caches-module-specifiers-within-a-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleSpecifierCache/does-not-invalidate-the-cache-when-new-files-are-added.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleSpecifierCache/invalidates-module-specifiers-when-changes-happen-in-contained-node_modules-directories.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleSpecifierCache/invalidates-the-cache-when-local-packageJson-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleSpecifierCache/invalidates-the-cache-when-module-resolution-settings-change.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleSpecifierCache/invalidates-the-cache-when-symlinks-are-added-or-removed.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleSpecifierCache/invalidates-the-cache-when-user-preferences-change.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/packageJsonInfo/detects-new-package.json-files-that-are-added,-caches-them,-and-watches-them.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/packageJsonInfo/finds-multiple-package.json-files-when-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/packageJsonInfo/finds-package.json-on-demand,-watches-for-deletion,-and-removes-them-from-cache.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/plugins/when-scriptKind-changes-for-the-external-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/pluginsAsync/project-is-deferred-closed-before-plugins-are-loaded.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/correct-errors-when-resolution-resolves-to-file-that-has-same-ambient-module-and-is-also-module.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/npm-install-when-timeout-occurs-after-installation.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/npm-install-when-timeout-occurs-inbetween-installation.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/auto-import-with-referenced-project-when-built-with-disableSourceOfProjectReferenceRedirect.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/auto-import-with-referenced-project-when-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/auto-import-with-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/disables-looking-into-the-child-project-if-disableReferencedProjectLoad-is-set-in-indirect-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/disables-looking-into-the-child-project-if-disableReferencedProjectLoad-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-packageJson-has-types-field-and-has-index.ts-and-solution-is-built-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-packageJson-has-types-field-and-has-index.ts-and-solution-is-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-packageJson-has-types-field-and-has-index.ts-and-solution-is-not-built-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-packageJson-has-types-field-and-has-index.ts-and-solution-is-not-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-packageJson-has-types-field-and-has-index.ts-with-scoped-package-and-solution-is-built-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-packageJson-has-types-field-and-has-index.ts-with-scoped-package-and-solution-is-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-packageJson-has-types-field-and-has-index.ts-with-scoped-package-and-solution-is-not-built-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-packageJson-has-types-field-and-has-index.ts-with-scoped-package-and-solution-is-not-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-referencing-file-from-subFolder-and-solution-is-built-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-referencing-file-from-subFolder-and-solution-is-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-referencing-file-from-subFolder-and-solution-is-not-built-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-referencing-file-from-subFolder-and-solution-is-not-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-referencing-file-from-subFolder-with-scoped-package-and-solution-is-built-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-referencing-file-from-subFolder-with-scoped-package-and-solution-is-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-referencing-file-from-subFolder-with-scoped-package-and-solution-is-not-built-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-referencing-file-from-subFolder-with-scoped-package-and-solution-is-not-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/project-is-directly-referenced-by-solution.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/project-is-indirectly-referenced-by-solution.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/solution-with-its-own-files-and-project-is-indirectly-referenced-by-solution.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-file-is-not-part-of-first-config-tree-found-demoConfig-change-with-file-open-before-revert.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-file-is-not-part-of-first-config-tree-found-demoConfig-change.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-file-is-not-part-of-first-config-tree-found-solutionConfig-delete-with-file-open-before-revert.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-file-is-not-part-of-first-config-tree-found-solutionConfig-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-file-is-not-part-of-first-config-tree-found-solutionConfig-without-reference-to-demo-with-file-open-before-revert.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-file-is-not-part-of-first-config-tree-found-solutionConfig-without-reference-to-demo.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-the-referenced-projects-have-allowJs-and-emitDeclarationOnly.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/goToDef-and-rename-locations-and-deleting-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/goToDef-and-rename-locations-and-deleting-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/goToDef-and-rename-locations-and-deleting-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/config-file-is-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/does-not-look-beyond-node_modules-folders-for-default-configured-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/file-with-name-constructor.js-doesnt-cause-issue-with-typeAcquisition-when-safe-type-list.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/trasitive-references-without-files-with-deleting-referenced-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/trasitive-references-without-files-with-deleting-transitively-referenced-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/reloadProjects/configured-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/reloadProjects/external-project-with-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/reloadProjects/external-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/reloadProjects/inferred-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/rename/with-symlinks-and-case-difference.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/avoid-unnecessary-lookup-invalidation-on-save.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/can-load-typings-that-are-proper-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/disable-suggestion-diagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/non-relative-module-name-from-files-in-different-folders.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/non-relative-module-name-from-files-in-same-folder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/non-relative-module-name-from-inferred-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/not-sharing-across-references.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/npm-install-@types-works.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/relative-module-name-from-files-in-different-folders.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/relative-module-name-from-files-in-same-folder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/sharing-across-references.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-watching-node_modules-as-part-of-wild-card-directories-in-config-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-watching-node_modules-in-inferred-project-for-failed-lookup-closed-script-infos.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/module-resolution-when-project-compiles-from-sources.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/module-resolution-when-project-has-node_modules-setup-but-doesnt-have-modules-in-typings-folder-and-then-recompiles.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/module-resolution-when-project-recompiles-after-deleting-generated-folders.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/module-resolution-with-path-mapping-when-project-compiles-from-sources.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/module-resolution-with-path-mapping-when-project-has-node_modules-setup-but-doesnt-have-modules-in-typings-folder-and-then-recompiles.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/module-resolution-with-path-mapping-when-project-recompiles-after-deleting-generated-folders.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Windows-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Windows.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Windows-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Windows.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/when-not-symlink-but-differs-in-casing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symlinkCache/contains-symlinks-discovered-by-project-references-resolution-after-program-creation.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/syntaxOperations/file-is-removed-and-added-with-different-content.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typeAquisition/prefer-typings-in-second-pass.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/cached-unresolved-typings-are-not-recomputed-if-program-structure-did-not-change.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/discover-from-node_modules-empty-types-has-import.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/install-typings-for-unresolved-imports.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/invalidate-the-resolutions-with-trimmed-names.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/invalidate-the-resolutions.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/local-module-should-not-be-picked-up.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/pick-typing-names-from-nonrelative-unresolved-imports.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/redo-resolutions-pointing-to-js-on-typing-install.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/should-handle-node-core-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/external-project-watch-options-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/external-project-watch-options-in-host-configuration.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/external-project-watch-options.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/inferred-project-watch-options-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/inferred-project-watch-options-in-host-configuration.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/inferred-project-watch-options.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/project-with-ascii-file-names-with-i.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/project-with-ascii-file-names.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/project-with-unicode-file-names.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/recursive-directory-does-not-watch-files-starting-with-dot-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/watching-npm-install-in-codespaces-where-workspaces-folder-is-hosted-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/when-watchFile-is-single-watcher-per-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/with-excludeDirectories-option-in-configFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/with-excludeDirectories-option-in-configuration.js"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives10.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives11.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives12.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives13.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives5.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives8.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives9.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeRootsFromMultipleNodeModulesDirectories.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeRootsFromNodeModulesInParentDirectory.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.ambientModules.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.emptyTypes.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.justIndex.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.ambient.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToSelf.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToUnmapped.trace.json"
          },
          {
            "path": "tests/baselines/reference/typingsLookup4.trace.json"
          },
          {
            "path": "tests/baselines/reference/untypedModuleImport_allowJs.errors.txt"
          },
          {
            "path": "tests/baselines/reference/untypedModuleImport_allowJs.symbols"
          },
          {
            "path": "tests/baselines/reference/untypedModuleImport_allowJs.types"
          },
          {
            "path": "tests/baselines/reference/verbatimModuleSyntaxRestrictionsESM(esmoduleinterop=false).errors.txt"
          },
          {
            "path": "tests/baselines/reference/verbatimModuleSyntaxRestrictionsESM(esmoduleinterop=false).types"
          },
          {
            "path": "tests/cases/compiler/bundledDtsLateExportRenaming.ts"
          },
          {
            "path": "tests/cases/compiler/cachedModuleResolution1.ts"
          },
          {
            "path": "tests/cases/compiler/cachedModuleResolution2.ts"
          },
          {
            "path": "tests/cases/compiler/cachedModuleResolution5.ts"
          },
          {
            "path": "tests/cases/compiler/cachedModuleResolution6.ts"
          },
          {
            "path": "tests/cases/compiler/cachedModuleResolution7.ts"
          },
          {
            "path": "tests/cases/compiler/checkerInitializationCrash.ts"
          },
          {
            "path": "tests/cases/compiler/commonSourceDir5.ts"
          },
          {
            "path": "tests/cases/compiler/commonSourceDirectory.ts"
          },
          {
            "path": "tests/cases/compiler/commonSourceDirectory_dts.ts"
          },
          {
            "path": "tests/cases/compiler/elidedJSImport1.ts"
          },
          {
            "path": "tests/cases/compiler/impliedNodeFormatInterop1.ts"
          },
          {
            "path": "tests/cases/compiler/importNonExportedMember12.ts"
          },
          {
            "path": "tests/cases/compiler/importWithTrailingSlash.ts"
          },
          {
            "path": "tests/cases/compiler/importWithTrailingSlash_noResolve.ts"
          },
          {
            "path": "tests/cases/compiler/maxNodeModuleJsDepthDefaultsToZero.ts"
          },
          {
            "path": "tests/cases/compiler/mergeSymbolReexportInterface.ts"
          },
          {
            "path": "tests/cases/compiler/mergeSymbolReexportedTypeAliasInstantiation.ts"
          },
          {
            "path": "tests/cases/compiler/mergeSymbolRexportFunction.ts"
          },
          {
            "path": "tests/cases/compiler/moduleDetectionIsolatedModulesCjsFileScope.ts"
          },
          {
            "path": "tests/cases/compiler/moduleResolutionWithSymlinks_preserveSymlinks.ts"
          },
          {
            "path": "tests/cases/compiler/module_augmentUninstantiatedModule2.ts"
          },
          {
            "path": "tests/cases/compiler/namespaceNotMergedWithFunctionDefaultExport.ts"
          },
          {
            "path": "tests/cases/compiler/noBundledEmitFromNodeModules.ts"
          },
          {
            "path": "tests/cases/compiler/nodeColonModuleResolution.ts"
          },
          {
            "path": "tests/cases/compiler/nodeColonModuleResolution2.ts"
          },
          {
            "path": "tests/cases/compiler/nodeResolution1.ts"
          },
          {
            "path": "tests/cases/compiler/nodeResolution2.ts"
          },
          {
            "path": "tests/cases/compiler/nodeResolution3.ts"
          },
          {
            "path": "tests/cases/compiler/nodeResolution4.ts"
          },
          {
            "path": "tests/cases/compiler/nodeResolution5.ts"
          },
          {
            "path": "tests/cases/compiler/nodeResolution6.ts"
          },
          {
            "path": "tests/cases/compiler/nodeResolution7.ts"
          },
          {
            "path": "tests/cases/compiler/nodeResolution8.ts"
          },
          {
            "path": "tests/cases/compiler/pathMappingBasedModuleResolution3_node.ts"
          },
          {
            "path": "tests/cases/compiler/pathMappingBasedModuleResolution4_node.ts"
          },
          {
            "path": "tests/cases/compiler/pathMappingBasedModuleResolution8_node.ts"
          },
          {
            "path": "tests/cases/compiler/reactImportDropped.ts"
          },
          {
            "path": "tests/cases/compiler/requireOfJsonFileWithModuleNodeResolutionEmitAmd.ts"
          },
          {
            "path": "tests/cases/compiler/requireOfJsonFileWithModuleNodeResolutionEmitAmdOutFile.ts"
          },
          {
            "path": "tests/cases/compiler/requireOfJsonFileWithModuleNodeResolutionEmitEs2015.ts"
          },
          {
            "path": "tests/cases/compiler/requireOfJsonFileWithModuleNodeResolutionEmitEsNext.ts"
          },
          {
            "path": "tests/cases/compiler/requireOfJsonFileWithModuleNodeResolutionEmitNone.ts"
          },
          {
            "path": "tests/cases/compiler/requireOfJsonFileWithModuleNodeResolutionEmitSystem.ts"
          },
          {
            "path": "tests/cases/compiler/requireOfJsonFileWithModuleNodeResolutionEmitUmd.ts"
          },
          {
            "path": "tests/cases/compiler/requireOfJsonFileWithModuleNodeResolutionEmitUndefined.ts"
          },
          {
            "path": "tests/cases/compiler/requireOfJsonFileWithoutEsModuleInterop.ts"
          },
          {
            "path": "tests/cases/compiler/resolutionCandidateFromPackageJsonField2.ts"
          },
          {
            "path": "tests/cases/compiler/syntheticDefaultExportsWithDynamicImports.ts"
          },
          {
            "path": "tests/cases/compiler/tslibInJs.ts"
          },
          {
            "path": "tests/cases/compiler/umdGlobalAugmentationNoCrash.ts"
          },
          {
            "path": "tests/cases/compiler/umdNamespaceMergedWithGlobalAugmentationIsNotCircular.ts"
          },
          {
            "path": "tests/cases/compiler/unionReductionWithStringMappingAndIdenticalBaseTypeExistsNoCrash.tsx"
          },
          {
            "path": "tests/cases/conformance/externalModules/typeOnly/cjsImportInES2015.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/verbatimModuleSyntaxNoElisionCJS.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/verbatimModuleSyntaxNoElisionESM.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/verbatimModuleSyntaxRestrictionsCJS.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/verbatimModuleSyntaxRestrictionsESM.ts"
          },
          {
            "path": "tests/cases/conformance/jsdoc/declarations/jsDeclarationsReferenceToClassInstanceCrossFile.ts"
          },
          {
            "path": "tests/cases/conformance/jsx/correctlyMarkAliasAsReferences1.tsx"
          },
          {
            "path": "tests/cases/conformance/jsx/correctlyMarkAliasAsReferences2.tsx"
          },
          {
            "path": "tests/cases/conformance/jsx/correctlyMarkAliasAsReferences3.tsx"
          },
          {
            "path": "tests/cases/conformance/jsx/correctlyMarkAliasAsReferences4.tsx"
          },
          {
            "path": "tests/cases/conformance/jsx/unicodeEscapesInJsxtags.tsx"
          },
          {
            "path": "tests/cases/conformance/moduleResolution/allowImportingTsExtensions.ts"
          },
          {
            "path": "tests/cases/conformance/moduleResolution/allowImportingTypesDtsExtension.ts"
          },
          {
            "path": "tests/cases/conformance/moduleResolution/extensionLoadingPriority.ts"
          },
          {
            "path": "tests/cases/conformance/moduleResolution/node10IsNode_node10.ts"
          },
          {
            "path": "tests/cases/conformance/moduleResolution/resolutionModeImportType1.ts"
          },
          {
            "path": "tests/cases/conformance/moduleResolution/resolutionModeTypeOnlyImport1.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportCompletionExportEqualsWithDefault1.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportModuleNone1.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportModuleNone2.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportSortCaseSensitivity2.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingFunctionDeclaration16.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixCannotFindModule.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixCannotFindModule_all.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixCannotFindModule_suggestion.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixCannotFindModule_suggestion_falsePositive.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixImportNonExportedMember5.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixInferFromUsageJSXElement.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixMissingTypeAnnotationOnExports47.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixMissingTypeAnnotationOnExports48.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixMissingTypeAnnotationOnExports49-private-name.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixRequireInTs1.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixRequireInTs4.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixRequireInTs_all.ts"
          },
          {
            "path": "tests/cases/fourslash/codefixCrashExportGlobal.ts"
          },
          {
            "path": "tests/cases/fourslash/completionEntryForClassMembers_StaticWhenBaseTypeIsNotResolved.ts"
          },
          {
            "path": "tests/cases/fourslash/completionForObjectProperty.ts"
          },
          {
            "path": "tests/cases/fourslash/completionForStringLiteralNonrelativeImport16.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImportFromJSXTag.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImportModuleAugmentationWithJS.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImportYieldExpression.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_46332.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_augmentation.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_compilerOptionsModule.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_defaultAndNamedConflict.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_defaultFalsePositive.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_default_addToNamedImports.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_default_addToNamespaceImport.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_default_alreadyExistedWithRename.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_default_symbolName.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_details_withMisspelledName.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_exportEquals.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_exportEquals_anonymous.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_filteredByInvalidPackageJson_direct.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_filteredByPackageJson_@typesImplicit.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_filteredByPackageJson_@typesOnly.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_filteredByPackageJson_direct.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_filteredByPackageJson_nested.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_filteredByPackageJson_peerDependencies.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_filteredByPackageJson_reexport.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_filteredByPackageJson_reexport2.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_filteredByPackageJson_reexport3.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_filteredByPackageJson_reexport4.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_importType.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_jsxOpeningTagImportDefault.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_keywords.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_named_addToNamedImports.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_named_didNotExistBefore.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_named_namespaceImportExists.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_noSemicolons.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_notFromIndex.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_ofAlias_preferShortPath.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_previousTokenIsSemicolon.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_reExportDefault.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_reExport_wrongName.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_require.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_require_addNew.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_require_addToExisting.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_tsx.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_typeOnly.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_umdDefaultNoCrash1.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_umdDefaultNoCrash2.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_umdModules2_moduleExports.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_weirdDefaultSynthesis.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsPaths.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsPathsJsonModule.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsPathsJsonModuleWithoutResolveJsonModule.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsPathsRelativeJsonModule.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsPaths_importType.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsPaths_pathMapping_relativePath.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsPaths_pathMapping_topLevel.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsRecommended_import.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsRecommended_namespace.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsWithDeprecatedTag10.ts"
          },
          {
            "path": "tests/cases/fourslash/exportEqualNamespaceClassESModuleInterop.ts"
          },
          {
            "path": "tests/cases/fourslash/findReferencesBindingPatternInJsdocNoCrash1.ts"
          },
          {
            "path": "tests/cases/fourslash/findReferencesBindingPatternInJsdocNoCrash2.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFixDefaultExport5.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFixDefaultExport6.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFixExportAsDefault.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFixUMDGlobalReact0.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFixUMDGlobalReact1.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFix_all.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFix_commonjs_allowSynthetic.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFix_endingPreference.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFix_exportEquals.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFix_jsExtension.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFix_jsx2.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFix_jsx3.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFix_jsx4.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFix_jsx5.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFix_jsx6.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFix_jsx7.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFix_require_UMD.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFix_symlink.ts"
          },
          {
            "path": "tests/cases/fourslash/importStatementCompletions_esModuleInterop1.ts"
          },
          {
            "path": "tests/cases/fourslash/importStatementCompletions_js2.ts"
          },
          {
            "path": "tests/cases/fourslash/importTypeCompletions5.ts"
          },
          {
            "path": "tests/cases/fourslash/javascriptModules22.ts"
          },
          {
            "path": "tests/cases/fourslash/organizeImportsReactJsx.ts"
          },
          {
            "path": "tests/cases/fourslash/organizeImportsReactJsxDev.ts"
          },
          {
            "path": "tests/cases/fourslash/organizeImportsType1.ts"
          },
          {
            "path": "tests/cases/fourslash/organizeImportsType2.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsTypesVersionsWildcard2.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsTypesVersionsWildcard3.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsTypesVersionsWildcard4.ts"
          },
          {
            "path": "tests/cases/fourslash/refactorConvertImport_namespaceToNamed_namespaceUsed.ts"
          },
          {
            "path": "tests/cases/fourslash/server/autoImportProvider6.ts"
          },
          {
            "path": "tests/cases/fourslash/server/autoImportProvider_exportMap2.ts"
          },
          {
            "path": "tests/cases/fourslash/server/completionsImport_defaultAndNamedConflict_server.ts"
          },
          {
            "path": "tests/cases/fourslash/server/completionsImport_jsModuleExportsAssignment.ts"
          },
          {
            "path": "tests/cases/fourslash/server/completionsImport_mergedReExport.ts"
          },
          {
            "path": "tests/cases/fourslash/server/goToSource10_mapFromAtTypes3.ts"
          },
          {
            "path": "tests/cases/fourslash/server/goToSource11_propertyOfAlias.ts"
          },
          {
            "path": "tests/cases/fourslash/server/goToSource12_callbackParam.ts"
          },
          {
            "path": "tests/cases/fourslash/server/goToSource16_callbackParamDifferentFile.ts"
          },
          {
            "path": "tests/cases/fourslash/server/goToSource17_AddsFileToProject.ts"
          },
          {
            "path": "tests/cases/fourslash/server/goToSource18_reusedFromDifferentFolder.ts"
          },
          {
            "path": "tests/cases/fourslash/server/goToSource2_nodeModulesWithTypes.ts"
          },
          {
            "path": "tests/cases/fourslash/server/goToSource3_nodeModulesAtTypes.ts"
          },
          {
            "path": "tests/cases/fourslash/server/goToSource7_conditionallyMinified.ts"
          },
          {
            "path": "tests/cases/fourslash/server/goToSource8_mapFromAtTypes.ts"
          },
          {
            "path": "tests/cases/fourslash/server/goToSource9_mapFromAtTypes2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6nRxJU",
      "title": "Bump the github-actions group across 1 directory with 4 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/62411",
      "mergedAt": "2025-09-08T16:23:59Z",
      "updatedAt": "2025-09-08T16:24:00Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0f415c5f80419d4f408360c3bb40185055149f7f"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/accept-baselines-fix-lints.yaml"
          },
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/copilot-setup-steps.yml"
          },
          {
            "path": ".github/workflows/create-cherry-pick-pr.yml"
          },
          {
            "path": ".github/workflows/insiders.yaml"
          },
          {
            "path": ".github/workflows/lkg.yml"
          },
          {
            "path": ".github/workflows/new-release-branch.yaml"
          },
          {
            "path": ".github/workflows/nightly.yaml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          },
          {
            "path": ".github/workflows/set-version.yaml"
          },
          {
            "path": ".github/workflows/sync-branch.yaml"
          },
          {
            "path": ".github/workflows/twoslash-repros.yaml"
          },
          {
            "path": ".github/workflows/update-package-lock.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6mDA6N",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250829194312467 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/62357",
      "mergedAt": "2025-09-08T19:49:11Z",
      "updatedAt": "2025-09-08T19:49:13Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0f4b3387bda8500889d398d65dddcfeb352f3774"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6m9EZj",
      "title": "Replace all testcase instances of 'module' with 'namespace'",
      "url": "https://github.com/microsoft/TypeScript/pull/62399",
      "mergedAt": "2025-09-08T23:07:46Z",
      "updatedAt": "2025-09-08T23:07:49Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3f5c77f1f9da46dbfad7614ca6497fddaf03ed3e"
      },
      "author": {
        "login": "RyanCavanaugh"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sheetalkamat"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "tests/baselines/reference/AmbientModuleAndAmbientFunctionWithTheSameNameAndCommonRoot.js"
          },
          {
            "path": "tests/baselines/reference/AmbientModuleAndAmbientFunctionWithTheSameNameAndCommonRoot.symbols"
          },
          {
            "path": "tests/baselines/reference/AmbientModuleAndAmbientFunctionWithTheSameNameAndCommonRoot.types"
          },
          {
            "path": "tests/baselines/reference/AmbientModuleAndAmbientWithSameNameAndCommonRoot.js"
          },
          {
            "path": "tests/baselines/reference/AmbientModuleAndAmbientWithSameNameAndCommonRoot.symbols"
          },
          {
            "path": "tests/baselines/reference/AmbientModuleAndAmbientWithSameNameAndCommonRoot.types"
          },
          {
            "path": "tests/baselines/reference/AmbientModuleAndNonAmbientClassWithSameNameAndCommonRoot.js"
          },
          {
            "path": "tests/baselines/reference/AmbientModuleAndNonAmbientClassWithSameNameAndCommonRoot.symbols"
          },
          {
            "path": "tests/baselines/reference/AmbientModuleAndNonAmbientClassWithSameNameAndCommonRoot.types"
          },
          {
            "path": "tests/baselines/reference/AmbientModuleAndNonAmbientFunctionWithTheSameNameAndCommonRoot.js"
          },
          {
            "path": "tests/baselines/reference/AmbientModuleAndNonAmbientFunctionWithTheSameNameAndCommonRoot.symbols"
          },
          {
            "path": "tests/baselines/reference/AmbientModuleAndNonAmbientFunctionWithTheSameNameAndCommonRoot.types"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithModuleMemberThatUsesClassTypeParameter.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithModuleMemberThatUsesClassTypeParameter.js"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithModuleMemberThatUsesClassTypeParameter.symbols"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithModuleMemberThatUsesClassTypeParameter.types"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithModulesExportedGenericFunctionAndGenericClassStaticFunctionOfTheSameName.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithModulesExportedGenericFunctionAndGenericClassStaticFunctionOfTheSameName.js"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithModulesExportedGenericFunctionAndGenericClassStaticFunctionOfTheSameName.symbols"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithModulesExportedGenericFunctionAndGenericClassStaticFunctionOfTheSameName.types"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithModulesExportedGenericFunctionAndNonGenericClassStaticFunctionOfTheSameName.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithModulesExportedGenericFunctionAndNonGenericClassStaticFunctionOfTheSameName.js"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithModulesExportedGenericFunctionAndNonGenericClassStaticFunctionOfTheSameName.symbols"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithModulesExportedGenericFunctionAndNonGenericClassStaticFunctionOfTheSameName.types"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithModulesExportedStaticFunctionUsingClassPrivateStatics.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithModulesExportedStaticFunctionUsingClassPrivateStatics.js"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithModulesExportedStaticFunctionUsingClassPrivateStatics.symbols"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithModulesExportedStaticFunctionUsingClassPrivateStatics.types"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithStaticFunctionAndExportedFunctionThatShareAName.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithStaticFunctionAndExportedFunctionThatShareAName.js"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithStaticFunctionAndExportedFunctionThatShareAName.symbols"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithStaticFunctionAndExportedFunctionThatShareAName.types"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithStaticFunctionAndNonExportedFunctionThatShareAName.js"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithStaticFunctionAndNonExportedFunctionThatShareAName.symbols"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithStaticFunctionAndNonExportedFunctionThatShareAName.types"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithStaticVariableAndExportedVarThatShareAName.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithStaticVariableAndExportedVarThatShareAName.js"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithStaticVariableAndExportedVarThatShareAName.symbols"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithStaticVariableAndExportedVarThatShareAName.types"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithStaticVariableAndNonExportedVarThatShareAName.js"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithStaticVariableAndNonExportedVarThatShareAName.symbols"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleThatMergeWithStaticVariableAndNonExportedVarThatShareAName.types"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleWithSameNameAndCommonRoot.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleWithSameNameAndCommonRoot.js"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleWithSameNameAndCommonRoot.symbols"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleWithSameNameAndCommonRoot.types"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleWithSameNameAndCommonRootES6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleWithSameNameAndCommonRootES6.js"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleWithSameNameAndCommonRootES6.symbols"
          },
          {
            "path": "tests/baselines/reference/ClassAndModuleWithSameNameAndCommonRootES6.types"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty2.js"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty2.symbols"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty2.types"
          },
          {
            "path": "tests/baselines/reference/EnumAndModuleWithSameNameAndCommonRoot.js"
          },
          {
            "path": "tests/baselines/reference/EnumAndModuleWithSameNameAndCommonRoot.symbols"
          },
          {
            "path": "tests/baselines/reference/EnumAndModuleWithSameNameAndCommonRoot.types"
          },
          {
            "path": "tests/baselines/reference/ExportClassWhichExtendsInterfaceWithInaccessibleType.js"
          },
          {
            "path": "tests/baselines/reference/ExportClassWhichExtendsInterfaceWithInaccessibleType.symbols"
          },
          {
            "path": "tests/baselines/reference/ExportClassWhichExtendsInterfaceWithInaccessibleType.types"
          },
          {
            "path": "tests/baselines/reference/ExportClassWithAccessibleTypesInTypeParameterConstraintsClassHeritageListMemberTypeAnnotations.js"
          },
          {
            "path": "tests/baselines/reference/ExportClassWithAccessibleTypesInTypeParameterConstraintsClassHeritageListMemberTypeAnnotations.symbols"
          },
          {
            "path": "tests/baselines/reference/ExportClassWithAccessibleTypesInTypeParameterConstraintsClassHeritageListMemberTypeAnnotations.types"
          },
          {
            "path": "tests/baselines/reference/ExportClassWithInaccessibleTypeInIndexerTypeAnnotations.js"
          },
          {
            "path": "tests/baselines/reference/ExportClassWithInaccessibleTypeInIndexerTypeAnnotations.symbols"
          },
          {
            "path": "tests/baselines/reference/ExportClassWithInaccessibleTypeInIndexerTypeAnnotations.types"
          },
          {
            "path": "tests/baselines/reference/ExportClassWithInaccessibleTypeInTypeParameterConstraint.js"
          },
          {
            "path": "tests/baselines/reference/ExportClassWithInaccessibleTypeInTypeParameterConstraint.symbols"
          },
          {
            "path": "tests/baselines/reference/ExportClassWithInaccessibleTypeInTypeParameterConstraint.types"
          },
          {
            "path": "tests/baselines/reference/ExportFunctionWithAccessibleTypesInParameterAndReturnTypeAnnotation.js"
          },
          {
            "path": "tests/baselines/reference/ExportFunctionWithAccessibleTypesInParameterAndReturnTypeAnnotation.symbols"
          },
          {
            "path": "tests/baselines/reference/ExportFunctionWithAccessibleTypesInParameterAndReturnTypeAnnotation.types"
          },
          {
            "path": "tests/baselines/reference/ExportFunctionWithInaccessibleTypesInParameterTypeAnnotation.js"
          },
          {
            "path": "tests/baselines/reference/ExportFunctionWithInaccessibleTypesInParameterTypeAnnotation.symbols"
          },
          {
            "path": "tests/baselines/reference/ExportFunctionWithInaccessibleTypesInParameterTypeAnnotation.types"
          },
          {
            "path": "tests/baselines/reference/ExportFunctionWithInaccessibleTypesInReturnTypeAnnotation.js"
          },
          {
            "path": "tests/baselines/reference/ExportFunctionWithInaccessibleTypesInReturnTypeAnnotation.symbols"
          },
          {
            "path": "tests/baselines/reference/ExportFunctionWithInaccessibleTypesInReturnTypeAnnotation.types"
          },
          {
            "path": "tests/baselines/reference/ExportInterfaceWithAccessibleTypesInTypeParameterConstraintsClassHeritageListMemberTypeAnnotations.js"
          },
          {
            "path": "tests/baselines/reference/ExportInterfaceWithAccessibleTypesInTypeParameterConstraintsClassHeritageListMemberTypeAnnotations.symbols"
          },
          {
            "path": "tests/baselines/reference/ExportInterfaceWithAccessibleTypesInTypeParameterConstraintsClassHeritageListMemberTypeAnnotations.types"
          },
          {
            "path": "tests/baselines/reference/ExportInterfaceWithInaccessibleTypeInIndexerTypeAnnotations.js"
          },
          {
            "path": "tests/baselines/reference/ExportInterfaceWithInaccessibleTypeInIndexerTypeAnnotations.symbols"
          },
          {
            "path": "tests/baselines/reference/ExportInterfaceWithInaccessibleTypeInIndexerTypeAnnotations.types"
          },
          {
            "path": "tests/baselines/reference/ExportInterfaceWithInaccessibleTypeInTypeParameterConstraint.js"
          },
          {
            "path": "tests/baselines/reference/ExportInterfaceWithInaccessibleTypeInTypeParameterConstraint.symbols"
          },
          {
            "path": "tests/baselines/reference/ExportInterfaceWithInaccessibleTypeInTypeParameterConstraint.types"
          },
          {
            "path": "tests/baselines/reference/ExportModuleWithAccessibleTypesOnItsExportedMembers.js"
          },
          {
            "path": "tests/baselines/reference/ExportModuleWithAccessibleTypesOnItsExportedMembers.symbols"
          },
          {
            "path": "tests/baselines/reference/ExportModuleWithAccessibleTypesOnItsExportedMembers.types"
          },
          {
            "path": "tests/baselines/reference/ExportObjectLiteralAndObjectTypeLiteralWithAccessibleTypesInMemberTypeAnnotations.js"
          },
          {
            "path": "tests/baselines/reference/ExportObjectLiteralAndObjectTypeLiteralWithAccessibleTypesInMemberTypeAnnotations.symbols"
          },
          {
            "path": "tests/baselines/reference/ExportObjectLiteralAndObjectTypeLiteralWithAccessibleTypesInMemberTypeAnnotations.types"
          },
          {
            "path": "tests/baselines/reference/ExportObjectLiteralAndObjectTypeLiteralWithAccessibleTypesInNestedMemberTypeAnnotations.js"
          },
          {
            "path": "tests/baselines/reference/ExportObjectLiteralAndObjectTypeLiteralWithAccessibleTypesInNestedMemberTypeAnnotations.symbols"
          },
          {
            "path": "tests/baselines/reference/ExportObjectLiteralAndObjectTypeLiteralWithAccessibleTypesInNestedMemberTypeAnnotations.types"
          },
          {
            "path": "tests/baselines/reference/ExportVariableOfGenericTypeWithInaccessibleTypeAsTypeArgument.js"
          },
          {
            "path": "tests/baselines/reference/ExportVariableOfGenericTypeWithInaccessibleTypeAsTypeArgument.symbols"
          },
          {
            "path": "tests/baselines/reference/ExportVariableOfGenericTypeWithInaccessibleTypeAsTypeArgument.types"
          },
          {
            "path": "tests/baselines/reference/ExportVariableWithAccessibleTypeInTypeAnnotation.js"
          },
          {
            "path": "tests/baselines/reference/ExportVariableWithAccessibleTypeInTypeAnnotation.symbols"
          },
          {
            "path": "tests/baselines/reference/ExportVariableWithAccessibleTypeInTypeAnnotation.types"
          },
          {
            "path": "tests/baselines/reference/ExportVariableWithInaccessibleTypeInTypeAnnotation.js"
          },
          {
            "path": "tests/baselines/reference/ExportVariableWithInaccessibleTypeInTypeAnnotation.symbols"
          },
          {
            "path": "tests/baselines/reference/ExportVariableWithInaccessibleTypeInTypeAnnotation.types"
          },
          {
            "path": "tests/baselines/reference/FunctionAndModuleWithSameNameAndCommonRoot.errors.txt"
          },
          {
            "path": "tests/baselines/reference/FunctionAndModuleWithSameNameAndCommonRoot.js"
          },
          {
            "path": "tests/baselines/reference/FunctionAndModuleWithSameNameAndCommonRoot.symbols"
          },
          {
            "path": "tests/baselines/reference/FunctionAndModuleWithSameNameAndCommonRoot.types"
          },
          {
            "path": "tests/baselines/reference/FunctionAndModuleWithSameNameAndDifferentCommonRoot.js"
          },
          {
            "path": "tests/baselines/reference/FunctionAndModuleWithSameNameAndDifferentCommonRoot.symbols"
          },
          {
            "path": "tests/baselines/reference/FunctionAndModuleWithSameNameAndDifferentCommonRoot.types"
          },
          {
            "path": "tests/baselines/reference/FunctionDeclaration7.errors.txt"
          },
          {
            "path": "tests/baselines/reference/FunctionDeclaration7.js"
          },
          {
            "path": "tests/baselines/reference/FunctionDeclaration7.symbols"
          },
          {
            "path": "tests/baselines/reference/FunctionDeclaration7.types"
          },
          {
            "path": "tests/baselines/reference/InvalidNonInstantiatedModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/InvalidNonInstantiatedModule.js"
          },
          {
            "path": "tests/baselines/reference/InvalidNonInstantiatedModule.symbols"
          },
          {
            "path": "tests/baselines/reference/InvalidNonInstantiatedModule.types"
          },
          {
            "path": "tests/baselines/reference/ModuleAndClassWithSameNameAndCommonRoot.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ModuleAndClassWithSameNameAndCommonRoot.js"
          },
          {
            "path": "tests/baselines/reference/ModuleAndClassWithSameNameAndCommonRoot.symbols"
          },
          {
            "path": "tests/baselines/reference/ModuleAndClassWithSameNameAndCommonRoot.types"
          },
          {
            "path": "tests/baselines/reference/ModuleAndEnumWithSameNameAndCommonRoot.js"
          },
          {
            "path": "tests/baselines/reference/ModuleAndEnumWithSameNameAndCommonRoot.symbols"
          },
          {
            "path": "tests/baselines/reference/ModuleAndEnumWithSameNameAndCommonRoot.types"
          },
          {
            "path": "tests/baselines/reference/ModuleAndFunctionWithSameNameAndCommonRoot.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ModuleAndFunctionWithSameNameAndCommonRoot.js"
          },
          {
            "path": "tests/baselines/reference/ModuleAndFunctionWithSameNameAndCommonRoot.symbols"
          },
          {
            "path": "tests/baselines/reference/ModuleAndFunctionWithSameNameAndCommonRoot.types"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedClasses.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedClasses.js"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedClasses.symbols"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedClasses.types"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedEnums.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedEnums.js"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedEnums.symbols"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedEnums.types"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedFunctions.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedFunctions.js"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedFunctions.symbols"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedFunctions.types"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedImportAlias.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedImportAlias.js"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedImportAlias.symbols"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedImportAlias.types"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedVariables.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedVariables.js"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedVariables.symbols"
          },
          {
            "path": "tests/baselines/reference/ModuleWithExportedAndNonExportedVariables.types"
          },
          {
            "path": "tests/baselines/reference/NonInitializedExportInInternalModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/NonInitializedExportInInternalModule.js"
          },
          {
            "path": "tests/baselines/reference/NonInitializedExportInInternalModule.symbols"
          },
          {
            "path": "tests/baselines/reference/NonInitializedExportInInternalModule.types"
          },
          {
            "path": "tests/baselines/reference/Protected2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/Protected2.js"
          },
          {
            "path": "tests/baselines/reference/Protected2.symbols"
          },
          {
            "path": "tests/baselines/reference/Protected2.types"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedAndNonExportedClassesOfTheSameName.js"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedAndNonExportedClassesOfTheSameName.symbols"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedAndNonExportedClassesOfTheSameName.types"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedAndNonExportedInterfacesOfTheSameName.js"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedAndNonExportedInterfacesOfTheSameName.symbols"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedAndNonExportedInterfacesOfTheSameName.types"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedAndNonExportedLocalVarsOfTheSameName.js"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedAndNonExportedLocalVarsOfTheSameName.symbols"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedAndNonExportedLocalVarsOfTheSameName.types"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedClassesOfTheSameName.errors.txt"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedClassesOfTheSameName.js"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedClassesOfTheSameName.symbols"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedClassesOfTheSameName.types"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedInterfacesOfTheSameName.js"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedInterfacesOfTheSameName.symbols"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedInterfacesOfTheSameName.types"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedLocalVarsOfTheSameName.errors.txt"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedLocalVarsOfTheSameName.js"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedLocalVarsOfTheSameName.symbols"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedLocalVarsOfTheSameName.types"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedModulesOfTheSameName.js"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedModulesOfTheSameName.symbols"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesThatMergeEachWithExportedModulesOfTheSameName.types"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesWithTheSameNameAndDifferentCommonRoot.js"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesWithTheSameNameAndDifferentCommonRoot.symbols"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesWithTheSameNameAndDifferentCommonRoot.types"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesWithTheSameNameAndSameCommonRoot.js"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesWithTheSameNameAndSameCommonRoot.symbols"
          },
          {
            "path": "tests/baselines/reference/TwoInternalModulesWithTheSameNameAndSameCommonRoot.types"
          },
          {
            "path": "tests/baselines/reference/acceptableAlias1.js"
          },
          {
            "path": "tests/baselines/reference/acceptableAlias1.symbols"
          },
          {
            "path": "tests/baselines/reference/acceptableAlias1.types"
          },
          {
            "path": "tests/baselines/reference/accessorsInAmbientContext.errors.txt"
          },
          {
            "path": "tests/baselines/reference/accessorsInAmbientContext.js"
          },
          {
            "path": "tests/baselines/reference/accessorsInAmbientContext.symbols"
          },
          {
            "path": "tests/baselines/reference/accessorsInAmbientContext.types"
          },
          {
            "path": "tests/baselines/reference/additionOperatorWithAnyAndEveryType.js"
          },
          {
            "path": "tests/baselines/reference/additionOperatorWithAnyAndEveryType.symbols"
          },
          {
            "path": "tests/baselines/reference/additionOperatorWithAnyAndEveryType.types"
          },
          {
            "path": "tests/baselines/reference/additionOperatorWithInvalidOperands.errors.txt"
          },
          {
            "path": "tests/baselines/reference/additionOperatorWithInvalidOperands.js"
          },
          {
            "path": "tests/baselines/reference/additionOperatorWithInvalidOperands.symbols"
          },
          {
            "path": "tests/baselines/reference/additionOperatorWithInvalidOperands.types"
          },
          {
            "path": "tests/baselines/reference/aliasBug.errors.txt"
          },
          {
            "path": "tests/baselines/reference/aliasBug.js"
          },
          {
            "path": "tests/baselines/reference/aliasBug.symbols"
          },
          {
            "path": "tests/baselines/reference/aliasBug.types"
          },
          {
            "path": "tests/baselines/reference/aliasErrors.errors.txt"
          },
          {
            "path": "tests/baselines/reference/aliasErrors.js"
          },
          {
            "path": "tests/baselines/reference/aliasErrors.symbols"
          },
          {
            "path": "tests/baselines/reference/aliasErrors.types"
          },
          {
            "path": "tests/baselines/reference/aliasInaccessibleModule.js"
          },
          {
            "path": "tests/baselines/reference/aliasInaccessibleModule.symbols"
          },
          {
            "path": "tests/baselines/reference/aliasInaccessibleModule.types"
          },
          {
            "path": "tests/baselines/reference/aliasInaccessibleModule2.js"
          },
          {
            "path": "tests/baselines/reference/aliasInaccessibleModule2.symbols"
          },
          {
            "path": "tests/baselines/reference/aliasInaccessibleModule2.types"
          },
          {
            "path": "tests/baselines/reference/aliasOnMergedModuleInterface.errors.txt"
          },
          {
            "path": "tests/baselines/reference/aliasOnMergedModuleInterface.js"
          },
          {
            "path": "tests/baselines/reference/aliasOnMergedModuleInterface.symbols"
          },
          {
            "path": "tests/baselines/reference/aliasOnMergedModuleInterface.types"
          },
          {
            "path": "tests/baselines/reference/aliasesInSystemModule1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/aliasesInSystemModule1.js"
          },
          {
            "path": "tests/baselines/reference/aliasesInSystemModule1.symbols"
          },
          {
            "path": "tests/baselines/reference/aliasesInSystemModule1.types"
          },
          {
            "path": "tests/baselines/reference/aliasesInSystemModule2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/aliasesInSystemModule2.js"
          },
          {
            "path": "tests/baselines/reference/aliasesInSystemModule2.symbols"
          },
          {
            "path": "tests/baselines/reference/aliasesInSystemModule2.types"
          },
          {
            "path": "tests/baselines/reference/alwaysStrictModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/alwaysStrictModule.js"
          },
          {
            "path": "tests/baselines/reference/alwaysStrictModule.symbols"
          },
          {
            "path": "tests/baselines/reference/alwaysStrictModule.types"
          },
          {
            "path": "tests/baselines/reference/alwaysStrictModule2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/alwaysStrictModule2.js"
          },
          {
            "path": "tests/baselines/reference/alwaysStrictModule2.symbols"
          },
          {
            "path": "tests/baselines/reference/alwaysStrictModule2.types"
          },
          {
            "path": "tests/baselines/reference/alwaysStrictNoImplicitUseStrict.errors.txt"
          },
          {
            "path": "tests/baselines/reference/alwaysStrictNoImplicitUseStrict.js"
          },
          {
            "path": "tests/baselines/reference/alwaysStrictNoImplicitUseStrict.symbols"
          },
          {
            "path": "tests/baselines/reference/alwaysStrictNoImplicitUseStrict.types"
          },
          {
            "path": "tests/baselines/reference/ambientDeclarations.js"
          },
          {
            "path": "tests/baselines/reference/ambientDeclarations.symbols"
          },
          {
            "path": "tests/baselines/reference/ambientDeclarations.types"
          },
          {
            "path": "tests/baselines/reference/ambientEnumElementInitializer6.js"
          },
          {
            "path": "tests/baselines/reference/ambientEnumElementInitializer6.symbols"
          },
          {
            "path": "tests/baselines/reference/ambientEnumElementInitializer6.types"
          },
          {
            "path": "tests/baselines/reference/ambientErrors.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ambientErrors.js"
          },
          {
            "path": "tests/baselines/reference/ambientErrors.symbols"
          },
          {
            "path": "tests/baselines/reference/ambientErrors.types"
          },
          {
            "path": "tests/baselines/reference/ambientExternalModuleInsideNonAmbient.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ambientExternalModuleInsideNonAmbient.js"
          },
          {
            "path": "tests/baselines/reference/ambientExternalModuleInsideNonAmbient.symbols"
          },
          {
            "path": "tests/baselines/reference/ambientExternalModuleInsideNonAmbient.types"
          },
          {
            "path": "tests/baselines/reference/ambientExternalModuleWithInternalImportDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/ambientExternalModuleWithInternalImportDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/ambientExternalModuleWithInternalImportDeclaration.types"
          },
          {
            "path": "tests/baselines/reference/ambientExternalModuleWithoutInternalImportDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/ambientExternalModuleWithoutInternalImportDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/ambientExternalModuleWithoutInternalImportDeclaration.types"
          },
          {
            "path": "tests/baselines/reference/ambientFundule.js"
          },
          {
            "path": "tests/baselines/reference/ambientFundule.symbols"
          },
          {
            "path": "tests/baselines/reference/ambientFundule.types"
          },
          {
            "path": "tests/baselines/reference/ambientInsideNonAmbient.js"
          },
          {
            "path": "tests/baselines/reference/ambientInsideNonAmbient.symbols"
          },
          {
            "path": "tests/baselines/reference/ambientInsideNonAmbient.types"
          },
          {
            "path": "tests/baselines/reference/ambientInsideNonAmbientExternalModule.js"
          },
          {
            "path": "tests/baselines/reference/ambientInsideNonAmbientExternalModule.symbols"
          },
          {
            "path": "tests/baselines/reference/ambientInsideNonAmbientExternalModule.types"
          },
          {
            "path": "tests/baselines/reference/ambientModuleDeclarationWithReservedIdentifierInDottedPath.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ambientModuleDeclarationWithReservedIdentifierInDottedPath.js"
          },
          {
            "path": "tests/baselines/reference/ambientModuleDeclarationWithReservedIdentifierInDottedPath.symbols"
          },
          {
            "path": "tests/baselines/reference/ambientModuleDeclarationWithReservedIdentifierInDottedPath.types"
          },
          {
            "path": "tests/baselines/reference/ambientModuleExports.js"
          },
          {
            "path": "tests/baselines/reference/ambientModuleExports.symbols"
          },
          {
            "path": "tests/baselines/reference/ambientModuleExports.types"
          },
          {
            "path": "tests/baselines/reference/ambientModuleWithClassDeclarationWithExtends.js"
          },
          {
            "path": "tests/baselines/reference/ambientModuleWithClassDeclarationWithExtends.symbols"
          },
          {
            "path": "tests/baselines/reference/ambientModuleWithClassDeclarationWithExtends.types"
          },
          {
            "path": "tests/baselines/reference/ambientModuleWithTemplateLiterals.js"
          },
          {
            "path": "tests/baselines/reference/ambientModuleWithTemplateLiterals.symbols"
          },
          {
            "path": "tests/baselines/reference/ambientModuleWithTemplateLiterals.types"
          },
          {
            "path": "tests/baselines/reference/ambientModules.js"
          },
          {
            "path": "tests/baselines/reference/ambientModules.symbols"
          },
          {
            "path": "tests/baselines/reference/ambientModules.types"
          },
          {
            "path": "tests/baselines/reference/ambientStatement1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ambientStatement1.js"
          },
          {
            "path": "tests/baselines/reference/ambientStatement1.symbols"
          },
          {
            "path": "tests/baselines/reference/ambientStatement1.types"
          },
          {
            "path": "tests/baselines/reference/ambientWithStatements.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ambientWithStatements.js"
          },
          {
            "path": "tests/baselines/reference/ambientWithStatements.symbols"
          },
          {
            "path": "tests/baselines/reference/ambientWithStatements.types"
          },
          {
            "path": "tests/baselines/reference/amdImportNotAsPrimaryExpression.js"
          },
          {
            "path": "tests/baselines/reference/amdImportNotAsPrimaryExpression.symbols"
          },
          {
            "path": "tests/baselines/reference/amdImportNotAsPrimaryExpression.types"
          },
          {
            "path": "tests/baselines/reference/anonterface.js"
          },
          {
            "path": "tests/baselines/reference/anonterface.symbols"
          },
          {
            "path": "tests/baselines/reference/anonterface.types"
          },
          {
            "path": "tests/baselines/reference/anyAssignabilityInInheritance.js"
          },
          {
            "path": "tests/baselines/reference/anyAssignabilityInInheritance.symbols"
          },
          {
            "path": "tests/baselines/reference/anyAssignabilityInInheritance.types"
          },
          {
            "path": "tests/baselines/reference/anyAssignableToEveryType2.js"
          },
          {
            "path": "tests/baselines/reference/anyAssignableToEveryType2.symbols"
          },
          {
            "path": "tests/baselines/reference/anyAssignableToEveryType2.types"
          },
          {
            "path": "tests/baselines/reference/anyDeclare.errors.txt"
          },
          {
            "path": "tests/baselines/reference/anyDeclare.js"
          },
          {
            "path": "tests/baselines/reference/anyDeclare.symbols"
          },
          {
            "path": "tests/baselines/reference/anyDeclare.types"
          },
          {
            "path": "tests/baselines/reference/arrayAssignmentTest5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/arrayAssignmentTest5.js"
          },
          {
            "path": "tests/baselines/reference/arrayAssignmentTest5.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayAssignmentTest5.types"
          },
          {
            "path": "tests/baselines/reference/arrayAssignmentTest6.js"
          },
          {
            "path": "tests/baselines/reference/arrayAssignmentTest6.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayAssignmentTest6.types"
          },
          {
            "path": "tests/baselines/reference/arrayBestCommonTypes.js"
          },
          {
            "path": "tests/baselines/reference/arrayBestCommonTypes.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayBestCommonTypes.types"
          },
          {
            "path": "tests/baselines/reference/arraySigChecking.errors.txt"
          },
          {
            "path": "tests/baselines/reference/arraySigChecking.js"
          },
          {
            "path": "tests/baselines/reference/arraySigChecking.symbols"
          },
          {
            "path": "tests/baselines/reference/arraySigChecking.types"
          },
          {
            "path": "tests/baselines/reference/arrayTypeInSignatureOfInterfaceAndClass.js"
          },
          {
            "path": "tests/baselines/reference/arrayTypeInSignatureOfInterfaceAndClass.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayTypeInSignatureOfInterfaceAndClass.types"
          },
          {
            "path": "tests/baselines/reference/arrowFunctionContexts.errors.txt"
          },
          {
            "path": "tests/baselines/reference/arrowFunctionContexts.js"
          },
          {
            "path": "tests/baselines/reference/arrowFunctionContexts.symbols"
          },
          {
            "path": "tests/baselines/reference/arrowFunctionContexts.types"
          },
          {
            "path": "tests/baselines/reference/arrowFunctionInExpressionStatement2.js"
          },
          {
            "path": "tests/baselines/reference/arrowFunctionInExpressionStatement2.symbols"
          },
          {
            "path": "tests/baselines/reference/arrowFunctionInExpressionStatement2.types"
          },
          {
            "path": "tests/baselines/reference/arrowFunctionsMissingTokens.errors.txt"
          },
          {
            "path": "tests/baselines/reference/arrowFunctionsMissingTokens.js"
          },
          {
            "path": "tests/baselines/reference/arrowFunctionsMissingTokens.symbols"
          },
          {
            "path": "tests/baselines/reference/arrowFunctionsMissingTokens.types"
          },
          {
            "path": "tests/baselines/reference/asiPreventsParsingAsAmbientExternalModule02.js"
          },
          {
            "path": "tests/baselines/reference/asiPreventsParsingAsAmbientExternalModule02.symbols"
          },
          {
            "path": "tests/baselines/reference/asiPreventsParsingAsAmbientExternalModule02.types"
          },
          {
            "path": "tests/baselines/reference/asiPreventsParsingAsNamespace04.errors.txt"
          },
          {
            "path": "tests/baselines/reference/asiPreventsParsingAsNamespace04.js"
          },
          {
            "path": "tests/baselines/reference/asiPreventsParsingAsNamespace04.symbols"
          },
          {
            "path": "tests/baselines/reference/asiPreventsParsingAsNamespace04.types"
          },
          {
            "path": "tests/baselines/reference/assign1.js"
          },
          {
            "path": "tests/baselines/reference/assign1.symbols"
          },
          {
            "path": "tests/baselines/reference/assign1.types"
          },
          {
            "path": "tests/baselines/reference/assignAnyToEveryType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignAnyToEveryType.js"
          },
          {
            "path": "tests/baselines/reference/assignAnyToEveryType.symbols"
          },
          {
            "path": "tests/baselines/reference/assignAnyToEveryType.types"
          },
          {
            "path": "tests/baselines/reference/assignToExistingClass.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignToExistingClass.js"
          },
          {
            "path": "tests/baselines/reference/assignToExistingClass.symbols"
          },
          {
            "path": "tests/baselines/reference/assignToExistingClass.types"
          },
          {
            "path": "tests/baselines/reference/assignToFn.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignToFn.js"
          },
          {
            "path": "tests/baselines/reference/assignToFn.symbols"
          },
          {
            "path": "tests/baselines/reference/assignToFn.types"
          },
          {
            "path": "tests/baselines/reference/assignToModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignToModule.js"
          },
          {
            "path": "tests/baselines/reference/assignToModule.symbols"
          },
          {
            "path": "tests/baselines/reference/assignToModule.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithCallSignatures4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithCallSignatures4.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithCallSignatures4.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithCallSignatures4.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithConstructSignatures4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithConstructSignatures4.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithConstructSignatures4.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithConstructSignatures4.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithGenericCallSignaturesWithOptionalParameters.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithGenericCallSignaturesWithOptionalParameters.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithGenericCallSignaturesWithOptionalParameters.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithGenericCallSignaturesWithOptionalParameters.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithNumericIndexer.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithNumericIndexer.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithNumericIndexer.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithNumericIndexer.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithNumericIndexer2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithNumericIndexer2.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithNumericIndexer2.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithNumericIndexer2.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithNumericIndexer3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithNumericIndexer3.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithNumericIndexer3.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithNumericIndexer3.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembers.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembers.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembers.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembers4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembers4.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembers4.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembers4.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembersAccessibility.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembersAccessibility.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembersAccessibility.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembersAccessibility.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembersOptionality.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembersOptionality.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembersOptionality.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembersOptionality.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembersOptionality2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembersOptionality2.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembersOptionality2.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembersOptionality2.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembersStringNumericNames.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembersStringNumericNames.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembersStringNumericNames.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithObjectMembersStringNumericNames.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithStringIndexer.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithStringIndexer.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithStringIndexer.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithStringIndexer.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithStringIndexer2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithStringIndexer2.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithStringIndexer2.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithStringIndexer2.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithStringIndexer3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithStringIndexer3.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithStringIndexer3.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithStringIndexer3.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability1.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability1.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability1.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability10.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability10.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability10.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability11.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability11.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability11.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability11.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability12.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability12.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability12.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability12.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability13.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability13.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability13.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability13.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability14.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability14.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability14.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability14.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability15.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability15.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability15.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability15.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability16.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability16.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability16.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability16.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability17.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability17.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability17.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability17.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability18.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability18.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability18.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability18.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability19.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability19.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability19.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability19.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability2.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability2.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability2.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability20.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability20.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability20.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability20.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability21.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability21.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability21.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability21.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability22.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability22.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability22.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability22.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability23.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability23.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability23.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability23.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability24.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability24.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability24.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability24.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability25.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability25.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability25.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability25.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability26.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability26.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability26.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability26.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability27.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability27.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability27.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability27.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability28.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability28.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability28.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability28.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability29.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability29.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability29.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability29.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability3.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability3.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability3.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability30.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability30.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability30.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability30.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability31.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability31.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability31.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability31.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability32.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability32.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability32.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability32.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability33.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability33.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability33.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability33.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability34.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability34.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability34.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability34.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability35.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability35.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability35.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability35.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability36.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability36.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability36.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability37.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability37.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability37.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability37.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability38.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability38.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability38.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability38.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability39.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability39.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability39.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability39.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability4.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability4.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability4.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability40.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability40.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability40.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability40.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability41.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability41.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability41.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability41.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability42.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability42.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability42.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability42.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability43.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability43.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability43.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability43.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability5.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability5.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability5.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability6.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability6.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability6.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability7.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability7.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability7.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability8.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability8.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability8.types"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability9.js"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability9.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatability9.types"
          },
          {
            "path": "tests/baselines/reference/assignmentLHSIsValue.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentLHSIsValue.js"
          },
          {
            "path": "tests/baselines/reference/assignmentLHSIsValue.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentLHSIsValue.types"
          },
          {
            "path": "tests/baselines/reference/assignmentToFunction.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentToFunction.js"
          },
          {
            "path": "tests/baselines/reference/assignmentToFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentToFunction.types"
          },
          {
            "path": "tests/baselines/reference/assignmentToObjectAndFunction.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentToObjectAndFunction.js"
          },
          {
            "path": "tests/baselines/reference/assignmentToObjectAndFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentToObjectAndFunction.types"
          },
          {
            "path": "tests/baselines/reference/assignmentToParenthesizedIdentifiers.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentToParenthesizedIdentifiers.js"
          },
          {
            "path": "tests/baselines/reference/assignmentToParenthesizedIdentifiers.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentToParenthesizedIdentifiers.types"
          },
          {
            "path": "tests/baselines/reference/assignmentToReferenceTypes.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentToReferenceTypes.js"
          },
          {
            "path": "tests/baselines/reference/assignmentToReferenceTypes.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentToReferenceTypes.types"
          },
          {
            "path": "tests/baselines/reference/assignments.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignments.js"
          },
          {
            "path": "tests/baselines/reference/assignments.symbols"
          },
          {
            "path": "tests/baselines/reference/assignments.types"
          },
          {
            "path": "tests/baselines/reference/asyncAwaitIsolatedModules_es2017.errors.txt"
          },
          {
            "path": "tests/baselines/reference/asyncAwaitIsolatedModules_es2017.js"
          },
          {
            "path": "tests/baselines/reference/asyncAwaitIsolatedModules_es2017.symbols"
          },
          {
            "path": "tests/baselines/reference/asyncAwaitIsolatedModules_es2017.types"
          },
          {
            "path": "tests/baselines/reference/asyncAwaitIsolatedModules_es5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/asyncAwaitIsolatedModules_es5.js"
          },
          {
            "path": "tests/baselines/reference/asyncAwaitIsolatedModules_es5.symbols"
          },
          {
            "path": "tests/baselines/reference/asyncAwaitIsolatedModules_es5.types"
          },
          {
            "path": "tests/baselines/reference/asyncAwaitIsolatedModules_es6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/asyncAwaitIsolatedModules_es6.js"
          },
          {
            "path": "tests/baselines/reference/asyncAwaitIsolatedModules_es6.symbols"
          },
          {
            "path": "tests/baselines/reference/asyncAwaitIsolatedModules_es6.types"
          },
          {
            "path": "tests/baselines/reference/asyncAwait_es2017.js"
          },
          {
            "path": "tests/baselines/reference/asyncAwait_es2017.symbols"
          },
          {
            "path": "tests/baselines/reference/asyncAwait_es2017.types"
          },
          {
            "path": "tests/baselines/reference/asyncAwait_es5.js"
          },
          {
            "path": "tests/baselines/reference/asyncAwait_es5.symbols"
          },
          {
            "path": "tests/baselines/reference/asyncAwait_es5.types"
          },
          {
            "path": "tests/baselines/reference/asyncAwait_es6.js"
          },
          {
            "path": "tests/baselines/reference/asyncAwait_es6.symbols"
          },
          {
            "path": "tests/baselines/reference/asyncAwait_es6.types"
          },
          {
            "path": "tests/baselines/reference/asyncModule_es5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/asyncModule_es5.js"
          },
          {
            "path": "tests/baselines/reference/asyncModule_es5.symbols"
          },
          {
            "path": "tests/baselines/reference/asyncModule_es5.types"
          },
          {
            "path": "tests/baselines/reference/asyncModule_es6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/asyncModule_es6.js"
          },
          {
            "path": "tests/baselines/reference/asyncModule_es6.symbols"
          },
          {
            "path": "tests/baselines/reference/asyncModule_es6.types"
          },
          {
            "path": "tests/baselines/reference/augmentExportEquals5.js"
          },
          {
            "path": "tests/baselines/reference/augmentExportEquals5.symbols"
          },
          {
            "path": "tests/baselines/reference/augmentExportEquals5.types"
          },
          {
            "path": "tests/baselines/reference/augmentedClassWithPrototypePropertyOnModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/augmentedClassWithPrototypePropertyOnModule.js"
          },
          {
            "path": "tests/baselines/reference/augmentedClassWithPrototypePropertyOnModule.symbols"
          },
          {
            "path": "tests/baselines/reference/augmentedClassWithPrototypePropertyOnModule.types"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesClass3.js"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesClass3.symbols"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesClass3.types"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesEnum.errors.txt"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesEnum.js"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesEnum.symbols"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesEnum.types"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesEnum3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesEnum3.js"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesEnum3.symbols"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesEnum3.types"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesExternalModule1.js"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesExternalModule1.symbols"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesExternalModule1.types"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesFunction.errors.txt"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesFunction.js"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesFunction.types"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesModules.errors.txt"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesModules.js"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesModules.symbols"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesModules.types"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesModules2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesModules2.js"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesModules2.symbols"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesModules2.types"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesModules3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesModules3.js"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesModules3.symbols"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesModules3.types"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesModules3b.js"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesModules3b.symbols"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesModules3b.types"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesModules4.js"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesModules4.symbols"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesModules4.types"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesVar.errors.txt"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesVar.js"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesVar.symbols"
          },
          {
            "path": "tests/baselines/reference/augmentedTypesVar.types"
          },
          {
            "path": "tests/baselines/reference/bind1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/bind1.js"
          },
          {
            "path": "tests/baselines/reference/bind1.symbols"
          },
          {
            "path": "tests/baselines/reference/bind1.types"
          },
          {
            "path": "tests/baselines/reference/binopAssignmentShouldHaveType.js"
          },
          {
            "path": "tests/baselines/reference/binopAssignmentShouldHaveType.symbols"
          },
          {
            "path": "tests/baselines/reference/binopAssignmentShouldHaveType.types"
          },
          {
            "path": "tests/baselines/reference/bitwiseNotOperatorWithAnyOtherType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/bitwiseNotOperatorWithAnyOtherType.js"
          },
          {
            "path": "tests/baselines/reference/bitwiseNotOperatorWithAnyOtherType.symbols"
          },
          {
            "path": "tests/baselines/reference/bitwiseNotOperatorWithAnyOtherType.types"
          },
          {
            "path": "tests/baselines/reference/bitwiseNotOperatorWithBooleanType.js"
          },
          {
            "path": "tests/baselines/reference/bitwiseNotOperatorWithBooleanType.symbols"
          },
          {
            "path": "tests/baselines/reference/bitwiseNotOperatorWithBooleanType.types"
          },
          {
            "path": "tests/baselines/reference/bitwiseNotOperatorWithNumberType.js"
          },
          {
            "path": "tests/baselines/reference/bitwiseNotOperatorWithNumberType.symbols"
          },
          {
            "path": "tests/baselines/reference/bitwiseNotOperatorWithNumberType.types"
          },
          {
            "path": "tests/baselines/reference/bitwiseNotOperatorWithStringType.js"
          },
          {
            "path": "tests/baselines/reference/bitwiseNotOperatorWithStringType.symbols"
          },
          {
            "path": "tests/baselines/reference/bitwiseNotOperatorWithStringType.types"
          },
          {
            "path": "tests/baselines/reference/bluebirdStaticThis.errors.txt"
          },
          {
            "path": "tests/baselines/reference/bluebirdStaticThis.js"
          },
          {
            "path": "tests/baselines/reference/bluebirdStaticThis.symbols"
          },
          {
            "path": "tests/baselines/reference/bluebirdStaticThis.types"
          },
          {
            "path": "tests/baselines/reference/bpSpan_classes.baseline"
          },
          {
            "path": "tests/baselines/reference/bpSpan_const.baseline"
          },
          {
            "path": "tests/baselines/reference/bpSpan_functions.baseline"
          },
          {
            "path": "tests/baselines/reference/bpSpan_import.baseline"
          },
          {
            "path": "tests/baselines/reference/bpSpan_interface.baseline"
          },
          {
            "path": "tests/baselines/reference/bpSpan_let.baseline"
          },
          {
            "path": "tests/baselines/reference/bpSpan_module.baseline"
          },
          {
            "path": "tests/baselines/reference/bpSpan_moduleAmbient.baseline"
          },
          {
            "path": "tests/baselines/reference/bpSpan_moduleEmpty.baseline"
          },
          {
            "path": "tests/baselines/reference/bpSpan_typealias.baseline"
          },
          {
            "path": "tests/baselines/reference/bpSpan_variables.baseline"
          },
          {
            "path": "tests/baselines/reference/callSignatureAssignabilityInInheritance.errors.txt"
          },
          {
            "path": "tests/baselines/reference/callSignatureAssignabilityInInheritance.js"
          },
          {
            "path": "tests/baselines/reference/callSignatureAssignabilityInInheritance.symbols"
          },
          {
            "path": "tests/baselines/reference/callSignatureAssignabilityInInheritance.types"
          },
          {
            "path": "tests/baselines/reference/callSignatureAssignabilityInInheritance3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/callSignatureAssignabilityInInheritance3.js"
          },
          {
            "path": "tests/baselines/reference/callSignatureAssignabilityInInheritance3.symbols"
          },
          {
            "path": "tests/baselines/reference/callSignatureAssignabilityInInheritance3.types"
          },
          {
            "path": "tests/baselines/reference/callSignatureWithoutReturnTypeAnnotationInference.js"
          },
          {
            "path": "tests/baselines/reference/callSignatureWithoutReturnTypeAnnotationInference.symbols"
          },
          {
            "path": "tests/baselines/reference/callSignatureWithoutReturnTypeAnnotationInference.types"
          },
          {
            "path": "tests/baselines/reference/chainedImportAlias.js"
          },
          {
            "path": "tests/baselines/reference/chainedImportAlias.symbols"
          },
          {
            "path": "tests/baselines/reference/chainedImportAlias.types"
          },
          {
            "path": "tests/baselines/reference/checkForObjectTooStrict.errors.txt"
          },
          {
            "path": "tests/baselines/reference/checkForObjectTooStrict.js"
          },
          {
            "path": "tests/baselines/reference/checkForObjectTooStrict.symbols"
          },
          {
            "path": "tests/baselines/reference/checkForObjectTooStrict.types"
          },
          {
            "path": "tests/baselines/reference/checkJsxChildrenProperty10.js"
          },
          {
            "path": "tests/baselines/reference/checkJsxChildrenProperty10.symbols"
          },
          {
            "path": "tests/baselines/reference/checkJsxChildrenProperty10.types"
          },
          {
            "path": "tests/baselines/reference/checkJsxChildrenProperty11.js"
          },
          {
            "path": "tests/baselines/reference/checkJsxChildrenProperty11.symbols"
          },
          {
            "path": "tests/baselines/reference/checkJsxChildrenProperty11.types"
          },
          {
            "path": "tests/baselines/reference/circularImportAlias.errors.txt"
          },
          {
            "path": "tests/baselines/reference/circularImportAlias.js"
          },
          {
            "path": "tests/baselines/reference/circularImportAlias.symbols"
          },
          {
            "path": "tests/baselines/reference/circularImportAlias.types"
          },
          {
            "path": "tests/baselines/reference/circularReference.errors.txt"
          },
          {
            "path": "tests/baselines/reference/circularReference.js"
          },
          {
            "path": "tests/baselines/reference/circularReference.symbols"
          },
          {
            "path": "tests/baselines/reference/circularReference.types"
          },
          {
            "path": "tests/baselines/reference/classAbstractImportInstantiation.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classAbstractImportInstantiation.js"
          },
          {
            "path": "tests/baselines/reference/classAbstractImportInstantiation.symbols"
          },
          {
            "path": "tests/baselines/reference/classAbstractImportInstantiation.types"
          },
          {
            "path": "tests/baselines/reference/classAbstractInAModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classAbstractInAModule.js"
          },
          {
            "path": "tests/baselines/reference/classAbstractInAModule.symbols"
          },
          {
            "path": "tests/baselines/reference/classAbstractInAModule.types"
          },
          {
            "path": "tests/baselines/reference/classAbstractMergedDeclaration.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classAbstractMergedDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/classAbstractMergedDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/classAbstractMergedDeclaration.types"
          },
          {
            "path": "tests/baselines/reference/classAndInterfaceMerge.d.symbols"
          },
          {
            "path": "tests/baselines/reference/classAndInterfaceMerge.d.types"
          },
          {
            "path": "tests/baselines/reference/classAndInterfaceWithSameName.js"
          },
          {
            "path": "tests/baselines/reference/classAndInterfaceWithSameName.symbols"
          },
          {
            "path": "tests/baselines/reference/classAndInterfaceWithSameName.types"
          },
          {
            "path": "tests/baselines/reference/classAndVariableWithSameName.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classAndVariableWithSameName.js"
          },
          {
            "path": "tests/baselines/reference/classAndVariableWithSameName.symbols"
          },
          {
            "path": "tests/baselines/reference/classAndVariableWithSameName.types"
          },
          {
            "path": "tests/baselines/reference/classConstructorAccessibility.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classConstructorAccessibility.js"
          },
          {
            "path": "tests/baselines/reference/classConstructorAccessibility.symbols"
          },
          {
            "path": "tests/baselines/reference/classConstructorAccessibility.types"
          },
          {
            "path": "tests/baselines/reference/classDeclarationMergedInModuleWithContinuation.js"
          },
          {
            "path": "tests/baselines/reference/classDeclarationMergedInModuleWithContinuation.symbols"
          },
          {
            "path": "tests/baselines/reference/classDeclarationMergedInModuleWithContinuation.types"
          },
          {
            "path": "tests/baselines/reference/classDoesNotDependOnPrivateMember.js"
          },
          {
            "path": "tests/baselines/reference/classDoesNotDependOnPrivateMember.symbols"
          },
          {
            "path": "tests/baselines/reference/classDoesNotDependOnPrivateMember.types"
          },
          {
            "path": "tests/baselines/reference/classExpression.js"
          },
          {
            "path": "tests/baselines/reference/classExpression.symbols"
          },
          {
            "path": "tests/baselines/reference/classExpression.types"
          },
          {
            "path": "tests/baselines/reference/classExtendingQualifiedName.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classExtendingQualifiedName.js"
          },
          {
            "path": "tests/baselines/reference/classExtendingQualifiedName.symbols"
          },
          {
            "path": "tests/baselines/reference/classExtendingQualifiedName.types"
          },
          {
            "path": "tests/baselines/reference/classExtendingQualifiedName2.js"
          },
          {
            "path": "tests/baselines/reference/classExtendingQualifiedName2.symbols"
          },
          {
            "path": "tests/baselines/reference/classExtendingQualifiedName2.types"
          },
          {
            "path": "tests/baselines/reference/classExtendsClauseClassMergedWithModuleNotReferingConstructor.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classExtendsClauseClassMergedWithModuleNotReferingConstructor.js"
          },
          {
            "path": "tests/baselines/reference/classExtendsClauseClassMergedWithModuleNotReferingConstructor.symbols"
          },
          {
            "path": "tests/baselines/reference/classExtendsClauseClassMergedWithModuleNotReferingConstructor.types"
          },
          {
            "path": "tests/baselines/reference/classExtendsClauseClassNotReferringConstructor.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classExtendsClauseClassNotReferringConstructor.js"
          },
          {
            "path": "tests/baselines/reference/classExtendsClauseClassNotReferringConstructor.symbols"
          },
          {
            "path": "tests/baselines/reference/classExtendsClauseClassNotReferringConstructor.types"
          },
          {
            "path": "tests/baselines/reference/classExtendsEveryObjectType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classExtendsEveryObjectType.js"
          },
          {
            "path": "tests/baselines/reference/classExtendsEveryObjectType.symbols"
          },
          {
            "path": "tests/baselines/reference/classExtendsEveryObjectType.types"
          },
          {
            "path": "tests/baselines/reference/classExtendsInterfaceInModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classExtendsInterfaceInModule.js"
          },
          {
            "path": "tests/baselines/reference/classExtendsInterfaceInModule.symbols"
          },
          {
            "path": "tests/baselines/reference/classExtendsInterfaceInModule.types"
          },
          {
            "path": "tests/baselines/reference/classExtendsItselfIndirectly2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classExtendsItselfIndirectly2.js"
          },
          {
            "path": "tests/baselines/reference/classExtendsItselfIndirectly2.symbols"
          },
          {
            "path": "tests/baselines/reference/classExtendsItselfIndirectly2.types"
          },
          {
            "path": "tests/baselines/reference/classExtendsShadowedConstructorFunction.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classExtendsShadowedConstructorFunction.js"
          },
          {
            "path": "tests/baselines/reference/classExtendsShadowedConstructorFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/classExtendsShadowedConstructorFunction.types"
          },
          {
            "path": "tests/baselines/reference/classImplementsImportedInterface.js"
          },
          {
            "path": "tests/baselines/reference/classImplementsImportedInterface.symbols"
          },
          {
            "path": "tests/baselines/reference/classImplementsImportedInterface.types"
          },
          {
            "path": "tests/baselines/reference/classTypeParametersInStatics.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classTypeParametersInStatics.js"
          },
          {
            "path": "tests/baselines/reference/classTypeParametersInStatics.symbols"
          },
          {
            "path": "tests/baselines/reference/classTypeParametersInStatics.types"
          },
          {
            "path": "tests/baselines/reference/classWithConstructors.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classWithConstructors.js"
          },
          {
            "path": "tests/baselines/reference/classWithConstructors.symbols"
          },
          {
            "path": "tests/baselines/reference/classWithConstructors.types"
          },
          {
            "path": "tests/baselines/reference/classdecl.js"
          },
          {
            "path": "tests/baselines/reference/classdecl.symbols"
          },
          {
            "path": "tests/baselines/reference/classdecl.types"
          },
          {
            "path": "tests/baselines/reference/clinterfaces.js"
          },
          {
            "path": "tests/baselines/reference/clinterfaces.symbols"
          },
          {
            "path": "tests/baselines/reference/clinterfaces.types"
          },
          {
            "path": "tests/baselines/reference/cloduleAcrossModuleDefinitions.js"
          },
          {
            "path": "tests/baselines/reference/cloduleAcrossModuleDefinitions.symbols"
          },
          {
            "path": "tests/baselines/reference/cloduleAcrossModuleDefinitions.types"
          },
          {
            "path": "tests/baselines/reference/cloduleAndTypeParameters.js"
          },
          {
            "path": "tests/baselines/reference/cloduleAndTypeParameters.symbols"
          },
          {
            "path": "tests/baselines/reference/cloduleAndTypeParameters.types"
          },
          {
            "path": "tests/baselines/reference/cloduleSplitAcrossFiles.errors.txt"
          },
          {
            "path": "tests/baselines/reference/cloduleSplitAcrossFiles.js"
          },
          {
            "path": "tests/baselines/reference/cloduleSplitAcrossFiles.symbols"
          },
          {
            "path": "tests/baselines/reference/cloduleSplitAcrossFiles.types"
          },
          {
            "path": "tests/baselines/reference/cloduleStaticMembers.errors.txt"
          },
          {
            "path": "tests/baselines/reference/cloduleStaticMembers.js"
          },
          {
            "path": "tests/baselines/reference/cloduleStaticMembers.symbols"
          },
          {
            "path": "tests/baselines/reference/cloduleStaticMembers.types"
          },
          {
            "path": "tests/baselines/reference/cloduleTest2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/cloduleTest2.js"
          },
          {
            "path": "tests/baselines/reference/cloduleTest2.symbols"
          },
          {
            "path": "tests/baselines/reference/cloduleTest2.types"
          },
          {
            "path": "tests/baselines/reference/cloduleWithDuplicateMember1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/cloduleWithDuplicateMember1.js"
          },
          {
            "path": "tests/baselines/reference/cloduleWithDuplicateMember1.symbols"
          },
          {
            "path": "tests/baselines/reference/cloduleWithDuplicateMember1.types"
          },
          {
            "path": "tests/baselines/reference/cloduleWithDuplicateMember2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/cloduleWithDuplicateMember2.js"
          },
          {
            "path": "tests/baselines/reference/cloduleWithDuplicateMember2.symbols"
          },
          {
            "path": "tests/baselines/reference/cloduleWithDuplicateMember2.types"
          },
          {
            "path": "tests/baselines/reference/cloduleWithPriorInstantiatedModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/cloduleWithPriorInstantiatedModule.js"
          },
          {
            "path": "tests/baselines/reference/cloduleWithPriorInstantiatedModule.symbols"
          },
          {
            "path": "tests/baselines/reference/cloduleWithPriorInstantiatedModule.types"
          },
          {
            "path": "tests/baselines/reference/cloduleWithPriorUninstantiatedModule.js"
          },
          {
            "path": "tests/baselines/reference/cloduleWithPriorUninstantiatedModule.symbols"
          },
          {
            "path": "tests/baselines/reference/cloduleWithPriorUninstantiatedModule.types"
          },
          {
            "path": "tests/baselines/reference/cloduleWithRecursiveReference.js"
          },
          {
            "path": "tests/baselines/reference/cloduleWithRecursiveReference.symbols"
          },
          {
            "path": "tests/baselines/reference/cloduleWithRecursiveReference.types"
          },
          {
            "path": "tests/baselines/reference/clodulesDerivedClasses.errors.txt"
          },
          {
            "path": "tests/baselines/reference/clodulesDerivedClasses.js"
          },
          {
            "path": "tests/baselines/reference/clodulesDerivedClasses.symbols"
          },
          {
            "path": "tests/baselines/reference/clodulesDerivedClasses.types"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithAccessorChildren.js"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithAccessorChildren.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithAccessorChildren.types"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithConstructorChildren.js"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithConstructorChildren.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithConstructorChildren.types"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithEnumMemberConflict.js"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithEnumMemberConflict.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithEnumMemberConflict.types"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithFunctionChildren.js"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithFunctionChildren.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithFunctionChildren.types"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithMemberClassConflict.js"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithMemberClassConflict.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithMemberClassConflict.types"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithMemberInterfaceConflict.js"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithMemberInterfaceConflict.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithMemberInterfaceConflict.types"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithMemberVariable.js"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithMemberVariable.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithMemberVariable.types"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithMethodChildren.js"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithMethodChildren.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithMethodChildren.types"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithModuleChildren.js"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithModuleChildren.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithModuleChildren.types"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithModuleReopening.js"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithModuleReopening.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithModuleReopening.types"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithPrivateMember.js"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithPrivateMember.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithPrivateMember.types"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithUnicodeNames.errors.txt"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithUnicodeNames.js"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithUnicodeNames.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionCodeGenModuleWithUnicodeNames.types"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndAmbientClass.js"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndAmbientClass.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndAmbientClass.types"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndAmbientEnum.js"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndAmbientEnum.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndAmbientEnum.types"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndAmbientFunction.js"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndAmbientFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndAmbientFunction.types"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndAmbientFunctionInGlobalFile.js"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndAmbientFunctionInGlobalFile.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndAmbientFunctionInGlobalFile.types"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndAmbientModule.js"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndAmbientModule.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndAmbientModule.types"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndAmbientVar.js"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndAmbientVar.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndAmbientVar.types"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndClass.errors.txt"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndClass.js"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndClass.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndClass.types"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndEnum.errors.txt"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndEnum.js"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndEnum.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndEnum.types"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndFunction.errors.txt"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndFunction.js"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndFunction.types"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndFunctionInGlobalFile.js"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndFunctionInGlobalFile.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndFunctionInGlobalFile.types"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndInternalModuleAlias.errors.txt"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndInternalModuleAlias.js"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndInternalModuleAlias.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndInternalModuleAlias.types"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndInternalModuleAliasInGlobalFile.js"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndInternalModuleAliasInGlobalFile.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndInternalModuleAliasInGlobalFile.types"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndModule.js"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndModule.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndModule.types"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndUninstantiatedModule.js"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndUninstantiatedModule.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndUninstantiatedModule.types"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndVar.errors.txt"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndVar.js"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndVar.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionExportsRequireAndVar.types"
          },
          {
            "path": "tests/baselines/reference/collisionThisExpressionAndAliasInGlobal.js"
          },
          {
            "path": "tests/baselines/reference/collisionThisExpressionAndAliasInGlobal.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionThisExpressionAndAliasInGlobal.types"
          },
          {
            "path": "tests/baselines/reference/collisionThisExpressionAndModuleInGlobal.js"
          },
          {
            "path": "tests/baselines/reference/collisionThisExpressionAndModuleInGlobal.symbols"
          },
          {
            "path": "tests/baselines/reference/collisionThisExpressionAndModuleInGlobal.types"
          },
          {
            "path": "tests/baselines/reference/commentEmitAtEndOfFile1.js"
          },
          {
            "path": "tests/baselines/reference/commentEmitAtEndOfFile1.symbols"
          },
          {
            "path": "tests/baselines/reference/commentEmitAtEndOfFile1.types"
          },
          {
            "path": "tests/baselines/reference/commentOnAmbientModule.js"
          },
          {
            "path": "tests/baselines/reference/commentOnAmbientModule.symbols"
          },
          {
            "path": "tests/baselines/reference/commentOnAmbientModule.types"
          },
          {
            "path": "tests/baselines/reference/commentOnElidedModule1.js"
          },
          {
            "path": "tests/baselines/reference/commentOnElidedModule1.symbols"
          },
          {
            "path": "tests/baselines/reference/commentOnElidedModule1.types"
          },
          {
            "path": "tests/baselines/reference/commentsDottedModuleName.js"
          },
          {
            "path": "tests/baselines/reference/commentsDottedModuleName.symbols"
          },
          {
            "path": "tests/baselines/reference/commentsDottedModuleName.types"
          },
          {
            "path": "tests/baselines/reference/commentsExternalModules.js"
          },
          {
            "path": "tests/baselines/reference/commentsExternalModules.symbols"
          },
          {
            "path": "tests/baselines/reference/commentsExternalModules.types"
          },
          {
            "path": "tests/baselines/reference/commentsExternalModules2.js"
          },
          {
            "path": "tests/baselines/reference/commentsExternalModules2.symbols"
          },
          {
            "path": "tests/baselines/reference/commentsExternalModules2.types"
          },
          {
            "path": "tests/baselines/reference/commentsExternalModules3.js"
          },
          {
            "path": "tests/baselines/reference/commentsExternalModules3.symbols"
          },
          {
            "path": "tests/baselines/reference/commentsExternalModules3.types"
          },
          {
            "path": "tests/baselines/reference/commentsFormatting.js"
          },
          {
            "path": "tests/baselines/reference/commentsFormatting.symbols"
          },
          {
            "path": "tests/baselines/reference/commentsFormatting.types"
          },
          {
            "path": "tests/baselines/reference/commentsModules.js"
          },
          {
            "path": "tests/baselines/reference/commentsModules.symbols"
          },
          {
            "path": "tests/baselines/reference/commentsModules.types"
          },
          {
            "path": "tests/baselines/reference/commentsMultiModuleMultiFile.js"
          },
          {
            "path": "tests/baselines/reference/commentsMultiModuleMultiFile.symbols"
          },
          {
            "path": "tests/baselines/reference/commentsMultiModuleMultiFile.types"
          },
          {
            "path": "tests/baselines/reference/commentsMultiModuleSingleFile.js"
          },
          {
            "path": "tests/baselines/reference/commentsMultiModuleSingleFile.symbols"
          },
          {
            "path": "tests/baselines/reference/commentsMultiModuleSingleFile.types"
          },
          {
            "path": "tests/baselines/reference/commentsdoNotEmitComments.js"
          },
          {
            "path": "tests/baselines/reference/commentsdoNotEmitComments.symbols"
          },
          {
            "path": "tests/baselines/reference/commentsdoNotEmitComments.types"
          },
          {
            "path": "tests/baselines/reference/commentsemitComments.js"
          },
          {
            "path": "tests/baselines/reference/commentsemitComments.symbols"
          },
          {
            "path": "tests/baselines/reference/commentsemitComments.types"
          },
          {
            "path": "tests/baselines/reference/commonJSImportNotAsPrimaryExpression.js"
          },
          {
            "path": "tests/baselines/reference/commonJSImportNotAsPrimaryExpression.symbols"
          },
          {
            "path": "tests/baselines/reference/commonJSImportNotAsPrimaryExpression.types"
          },
          {
            "path": "tests/baselines/reference/completionsCommentsClass.baseline"
          },
          {
            "path": "tests/baselines/reference/complexRecursiveCollections.errors.txt"
          },
          {
            "path": "tests/baselines/reference/complexRecursiveCollections.js"
          },
          {
            "path": "tests/baselines/reference/complexRecursiveCollections.symbols"
          },
          {
            "path": "tests/baselines/reference/complexRecursiveCollections.types"
          },
          {
            "path": "tests/baselines/reference/complicatedPrivacy.errors.txt"
          },
          {
            "path": "tests/baselines/reference/complicatedPrivacy.js"
          },
          {
            "path": "tests/baselines/reference/complicatedPrivacy.symbols"
          },
          {
            "path": "tests/baselines/reference/complicatedPrivacy.types"
          },
          {
            "path": "tests/baselines/reference/compoundAssignmentLHSIsValue.errors.txt"
          },
          {
            "path": "tests/baselines/reference/compoundAssignmentLHSIsValue.js"
          },
          {
            "path": "tests/baselines/reference/compoundAssignmentLHSIsValue.symbols"
          },
          {
            "path": "tests/baselines/reference/compoundAssignmentLHSIsValue.types"
          },
          {
            "path": "tests/baselines/reference/compoundExponentiationAssignmentLHSIsValue.errors.txt"
          },
          {
            "path": "tests/baselines/reference/compoundExponentiationAssignmentLHSIsValue.js"
          },
          {
            "path": "tests/baselines/reference/compoundExponentiationAssignmentLHSIsValue.symbols"
          },
          {
            "path": "tests/baselines/reference/compoundExponentiationAssignmentLHSIsValue.types"
          },
          {
            "path": "tests/baselines/reference/compoundVarDecl1.js"
          },
          {
            "path": "tests/baselines/reference/compoundVarDecl1.symbols"
          },
          {
            "path": "tests/baselines/reference/compoundVarDecl1.types"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames19_ES5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames19_ES5.js"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames19_ES5.symbols"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames19_ES5.types"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames19_ES6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames19_ES6.js"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames19_ES6.symbols"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames19_ES6.types"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-access3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-access3.js"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-access3.symbols"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-access3.types"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-access4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-access4.js"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-access4.symbols"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-access4.types"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-ambient-errors.errors.txt"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-ambient-errors.js"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-ambient-errors.symbols"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-ambient-errors.types"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-ambient.js"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-ambient.symbols"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-ambient.types"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-scopes.errors.txt"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-scopes.js"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-scopes.symbols"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-scopes.types"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-validContexts.errors.txt"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-validContexts.js"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-validContexts.symbols"
          },
          {
            "path": "tests/baselines/reference/constDeclarations-validContexts.types"
          },
          {
            "path": "tests/baselines/reference/constDeclarations2.js"
          },
          {
            "path": "tests/baselines/reference/constDeclarations2.symbols"
          },
          {
            "path": "tests/baselines/reference/constDeclarations2.types"
          },
          {
            "path": "tests/baselines/reference/constEnumErrors.errors.txt"
          },
          {
            "path": "tests/baselines/reference/constEnumErrors.js"
          },
          {
            "path": "tests/baselines/reference/constEnumErrors.symbols"
          },
          {
            "path": "tests/baselines/reference/constEnumErrors.types"
          },
          {
            "path": "tests/baselines/reference/constEnumMergingWithValues1.js"
          },
          {
            "path": "tests/baselines/reference/constEnumMergingWithValues1.symbols"
          },
          {
            "path": "tests/baselines/reference/constEnumMergingWithValues1.types"
          },
          {
            "path": "tests/baselines/reference/constEnumMergingWithValues2.js"
          },
          {
            "path": "tests/baselines/reference/constEnumMergingWithValues2.symbols"
          },
          {
            "path": "tests/baselines/reference/constEnumMergingWithValues2.types"
          },
          {
            "path": "tests/baselines/reference/constEnumMergingWithValues3.js"
          },
          {
            "path": "tests/baselines/reference/constEnumMergingWithValues3.symbols"
          },
          {
            "path": "tests/baselines/reference/constEnumMergingWithValues3.types"
          },
          {
            "path": "tests/baselines/reference/constEnumMergingWithValues4.js"
          },
          {
            "path": "tests/baselines/reference/constEnumMergingWithValues4.symbols"
          },
          {
            "path": "tests/baselines/reference/constEnumMergingWithValues4.types"
          },
          {
            "path": "tests/baselines/reference/constEnumMergingWithValues5.js"
          },
          {
            "path": "tests/baselines/reference/constEnumMergingWithValues5.symbols"
          },
          {
            "path": "tests/baselines/reference/constEnumMergingWithValues5.types"
          },
          {
            "path": "tests/baselines/reference/constEnumNamespaceReferenceCausesNoImport2.js"
          },
          {
            "path": "tests/baselines/reference/constEnumOnlyModuleMerging.js"
          },
          {
            "path": "tests/baselines/reference/constEnumOnlyModuleMerging.symbols"
          },
          {
            "path": "tests/baselines/reference/constEnumOnlyModuleMerging.types"
          },
          {
            "path": "tests/baselines/reference/constEnums.js"
          },
          {
            "path": "tests/baselines/reference/constEnums.symbols"
          },
          {
            "path": "tests/baselines/reference/constEnums.types"
          },
          {
            "path": "tests/baselines/reference/constructSignatureAssignabilityInInheritance.errors.txt"
          },
          {
            "path": "tests/baselines/reference/constructSignatureAssignabilityInInheritance.js"
          },
          {
            "path": "tests/baselines/reference/constructSignatureAssignabilityInInheritance.symbols"
          },
          {
            "path": "tests/baselines/reference/constructSignatureAssignabilityInInheritance.types"
          },
          {
            "path": "tests/baselines/reference/constructSignatureAssignabilityInInheritance3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/constructSignatureAssignabilityInInheritance3.js"
          },
          {
            "path": "tests/baselines/reference/constructSignatureAssignabilityInInheritance3.symbols"
          },
          {
            "path": "tests/baselines/reference/constructSignatureAssignabilityInInheritance3.types"
          },
          {
            "path": "tests/baselines/reference/constructSignaturesWithOverloads2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/constructSignaturesWithOverloads2.js"
          },
          {
            "path": "tests/baselines/reference/constructSignaturesWithOverloads2.symbols"
          },
          {
            "path": "tests/baselines/reference/constructSignaturesWithOverloads2.types"
          },
          {
            "path": "tests/baselines/reference/constructorArgWithGenericCallSignature.js"
          },
          {
            "path": "tests/baselines/reference/constructorArgWithGenericCallSignature.symbols"
          },
          {
            "path": "tests/baselines/reference/constructorArgWithGenericCallSignature.types"
          },
          {
            "path": "tests/baselines/reference/constructorHasPrototypeProperty.js"
          },
          {
            "path": "tests/baselines/reference/constructorHasPrototypeProperty.symbols"
          },
          {
            "path": "tests/baselines/reference/constructorHasPrototypeProperty.types"
          },
          {
            "path": "tests/baselines/reference/constructorOverloads4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/constructorOverloads4.js"
          },
          {
            "path": "tests/baselines/reference/constructorOverloads4.symbols"
          },
          {
            "path": "tests/baselines/reference/constructorOverloads4.types"
          },
          {
            "path": "tests/baselines/reference/constructorOverloads5.js"
          },
          {
            "path": "tests/baselines/reference/constructorOverloads5.symbols"
          },
          {
            "path": "tests/baselines/reference/constructorOverloads5.types"
          },
          {
            "path": "tests/baselines/reference/constructorWithIncompleteTypeAnnotation.errors.txt"
          },
          {
            "path": "tests/baselines/reference/constructorWithIncompleteTypeAnnotation.js"
          },
          {
            "path": "tests/baselines/reference/constructorWithIncompleteTypeAnnotation.symbols"
          },
          {
            "path": "tests/baselines/reference/constructorWithIncompleteTypeAnnotation.types"
          },
          {
            "path": "tests/baselines/reference/contextualTyping.errors.txt"
          },
          {
            "path": "tests/baselines/reference/contextualTyping.js"
          },
          {
            "path": "tests/baselines/reference/contextualTyping.js.map"
          },
          {
            "path": "tests/baselines/reference/contextualTyping.sourcemap.txt"
          },
          {
            "path": "tests/baselines/reference/contextualTyping.symbols"
          },
          {
            "path": "tests/baselines/reference/contextualTyping.types"
          },
          {
            "path": "tests/baselines/reference/convertKeywordsYes.errors.txt"
          },
          {
            "path": "tests/baselines/reference/convertKeywordsYes.js"
          },
          {
            "path": "tests/baselines/reference/convertKeywordsYes.symbols"
          },
          {
            "path": "tests/baselines/reference/convertKeywordsYes.types"
          },
          {
            "path": "tests/baselines/reference/covariance1.js"
          },
          {
            "path": "tests/baselines/reference/covariance1.symbols"
          },
          {
            "path": "tests/baselines/reference/covariance1.types"
          },
          {
            "path": "tests/baselines/reference/crashRegressionTest.errors.txt"
          },
          {
            "path": "tests/baselines/reference/crashRegressionTest.js"
          },
          {
            "path": "tests/baselines/reference/crashRegressionTest.symbols"
          },
          {
            "path": "tests/baselines/reference/crashRegressionTest.types"
          },
          {
            "path": "tests/baselines/reference/declFileAliasUseBeforeDeclaration2.js"
          },
          {
            "path": "tests/baselines/reference/declFileAliasUseBeforeDeclaration2.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileAliasUseBeforeDeclaration2.types"
          },
          {
            "path": "tests/baselines/reference/declFileAmbientExternalModuleWithSingleExportedModule.js"
          },
          {
            "path": "tests/baselines/reference/declFileAmbientExternalModuleWithSingleExportedModule.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileAmbientExternalModuleWithSingleExportedModule.types"
          },
          {
            "path": "tests/baselines/reference/declFileExportAssignmentImportInternalModule.js"
          },
          {
            "path": "tests/baselines/reference/declFileExportAssignmentImportInternalModule.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileExportAssignmentImportInternalModule.types"
          },
          {
            "path": "tests/baselines/reference/declFileExportImportChain.js"
          },
          {
            "path": "tests/baselines/reference/declFileExportImportChain.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileExportImportChain.types"
          },
          {
            "path": "tests/baselines/reference/declFileExportImportChain2.js"
          },
          {
            "path": "tests/baselines/reference/declFileExportImportChain2.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileExportImportChain2.types"
          },
          {
            "path": "tests/baselines/reference/declFileGenericType.js"
          },
          {
            "path": "tests/baselines/reference/declFileGenericType.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileGenericType.types"
          },
          {
            "path": "tests/baselines/reference/declFileGenericType2.js"
          },
          {
            "path": "tests/baselines/reference/declFileGenericType2.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileGenericType2.types"
          },
          {
            "path": "tests/baselines/reference/declFileImportChainInExportAssignment.js"
          },
          {
            "path": "tests/baselines/reference/declFileImportChainInExportAssignment.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileImportChainInExportAssignment.types"
          },
          {
            "path": "tests/baselines/reference/declFileImportModuleWithExportAssignment.js"
          },
          {
            "path": "tests/baselines/reference/declFileImportModuleWithExportAssignment.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileImportModuleWithExportAssignment.types"
          },
          {
            "path": "tests/baselines/reference/declFileInternalAliases.js"
          },
          {
            "path": "tests/baselines/reference/declFileInternalAliases.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileInternalAliases.types"
          },
          {
            "path": "tests/baselines/reference/declFileModuleAssignmentInObjectLiteralProperty.js"
          },
          {
            "path": "tests/baselines/reference/declFileModuleAssignmentInObjectLiteralProperty.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileModuleAssignmentInObjectLiteralProperty.types"
          },
          {
            "path": "tests/baselines/reference/declFileModuleContinuation.js"
          },
          {
            "path": "tests/baselines/reference/declFileModuleContinuation.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileModuleContinuation.types"
          },
          {
            "path": "tests/baselines/reference/declFileModuleWithPropertyOfTypeModule.js"
          },
          {
            "path": "tests/baselines/reference/declFileModuleWithPropertyOfTypeModule.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileModuleWithPropertyOfTypeModule.types"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationArrayType.js"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationArrayType.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationArrayType.types"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationTupleType.js"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationTupleType.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationTupleType.types"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationTypeAlias.js"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationTypeAlias.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationTypeAlias.types"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationTypeLiteral.js"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationTypeLiteral.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationTypeLiteral.types"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationTypeQuery.js"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationTypeQuery.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationTypeQuery.types"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationTypeReference.js"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationTypeReference.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationTypeReference.types"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationUnionType.js"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationUnionType.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationUnionType.types"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationVisibilityErrorAccessors.js"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationVisibilityErrorAccessors.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationVisibilityErrorAccessors.types"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationVisibilityErrorParameterOfFunction.js"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationVisibilityErrorParameterOfFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationVisibilityErrorParameterOfFunction.types"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationVisibilityErrorReturnTypeOfFunction.js"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationVisibilityErrorReturnTypeOfFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationVisibilityErrorReturnTypeOfFunction.types"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationVisibilityErrorTypeAlias.js"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationVisibilityErrorTypeAlias.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationVisibilityErrorTypeAlias.types"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationVisibilityErrorTypeLiteral.js"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationVisibilityErrorTypeLiteral.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationVisibilityErrorTypeLiteral.types"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationVisibilityErrorVariableDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationVisibilityErrorVariableDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileTypeAnnotationVisibilityErrorVariableDeclaration.types"
          },
          {
            "path": "tests/baselines/reference/declFileTypeofInAnonymousType.js"
          },
          {
            "path": "tests/baselines/reference/declFileTypeofInAnonymousType.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileTypeofInAnonymousType.types"
          },
          {
            "path": "tests/baselines/reference/declFileTypeofModule.js"
          },
          {
            "path": "tests/baselines/reference/declFileTypeofModule.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileTypeofModule.types"
          },
          {
            "path": "tests/baselines/reference/declFileWithClassNameConflictingWithClassReferredByExtendsClause.js"
          },
          {
            "path": "tests/baselines/reference/declFileWithClassNameConflictingWithClassReferredByExtendsClause.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileWithClassNameConflictingWithClassReferredByExtendsClause.types"
          },
          {
            "path": "tests/baselines/reference/declFileWithErrorsInInputDeclarationFile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declFileWithErrorsInInputDeclarationFile.js"
          },
          {
            "path": "tests/baselines/reference/declFileWithErrorsInInputDeclarationFile.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileWithErrorsInInputDeclarationFile.types"
          },
          {
            "path": "tests/baselines/reference/declFileWithErrorsInInputDeclarationFileWithOut.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declFileWithErrorsInInputDeclarationFileWithOut.js"
          },
          {
            "path": "tests/baselines/reference/declFileWithErrorsInInputDeclarationFileWithOut.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileWithErrorsInInputDeclarationFileWithOut.types"
          },
          {
            "path": "tests/baselines/reference/declFileWithExtendsClauseThatHasItsContainerNameConflict.js"
          },
          {
            "path": "tests/baselines/reference/declFileWithExtendsClauseThatHasItsContainerNameConflict.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileWithExtendsClauseThatHasItsContainerNameConflict.types"
          },
          {
            "path": "tests/baselines/reference/declFileWithInternalModuleNameConflictsInExtendsClause1.js"
          },
          {
            "path": "tests/baselines/reference/declFileWithInternalModuleNameConflictsInExtendsClause1.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileWithInternalModuleNameConflictsInExtendsClause1.types"
          },
          {
            "path": "tests/baselines/reference/declFileWithInternalModuleNameConflictsInExtendsClause2.js"
          },
          {
            "path": "tests/baselines/reference/declFileWithInternalModuleNameConflictsInExtendsClause2.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileWithInternalModuleNameConflictsInExtendsClause2.types"
          },
          {
            "path": "tests/baselines/reference/declFileWithInternalModuleNameConflictsInExtendsClause3.js"
          },
          {
            "path": "tests/baselines/reference/declFileWithInternalModuleNameConflictsInExtendsClause3.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileWithInternalModuleNameConflictsInExtendsClause3.types"
          },
          {
            "path": "tests/baselines/reference/declInput-2.js"
          },
          {
            "path": "tests/baselines/reference/declInput-2.symbols"
          },
          {
            "path": "tests/baselines/reference/declInput-2.types"
          },
          {
            "path": "tests/baselines/reference/declInput4.js"
          },
          {
            "path": "tests/baselines/reference/declInput4.symbols"
          },
          {
            "path": "tests/baselines/reference/declInput4.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitDestructuringArrayPattern3.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitDestructuringArrayPattern3.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitDestructuringArrayPattern3.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitDestructuringObjectLiteralPattern.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationEmitDestructuringObjectLiteralPattern.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitDestructuringObjectLiteralPattern.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitDestructuringObjectLiteralPattern.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitDestructuringObjectLiteralPattern2.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitDestructuringObjectLiteralPattern2.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitDestructuringObjectLiteralPattern2.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitDestructuringPrivacyError.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitDestructuringPrivacyError.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitDestructuringPrivacyError.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitImportInExportAssignmentModule.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitImportInExportAssignmentModule.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitImportInExportAssignmentModule.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNameConflicts.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNameConflicts.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNameConflicts.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNameConflicts2.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNameConflicts2.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNameConflicts2.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNameConflicts3.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNameConflicts3.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNameConflicts3.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNameConflictsWithAlias.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNameConflictsWithAlias.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNameConflictsWithAlias.types"
          },
          {
            "path": "tests/baselines/reference/declarationMaps.js"
          },
          {
            "path": "tests/baselines/reference/declarationMaps.js.map"
          },
          {
            "path": "tests/baselines/reference/declarationMaps.sourcemap.txt"
          },
          {
            "path": "tests/baselines/reference/declarationMaps.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationMaps.types"
          },
          {
            "path": "tests/baselines/reference/declarationMapsWithoutDeclaration.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationMapsWithoutDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/declarationMapsWithoutDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationMapsWithoutDeclaration.types"
          },
          {
            "path": "tests/baselines/reference/declarationsAndAssignments.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationsAndAssignments.js"
          },
          {
            "path": "tests/baselines/reference/declarationsAndAssignments.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationsAndAssignments.types"
          },
          {
            "path": "tests/baselines/reference/declareAlreadySeen.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declareAlreadySeen.js"
          },
          {
            "path": "tests/baselines/reference/declareAlreadySeen.symbols"
          },
          {
            "path": "tests/baselines/reference/declareAlreadySeen.types"
          },
          {
            "path": "tests/baselines/reference/declareDottedModuleName.js"
          },
          {
            "path": "tests/baselines/reference/declareDottedModuleName.symbols"
          },
          {
            "path": "tests/baselines/reference/declareDottedModuleName.types"
          },
          {
            "path": "tests/baselines/reference/declareExternalModuleWithExportAssignedFundule.js"
          },
          {
            "path": "tests/baselines/reference/declareExternalModuleWithExportAssignedFundule.symbols"
          },
          {
            "path": "tests/baselines/reference/declareExternalModuleWithExportAssignedFundule.types"
          },
          {
            "path": "tests/baselines/reference/declareFileExportAssignment.js"
          },
          {
            "path": "tests/baselines/reference/declareFileExportAssignment.symbols"
          },
          {
            "path": "tests/baselines/reference/declareFileExportAssignment.types"
          },
          {
            "path": "tests/baselines/reference/declareFileExportAssignmentWithVarFromVariableStatement.js"
          },
          {
            "path": "tests/baselines/reference/declareFileExportAssignmentWithVarFromVariableStatement.symbols"
          },
          {
            "path": "tests/baselines/reference/declareFileExportAssignmentWithVarFromVariableStatement.types"
          },
          {
            "path": "tests/baselines/reference/decoratorOnClassMethod11.errors.txt"
          },
          {
            "path": "tests/baselines/reference/decoratorOnClassMethod11.js"
          },
          {
            "path": "tests/baselines/reference/decoratorOnClassMethod11.symbols"
          },
          {
            "path": "tests/baselines/reference/decoratorOnClassMethod11.types"
          },
          {
            "path": "tests/baselines/reference/decoratorOnClassMethod12.errors.txt"
          },
          {
            "path": "tests/baselines/reference/decoratorOnClassMethod12.js"
          },
          {
            "path": "tests/baselines/reference/decoratorOnClassMethod12.symbols"
          },
          {
            "path": "tests/baselines/reference/decoratorOnClassMethod12.types"
          },
          {
            "path": "tests/baselines/reference/decoratorOnImportEquals1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/decoratorOnImportEquals1.js"
          },
          {
            "path": "tests/baselines/reference/decoratorOnImportEquals1.symbols"
          },
          {
            "path": "tests/baselines/reference/decoratorOnImportEquals1.types"
          },
          {
            "path": "tests/baselines/reference/decoratorOnInternalModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/decoratorOnInternalModule.js"
          },
          {
            "path": "tests/baselines/reference/decoratorOnInternalModule.symbols"
          },
          {
            "path": "tests/baselines/reference/decoratorOnInternalModule.types"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithAnyOtherType.js"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithAnyOtherType.symbols"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithAnyOtherType.types"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithAnyOtherTypeInvalidOperations.errors.txt"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithAnyOtherTypeInvalidOperations.js"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithAnyOtherTypeInvalidOperations.symbols"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithAnyOtherTypeInvalidOperations.types"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithNumberType.js"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithNumberType.symbols"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithNumberType.types"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithNumberTypeInvalidOperations.errors.txt"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithNumberTypeInvalidOperations.js"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithNumberTypeInvalidOperations.symbols"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithNumberTypeInvalidOperations.types"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithUnsupportedBooleanType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithUnsupportedBooleanType.js"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithUnsupportedBooleanType.symbols"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithUnsupportedBooleanType.types"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithUnsupportedStringType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithUnsupportedStringType.js"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithUnsupportedStringType.symbols"
          },
          {
            "path": "tests/baselines/reference/decrementOperatorWithUnsupportedStringType.types"
          },
          {
            "path": "tests/baselines/reference/defaultArgsInFunctionExpressions.errors.txt"
          },
          {
            "path": "tests/baselines/reference/defaultArgsInFunctionExpressions.js"
          },
          {
            "path": "tests/baselines/reference/defaultArgsInFunctionExpressions.symbols"
          },
          {
            "path": "tests/baselines/reference/defaultArgsInFunctionExpressions.types"
          },
          {
            "path": "tests/baselines/reference/deleteOperatorWithAnyOtherType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/deleteOperatorWithAnyOtherType.js"
          },
          {
            "path": "tests/baselines/reference/deleteOperatorWithAnyOtherType.symbols"
          },
          {
            "path": "tests/baselines/reference/deleteOperatorWithAnyOtherType.types"
          },
          {
            "path": "tests/baselines/reference/deleteOperatorWithBooleanType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/deleteOperatorWithBooleanType.js"
          },
          {
            "path": "tests/baselines/reference/deleteOperatorWithBooleanType.symbols"
          },
          {
            "path": "tests/baselines/reference/deleteOperatorWithBooleanType.types"
          },
          {
            "path": "tests/baselines/reference/deleteOperatorWithNumberType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/deleteOperatorWithNumberType.js"
          },
          {
            "path": "tests/baselines/reference/deleteOperatorWithNumberType.symbols"
          },
          {
            "path": "tests/baselines/reference/deleteOperatorWithNumberType.types"
          },
          {
            "path": "tests/baselines/reference/deleteOperatorWithStringType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/deleteOperatorWithStringType.js"
          },
          {
            "path": "tests/baselines/reference/deleteOperatorWithStringType.symbols"
          },
          {
            "path": "tests/baselines/reference/deleteOperatorWithStringType.types"
          },
          {
            "path": "tests/baselines/reference/differentTypesWithSameName.errors.txt"
          },
          {
            "path": "tests/baselines/reference/differentTypesWithSameName.js"
          },
          {
            "path": "tests/baselines/reference/differentTypesWithSameName.symbols"
          },
          {
            "path": "tests/baselines/reference/differentTypesWithSameName.types"
          },
          {
            "path": "tests/baselines/reference/disallowLineTerminatorBeforeArrow.errors.txt"
          },
          {
            "path": "tests/baselines/reference/disallowLineTerminatorBeforeArrow.js"
          },
          {
            "path": "tests/baselines/reference/disallowLineTerminatorBeforeArrow.symbols"
          },
          {
            "path": "tests/baselines/reference/disallowLineTerminatorBeforeArrow.types"
          },
          {
            "path": "tests/baselines/reference/dottedModuleName.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dottedModuleName.js"
          },
          {
            "path": "tests/baselines/reference/dottedModuleName.symbols"
          },
          {
            "path": "tests/baselines/reference/dottedModuleName.types"
          },
          {
            "path": "tests/baselines/reference/dottedModuleName2.js"
          },
          {
            "path": "tests/baselines/reference/dottedModuleName2.symbols"
          },
          {
            "path": "tests/baselines/reference/dottedModuleName2.types"
          },
          {
            "path": "tests/baselines/reference/downlevelLetConst13.js"
          },
          {
            "path": "tests/baselines/reference/downlevelLetConst13.symbols"
          },
          {
            "path": "tests/baselines/reference/downlevelLetConst13.types"
          },
          {
            "path": "tests/baselines/reference/downlevelLetConst16.errors.txt"
          },
          {
            "path": "tests/baselines/reference/downlevelLetConst16.js"
          },
          {
            "path": "tests/baselines/reference/downlevelLetConst16.symbols"
          },
          {
            "path": "tests/baselines/reference/downlevelLetConst16.types"
          },
          {
            "path": "tests/baselines/reference/duplicateAnonymousInners1.js"
          },
          {
            "path": "tests/baselines/reference/duplicateAnonymousInners1.symbols"
          },
          {
            "path": "tests/baselines/reference/duplicateAnonymousInners1.types"
          },
          {
            "path": "tests/baselines/reference/duplicateAnonymousModuleClasses.js"
          },
          {
            "path": "tests/baselines/reference/duplicateAnonymousModuleClasses.symbols"
          },
          {
            "path": "tests/baselines/reference/duplicateAnonymousModuleClasses.types"
          },
          {
            "path": "tests/baselines/reference/duplicateExportAssignments.errors.txt"
          },
          {
            "path": "tests/baselines/reference/duplicateExportAssignments.js"
          },
          {
            "path": "tests/baselines/reference/duplicateExportAssignments.symbols"
          },
          {
            "path": "tests/baselines/reference/duplicateExportAssignments.types"
          },
          {
            "path": "tests/baselines/reference/duplicateIdentifierShouldNotShortCircuitBaseTypeBinding.js"
          },
          {
            "path": "tests/baselines/reference/duplicateIdentifierShouldNotShortCircuitBaseTypeBinding.symbols"
          },
          {
            "path": "tests/baselines/reference/duplicateIdentifierShouldNotShortCircuitBaseTypeBinding.types"
          },
          {
            "path": "tests/baselines/reference/duplicateIdentifiersAcrossContainerBoundaries.errors.txt"
          },
          {
            "path": "tests/baselines/reference/duplicateIdentifiersAcrossContainerBoundaries.js"
          },
          {
            "path": "tests/baselines/reference/duplicateIdentifiersAcrossContainerBoundaries.symbols"
          },
          {
            "path": "tests/baselines/reference/duplicateIdentifiersAcrossContainerBoundaries.types"
          },
          {
            "path": "tests/baselines/reference/duplicateIdentifiersAcrossFileBoundaries.errors.txt"
          },
          {
            "path": "tests/baselines/reference/duplicateIdentifiersAcrossFileBoundaries.js"
          },
          {
            "path": "tests/baselines/reference/duplicateIdentifiersAcrossFileBoundaries.symbols"
          },
          {
            "path": "tests/baselines/reference/duplicateIdentifiersAcrossFileBoundaries.types"
          },
          {
            "path": "tests/baselines/reference/duplicateStringIndexers.errors.txt"
          },
          {
            "path": "tests/baselines/reference/duplicateStringIndexers.js"
          },
          {
            "path": "tests/baselines/reference/duplicateStringIndexers.symbols"
          },
          {
            "path": "tests/baselines/reference/duplicateStringIndexers.types"
          },
          {
            "path": "tests/baselines/reference/duplicateSymbolsExportMatching.errors.txt"
          },
          {
            "path": "tests/baselines/reference/duplicateSymbolsExportMatching.js"
          },
          {
            "path": "tests/baselines/reference/duplicateSymbolsExportMatching.symbols"
          },
          {
            "path": "tests/baselines/reference/duplicateSymbolsExportMatching.types"
          },
          {
            "path": "tests/baselines/reference/duplicateVarAndImport.js"
          },
          {
            "path": "tests/baselines/reference/duplicateVarAndImport.symbols"
          },
          {
            "path": "tests/baselines/reference/duplicateVarAndImport.types"
          },
          {
            "path": "tests/baselines/reference/duplicateVarAndImport2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/duplicateVarAndImport2.js"
          },
          {
            "path": "tests/baselines/reference/duplicateVarAndImport2.symbols"
          },
          {
            "path": "tests/baselines/reference/duplicateVarAndImport2.types"
          },
          {
            "path": "tests/baselines/reference/duplicateVariablesByScope.js"
          },
          {
            "path": "tests/baselines/reference/duplicateVariablesByScope.symbols"
          },
          {
            "path": "tests/baselines/reference/duplicateVariablesByScope.types"
          },
          {
            "path": "tests/baselines/reference/duplicateVariablesWithAny.errors.txt"
          },
          {
            "path": "tests/baselines/reference/duplicateVariablesWithAny.js"
          },
          {
            "path": "tests/baselines/reference/duplicateVariablesWithAny.symbols"
          },
          {
            "path": "tests/baselines/reference/duplicateVariablesWithAny.types"
          },
          {
            "path": "tests/baselines/reference/duplicateVarsAcrossFileBoundaries.errors.txt"
          },
          {
            "path": "tests/baselines/reference/duplicateVarsAcrossFileBoundaries.js"
          },
          {
            "path": "tests/baselines/reference/duplicateVarsAcrossFileBoundaries.symbols"
          },
          {
            "path": "tests/baselines/reference/duplicateVarsAcrossFileBoundaries.types"
          },
          {
            "path": "tests/baselines/reference/emitMemberAccessExpression.js"
          },
          {
            "path": "tests/baselines/reference/emitMemberAccessExpression.symbols"
          },
          {
            "path": "tests/baselines/reference/emitMemberAccessExpression.types"
          },
          {
            "path": "tests/baselines/reference/enumAssignability.errors.txt"
          },
          {
            "path": "tests/baselines/reference/enumAssignability.js"
          },
          {
            "path": "tests/baselines/reference/enumAssignability.symbols"
          },
          {
            "path": "tests/baselines/reference/enumAssignability.types"
          },
          {
            "path": "tests/baselines/reference/enumAssignabilityInInheritance.errors.txt"
          },
          {
            "path": "tests/baselines/reference/enumAssignabilityInInheritance.js"
          },
          {
            "path": "tests/baselines/reference/enumAssignabilityInInheritance.symbols"
          },
          {
            "path": "tests/baselines/reference/enumAssignabilityInInheritance.types"
          },
          {
            "path": "tests/baselines/reference/enumAssignmentCompat.errors.txt"
          },
          {
            "path": "tests/baselines/reference/enumAssignmentCompat.js"
          },
          {
            "path": "tests/baselines/reference/enumAssignmentCompat.symbols"
          },
          {
            "path": "tests/baselines/reference/enumAssignmentCompat.types"
          },
          {
            "path": "tests/baselines/reference/enumAssignmentCompat2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/enumAssignmentCompat2.js"
          },
          {
            "path": "tests/baselines/reference/enumAssignmentCompat2.symbols"
          },
          {
            "path": "tests/baselines/reference/enumAssignmentCompat2.types"
          },
          {
            "path": "tests/baselines/reference/enumAssignmentCompat3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/enumAssignmentCompat3.js"
          },
          {
            "path": "tests/baselines/reference/enumAssignmentCompat3.symbols"
          },
          {
            "path": "tests/baselines/reference/enumAssignmentCompat3.types"
          },
          {
            "path": "tests/baselines/reference/enumBasics3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/enumBasics3.js"
          },
          {
            "path": "tests/baselines/reference/enumBasics3.symbols"
          },
          {
            "path": "tests/baselines/reference/enumBasics3.types"
          },
          {
            "path": "tests/baselines/reference/enumDecl1.js"
          },
          {
            "path": "tests/baselines/reference/enumDecl1.symbols"
          },
          {
            "path": "tests/baselines/reference/enumDecl1.types"
          },
          {
            "path": "tests/baselines/reference/enumIsNotASubtypeOfAnythingButNumber.errors.txt"
          },
          {
            "path": "tests/baselines/reference/enumIsNotASubtypeOfAnythingButNumber.js"
          },
          {
            "path": "tests/baselines/reference/enumIsNotASubtypeOfAnythingButNumber.symbols"
          },
          {
            "path": "tests/baselines/reference/enumIsNotASubtypeOfAnythingButNumber.types"
          },
          {
            "path": "tests/baselines/reference/enumLiteralAssignableToEnumInsideUnion.errors.txt"
          },
          {
            "path": "tests/baselines/reference/enumLiteralAssignableToEnumInsideUnion.js"
          },
          {
            "path": "tests/baselines/reference/enumLiteralAssignableToEnumInsideUnion.symbols"
          },
          {
            "path": "tests/baselines/reference/enumLiteralAssignableToEnumInsideUnion.types"
          },
          {
            "path": "tests/baselines/reference/enumMerging.js"
          },
          {
            "path": "tests/baselines/reference/enumMerging.symbols"
          },
          {
            "path": "tests/baselines/reference/enumMerging.types"
          },
          {
            "path": "tests/baselines/reference/enumMergingErrors.errors.txt"
          },
          {
            "path": "tests/baselines/reference/enumMergingErrors.js"
          },
          {
            "path": "tests/baselines/reference/enumMergingErrors.symbols"
          },
          {
            "path": "tests/baselines/reference/enumMergingErrors.types"
          },
          {
            "path": "tests/baselines/reference/enumsWithMultipleDeclarations3.js"
          },
          {
            "path": "tests/baselines/reference/enumsWithMultipleDeclarations3.symbols"
          },
          {
            "path": "tests/baselines/reference/enumsWithMultipleDeclarations3.types"
          },
          {
            "path": "tests/baselines/reference/es5ExportEqualsDts.js"
          },
          {
            "path": "tests/baselines/reference/es5ExportEqualsDts.symbols"
          },
          {
            "path": "tests/baselines/reference/es5ExportEqualsDts.types"
          },
          {
            "path": "tests/baselines/reference/es5ModuleInternalNamedImports.errors.txt"
          },
          {
            "path": "tests/baselines/reference/es5ModuleInternalNamedImports.js"
          },
          {
            "path": "tests/baselines/reference/es5ModuleInternalNamedImports.symbols"
          },
          {
            "path": "tests/baselines/reference/es5ModuleInternalNamedImports.types"
          },
          {
            "path": "tests/baselines/reference/es6ClassTest.errors.txt"
          },
          {
            "path": "tests/baselines/reference/es6ClassTest.js"
          },
          {
            "path": "tests/baselines/reference/es6ClassTest.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ClassTest.types"
          },
          {
            "path": "tests/baselines/reference/es6ClassTest3.js"
          },
          {
            "path": "tests/baselines/reference/es6ClassTest3.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ClassTest3.types"
          },
          {
            "path": "tests/baselines/reference/es6ClassTest5.js"
          },
          {
            "path": "tests/baselines/reference/es6ClassTest5.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ClassTest5.types"
          },
          {
            "path": "tests/baselines/reference/es6ClassTest7.js"
          },
          {
            "path": "tests/baselines/reference/es6ClassTest7.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ClassTest7.types"
          },
          {
            "path": "tests/baselines/reference/es6ExportAll.js"
          },
          {
            "path": "tests/baselines/reference/es6ExportAll.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ExportAll.types"
          },
          {
            "path": "tests/baselines/reference/es6ExportAllInEs5.js"
          },
          {
            "path": "tests/baselines/reference/es6ExportAllInEs5.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ExportAllInEs5.types"
          },
          {
            "path": "tests/baselines/reference/es6ExportClause.js"
          },
          {
            "path": "tests/baselines/reference/es6ExportClause.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ExportClause.types"
          },
          {
            "path": "tests/baselines/reference/es6ExportClauseInEs5.js"
          },
          {
            "path": "tests/baselines/reference/es6ExportClauseInEs5.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ExportClauseInEs5.types"
          },
          {
            "path": "tests/baselines/reference/es6ExportClauseWithoutModuleSpecifier.js"
          },
          {
            "path": "tests/baselines/reference/es6ExportClauseWithoutModuleSpecifier.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ExportClauseWithoutModuleSpecifier.types"
          },
          {
            "path": "tests/baselines/reference/es6ExportClauseWithoutModuleSpecifierInEs5.js"
          },
          {
            "path": "tests/baselines/reference/es6ExportClauseWithoutModuleSpecifierInEs5.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ExportClauseWithoutModuleSpecifierInEs5.types"
          },
          {
            "path": "tests/baselines/reference/es6ExportEqualsInterop.errors.txt"
          },
          {
            "path": "tests/baselines/reference/es6ExportEqualsInterop.js"
          },
          {
            "path": "tests/baselines/reference/es6ExportEqualsInterop.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ExportEqualsInterop.types"
          },
          {
            "path": "tests/baselines/reference/es6ImportEqualsDeclaration2.js"
          },
          {
            "path": "tests/baselines/reference/es6ImportEqualsDeclaration2.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ImportEqualsDeclaration2.types"
          },
          {
            "path": "tests/baselines/reference/es6ImportNamedImportInIndirectExportAssignment.js"
          },
          {
            "path": "tests/baselines/reference/es6ImportNamedImportInIndirectExportAssignment.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ImportNamedImportInIndirectExportAssignment.types"
          },
          {
            "path": "tests/baselines/reference/es6ModuleClassDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/es6ModuleClassDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ModuleClassDeclaration.types"
          },
          {
            "path": "tests/baselines/reference/es6ModuleConst.js"
          },
          {
            "path": "tests/baselines/reference/es6ModuleConst.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ModuleConst.types"
          },
          {
            "path": "tests/baselines/reference/es6ModuleConstEnumDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/es6ModuleConstEnumDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ModuleConstEnumDeclaration.types"
          },
          {
            "path": "tests/baselines/reference/es6ModuleConstEnumDeclaration2.js"
          },
          {
            "path": "tests/baselines/reference/es6ModuleConstEnumDeclaration2.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ModuleConstEnumDeclaration2.types"
          },
          {
            "path": "tests/baselines/reference/es6ModuleEnumDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/es6ModuleEnumDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ModuleEnumDeclaration.types"
          },
          {
            "path": "tests/baselines/reference/es6ModuleFunctionDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/es6ModuleFunctionDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ModuleFunctionDeclaration.types"
          },
          {
            "path": "tests/baselines/reference/es6ModuleInternalImport.js"
          },
          {
            "path": "tests/baselines/reference/es6ModuleInternalImport.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ModuleInternalImport.types"
          },
          {
            "path": "tests/baselines/reference/es6ModuleInternalNamedImports.errors.txt"
          },
          {
            "path": "tests/baselines/reference/es6ModuleInternalNamedImports.js"
          },
          {
            "path": "tests/baselines/reference/es6ModuleInternalNamedImports.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ModuleInternalNamedImports.types"
          },
          {
            "path": "tests/baselines/reference/es6ModuleInternalNamedImports2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/es6ModuleInternalNamedImports2.js"
          },
          {
            "path": "tests/baselines/reference/es6ModuleInternalNamedImports2.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ModuleInternalNamedImports2.types"
          },
          {
            "path": "tests/baselines/reference/es6ModuleLet.js"
          },
          {
            "path": "tests/baselines/reference/es6ModuleLet.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ModuleLet.types"
          },
          {
            "path": "tests/baselines/reference/es6ModuleModuleDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/es6ModuleModuleDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ModuleModuleDeclaration.types"
          },
          {
            "path": "tests/baselines/reference/es6ModuleVariableStatement.js"
          },
          {
            "path": "tests/baselines/reference/es6ModuleVariableStatement.symbols"
          },
          {
            "path": "tests/baselines/reference/es6ModuleVariableStatement.types"
          },
          {
            "path": "tests/baselines/reference/escapedIdentifiers.js"
          },
          {
            "path": "tests/baselines/reference/escapedIdentifiers.symbols"
          },
          {
            "path": "tests/baselines/reference/escapedIdentifiers.types"
          },
          {
            "path": "tests/baselines/reference/everyTypeWithAnnotationAndInitializer.js"
          },
          {
            "path": "tests/baselines/reference/everyTypeWithAnnotationAndInitializer.symbols"
          },
          {
            "path": "tests/baselines/reference/everyTypeWithAnnotationAndInitializer.types"
          },
          {
            "path": "tests/baselines/reference/everyTypeWithAnnotationAndInvalidInitializer.errors.txt"
          },
          {
            "path": "tests/baselines/reference/everyTypeWithAnnotationAndInvalidInitializer.js"
          },
          {
            "path": "tests/baselines/reference/everyTypeWithAnnotationAndInvalidInitializer.symbols"
          },
          {
            "path": "tests/baselines/reference/everyTypeWithAnnotationAndInvalidInitializer.types"
          },
          {
            "path": "tests/baselines/reference/everyTypeWithInitializer.js"
          },
          {
            "path": "tests/baselines/reference/everyTypeWithInitializer.symbols"
          },
          {
            "path": "tests/baselines/reference/everyTypeWithInitializer.types"
          },
          {
            "path": "tests/baselines/reference/exportAlreadySeen.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportAlreadySeen.js"
          },
          {
            "path": "tests/baselines/reference/exportAlreadySeen.symbols"
          },
          {
            "path": "tests/baselines/reference/exportAlreadySeen.types"
          },
          {
            "path": "tests/baselines/reference/exportAssignClassAndModule.js"
          },
          {
            "path": "tests/baselines/reference/exportAssignClassAndModule.symbols"
          },
          {
            "path": "tests/baselines/reference/exportAssignClassAndModule.types"
          },
          {
            "path": "tests/baselines/reference/exportAssignValueAndType.js"
          },
          {
            "path": "tests/baselines/reference/exportAssignValueAndType.symbols"
          },
          {
            "path": "tests/baselines/reference/exportAssignValueAndType.types"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentCircularModules.js"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentCircularModules.symbols"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentCircularModules.types"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentError.js"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentError.symbols"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentError.types"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentInternalModule.js"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentInternalModule.symbols"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentInternalModule.types"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentMergedModule.js"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentMergedModule.symbols"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentMergedModule.types"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentTopLevelClodule.js"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentTopLevelClodule.symbols"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentTopLevelClodule.types"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentTopLevelEnumdule.js"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentTopLevelEnumdule.symbols"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentTopLevelEnumdule.types"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentTopLevelFundule.js"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentTopLevelFundule.symbols"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentTopLevelFundule.types"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentTopLevelIdentifier.js"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentTopLevelIdentifier.symbols"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentTopLevelIdentifier.types"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentWithImportStatementPrivacyError.js"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentWithImportStatementPrivacyError.symbols"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentWithImportStatementPrivacyError.types"
          },
          {
            "path": "tests/baselines/reference/exportCodeGen.js"
          },
          {
            "path": "tests/baselines/reference/exportCodeGen.symbols"
          },
          {
            "path": "tests/baselines/reference/exportCodeGen.types"
          },
          {
            "path": "tests/baselines/reference/exportDeclarationInInternalModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportDeclarationInInternalModule.js"
          },
          {
            "path": "tests/baselines/reference/exportDeclarationInInternalModule.symbols"
          },
          {
            "path": "tests/baselines/reference/exportDeclarationInInternalModule.types"
          },
          {
            "path": "tests/baselines/reference/exportDeclaredModule.js"
          },
          {
            "path": "tests/baselines/reference/exportDeclaredModule.symbols"
          },
          {
            "path": "tests/baselines/reference/exportDeclaredModule.types"
          },
          {
            "path": "tests/baselines/reference/exportDefaultForNonInstantiatedModule.js"
          },
          {
            "path": "tests/baselines/reference/exportDefaultForNonInstantiatedModule.symbols"
          },
          {
            "path": "tests/baselines/reference/exportDefaultForNonInstantiatedModule.types"
          },
          {
            "path": "tests/baselines/reference/exportEqualErrorType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportEqualErrorType.js"
          },
          {
            "path": "tests/baselines/reference/exportEqualErrorType.symbols"
          },
          {
            "path": "tests/baselines/reference/exportEqualErrorType.types"
          },
          {
            "path": "tests/baselines/reference/exportEqualMemberMissing.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportEqualMemberMissing.js"
          },
          {
            "path": "tests/baselines/reference/exportEqualMemberMissing.symbols"
          },
          {
            "path": "tests/baselines/reference/exportEqualMemberMissing.types"
          },
          {
            "path": "tests/baselines/reference/exportEqualNamespaces.js"
          },
          {
            "path": "tests/baselines/reference/exportEqualNamespaces.symbols"
          },
          {
            "path": "tests/baselines/reference/exportEqualNamespaces.types"
          },
          {
            "path": "tests/baselines/reference/exportImportAlias.js"
          },
          {
            "path": "tests/baselines/reference/exportImportAlias.symbols"
          },
          {
            "path": "tests/baselines/reference/exportImportAlias.types"
          },
          {
            "path": "tests/baselines/reference/exportImportAndClodule.js"
          },
          {
            "path": "tests/baselines/reference/exportImportAndClodule.symbols"
          },
          {
            "path": "tests/baselines/reference/exportImportAndClodule.types"
          },
          {
            "path": "tests/baselines/reference/exportImportCanSubstituteConstEnumForValue.js"
          },
          {
            "path": "tests/baselines/reference/exportImportCanSubstituteConstEnumForValue.symbols"
          },
          {
            "path": "tests/baselines/reference/exportImportCanSubstituteConstEnumForValue.types"
          },
          {
            "path": "tests/baselines/reference/exportImportNonInstantiatedModule.js"
          },
          {
            "path": "tests/baselines/reference/exportImportNonInstantiatedModule.symbols"
          },
          {
            "path": "tests/baselines/reference/exportImportNonInstantiatedModule.types"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesAMD.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesAMD.js"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesAMD.symbols"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesAMD.types"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesCommonJS.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesCommonJS.js"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesCommonJS.symbols"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesCommonJS.types"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesES6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesES6.js"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesES6.symbols"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesES6.types"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesSystem.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesSystem.js"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesSystem.symbols"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesSystem.types"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesUMD.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesUMD.js"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesUMD.symbols"
          },
          {
            "path": "tests/baselines/reference/exportNonInitializedVariablesUMD.types"
          },
          {
            "path": "tests/baselines/reference/exportPrivateType.js"
          },
          {
            "path": "tests/baselines/reference/exportPrivateType.symbols"
          },
          {
            "path": "tests/baselines/reference/exportPrivateType.types"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierAndExportedMemberDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierAndExportedMemberDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierAndExportedMemberDeclaration.types"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierAndLocalMemberDeclaration.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierAndLocalMemberDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierAndLocalMemberDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierAndLocalMemberDeclaration.types"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierReferencingOuterDeclaration1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierReferencingOuterDeclaration1.js"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierReferencingOuterDeclaration1.symbols"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierReferencingOuterDeclaration1.types"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierReferencingOuterDeclaration2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierReferencingOuterDeclaration2.js"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierReferencingOuterDeclaration2.symbols"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierReferencingOuterDeclaration2.types"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierReferencingOuterDeclaration3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierReferencingOuterDeclaration3.js"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierReferencingOuterDeclaration3.symbols"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierReferencingOuterDeclaration3.types"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierReferencingOuterDeclaration4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierReferencingOuterDeclaration4.js"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierReferencingOuterDeclaration4.symbols"
          },
          {
            "path": "tests/baselines/reference/exportSpecifierReferencingOuterDeclaration4.types"
          },
          {
            "path": "tests/baselines/reference/exportsAndImports1-amd.js"
          },
          {
            "path": "tests/baselines/reference/exportsAndImports1-amd.symbols"
          },
          {
            "path": "tests/baselines/reference/exportsAndImports1-amd.types"
          },
          {
            "path": "tests/baselines/reference/exportsAndImports1-es6.js"
          },
          {
            "path": "tests/baselines/reference/exportsAndImports1-es6.symbols"
          },
          {
            "path": "tests/baselines/reference/exportsAndImports1-es6.types"
          },
          {
            "path": "tests/baselines/reference/exportsAndImports1.js"
          },
          {
            "path": "tests/baselines/reference/exportsAndImports1.symbols"
          },
          {
            "path": "tests/baselines/reference/exportsAndImports1.types"
          },
          {
            "path": "tests/baselines/reference/exportsAndImports3-amd.js"
          },
          {
            "path": "tests/baselines/reference/exportsAndImports3-amd.symbols"
          },
          {
            "path": "tests/baselines/reference/exportsAndImports3-amd.types"
          },
          {
            "path": "tests/baselines/reference/exportsAndImports3-es6.js"
          },
          {
            "path": "tests/baselines/reference/exportsAndImports3-es6.symbols"
          },
          {
            "path": "tests/baselines/reference/exportsAndImports3-es6.types"
          },
          {
            "path": "tests/baselines/reference/exportsAndImports3.js"
          },
          {
            "path": "tests/baselines/reference/exportsAndImports3.symbols"
          },
          {
            "path": "tests/baselines/reference/exportsAndImports3.types"
          },
          {
            "path": "tests/baselines/reference/extBaseClass1.js"
          },
          {
            "path": "tests/baselines/reference/extBaseClass1.symbols"
          },
          {
            "path": "tests/baselines/reference/extBaseClass1.types"
          },
          {
            "path": "tests/baselines/reference/extBaseClass2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/extBaseClass2.js"
          },
          {
            "path": "tests/baselines/reference/extBaseClass2.symbols"
          },
          {
            "path": "tests/baselines/reference/extBaseClass2.types"
          },
          {
            "path": "tests/baselines/reference/extendArray.errors.txt"
          },
          {
            "path": "tests/baselines/reference/extendArray.js"
          },
          {
            "path": "tests/baselines/reference/extendArray.symbols"
          },
          {
            "path": "tests/baselines/reference/extendArray.types"
          },
          {
            "path": "tests/baselines/reference/extension.errors.txt"
          },
          {
            "path": "tests/baselines/reference/extension.js"
          },
          {
            "path": "tests/baselines/reference/extension.symbols"
          },
          {
            "path": "tests/baselines/reference/extension.types"
          },
          {
            "path": "tests/baselines/reference/externModuleClobber.js"
          },
          {
            "path": "tests/baselines/reference/externModuleClobber.symbols"
          },
          {
            "path": "tests/baselines/reference/externModuleClobber.types"
          },
          {
            "path": "tests/baselines/reference/externSyntax.errors.txt"
          },
          {
            "path": "tests/baselines/reference/externSyntax.js"
          },
          {
            "path": "tests/baselines/reference/externSyntax.symbols"
          },
          {
            "path": "tests/baselines/reference/externSyntax.types"
          },
          {
            "path": "tests/baselines/reference/externalModuleResolution.js"
          },
          {
            "path": "tests/baselines/reference/externalModuleResolution.symbols"
          },
          {
            "path": "tests/baselines/reference/externalModuleResolution.types"
          },
          {
            "path": "tests/baselines/reference/externalModuleResolution2.js"
          },
          {
            "path": "tests/baselines/reference/externalModuleResolution2.symbols"
          },
          {
            "path": "tests/baselines/reference/externalModuleResolution2.types"
          },
          {
            "path": "tests/baselines/reference/externalModuleWithoutCompilerFlag1.js"
          },
          {
            "path": "tests/baselines/reference/externalModuleWithoutCompilerFlag1.symbols"
          },
          {
            "path": "tests/baselines/reference/externalModuleWithoutCompilerFlag1.types"
          },
          {
            "path": "tests/baselines/reference/fatArrowSelf.js"
          },
          {
            "path": "tests/baselines/reference/fatArrowSelf.symbols"
          },
          {
            "path": "tests/baselines/reference/fatArrowSelf.types"
          },
          {
            "path": "tests/baselines/reference/findAllRefsWithShorthandPropertyAssignment2.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/for-inStatements.errors.txt"
          },
          {
            "path": "tests/baselines/reference/for-inStatements.js"
          },
          {
            "path": "tests/baselines/reference/for-inStatements.symbols"
          },
          {
            "path": "tests/baselines/reference/for-inStatements.types"
          },
          {
            "path": "tests/baselines/reference/forInModule.js"
          },
          {
            "path": "tests/baselines/reference/forInModule.symbols"
          },
          {
            "path": "tests/baselines/reference/forInModule.types"
          },
          {
            "path": "tests/baselines/reference/forStatements.js"
          },
          {
            "path": "tests/baselines/reference/forStatements.symbols"
          },
          {
            "path": "tests/baselines/reference/forStatements.types"
          },
          {
            "path": "tests/baselines/reference/forStatementsMultipleInvalidDecl.errors.txt"
          },
          {
            "path": "tests/baselines/reference/forStatementsMultipleInvalidDecl.js"
          },
          {
            "path": "tests/baselines/reference/forStatementsMultipleInvalidDecl.symbols"
          },
          {
            "path": "tests/baselines/reference/forStatementsMultipleInvalidDecl.types"
          },
          {
            "path": "tests/baselines/reference/forgottenNew.errors.txt"
          },
          {
            "path": "tests/baselines/reference/forgottenNew.js"
          },
          {
            "path": "tests/baselines/reference/forgottenNew.symbols"
          },
          {
            "path": "tests/baselines/reference/forgottenNew.types"
          },
          {
            "path": "tests/baselines/reference/funClodule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/funClodule.js"
          },
          {
            "path": "tests/baselines/reference/funClodule.symbols"
          },
          {
            "path": "tests/baselines/reference/funClodule.types"
          },
          {
            "path": "tests/baselines/reference/funcdecl.js"
          },
          {
            "path": "tests/baselines/reference/funcdecl.symbols"
          },
          {
            "path": "tests/baselines/reference/funcdecl.types"
          },
          {
            "path": "tests/baselines/reference/functionCall5.js"
          },
          {
            "path": "tests/baselines/reference/functionCall5.symbols"
          },
          {
            "path": "tests/baselines/reference/functionCall5.types"
          },
          {
            "path": "tests/baselines/reference/functionCall7.errors.txt"
          },
          {
            "path": "tests/baselines/reference/functionCall7.js"
          },
          {
            "path": "tests/baselines/reference/functionCall7.symbols"
          },
          {
            "path": "tests/baselines/reference/functionCall7.types"
          },
          {
            "path": "tests/baselines/reference/functionMergedWithModule.js"
          },
          {
            "path": "tests/baselines/reference/functionMergedWithModule.symbols"
          },
          {
            "path": "tests/baselines/reference/functionMergedWithModule.types"
          },
          {
            "path": "tests/baselines/reference/functionNameConflicts.errors.txt"
          },
          {
            "path": "tests/baselines/reference/functionNameConflicts.js"
          },
          {
            "path": "tests/baselines/reference/functionNameConflicts.symbols"
          },
          {
            "path": "tests/baselines/reference/functionNameConflicts.types"
          },
          {
            "path": "tests/baselines/reference/functionOverloadErrors.errors.txt"
          },
          {
            "path": "tests/baselines/reference/functionOverloadErrors.js"
          },
          {
            "path": "tests/baselines/reference/functionOverloadErrors.symbols"
          },
          {
            "path": "tests/baselines/reference/functionOverloadErrors.types"
          },
          {
            "path": "tests/baselines/reference/functionTypeArgumentArrayAssignment.js"
          },
          {
            "path": "tests/baselines/reference/functionTypeArgumentArrayAssignment.symbols"
          },
          {
            "path": "tests/baselines/reference/functionTypeArgumentArrayAssignment.types"
          },
          {
            "path": "tests/baselines/reference/funduleExportedClassIsUsedBeforeDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/funduleExportedClassIsUsedBeforeDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/funduleExportedClassIsUsedBeforeDeclaration.types"
          },
          {
            "path": "tests/baselines/reference/funduleOfFunctionWithoutReturnTypeAnnotation.js"
          },
          {
            "path": "tests/baselines/reference/funduleOfFunctionWithoutReturnTypeAnnotation.symbols"
          },
          {
            "path": "tests/baselines/reference/funduleOfFunctionWithoutReturnTypeAnnotation.types"
          },
          {
            "path": "tests/baselines/reference/funduleSplitAcrossFiles.errors.txt"
          },
          {
            "path": "tests/baselines/reference/funduleSplitAcrossFiles.js"
          },
          {
            "path": "tests/baselines/reference/funduleSplitAcrossFiles.symbols"
          },
          {
            "path": "tests/baselines/reference/funduleSplitAcrossFiles.types"
          },
          {
            "path": "tests/baselines/reference/funduleUsedAcrossFileBoundary.js"
          },
          {
            "path": "tests/baselines/reference/funduleUsedAcrossFileBoundary.symbols"
          },
          {
            "path": "tests/baselines/reference/funduleUsedAcrossFileBoundary.types"
          },
          {
            "path": "tests/baselines/reference/fuzzy.errors.txt"
          },
          {
            "path": "tests/baselines/reference/fuzzy.js"
          },
          {
            "path": "tests/baselines/reference/fuzzy.symbols"
          },
          {
            "path": "tests/baselines/reference/fuzzy.types"
          },
          {
            "path": "tests/baselines/reference/generatedContextualTyping.errors.txt"
          },
          {
            "path": "tests/baselines/reference/generatedContextualTyping.js"
          },
          {
            "path": "tests/baselines/reference/generatedContextualTyping.symbols"
          },
          {
            "path": "tests/baselines/reference/generatedContextualTyping.types"
          },
          {
            "path": "tests/baselines/reference/generativeRecursionWithTypeOf.js"
          },
          {
            "path": "tests/baselines/reference/generativeRecursionWithTypeOf.symbols"
          },
          {
            "path": "tests/baselines/reference/generativeRecursionWithTypeOf.types"
          },
          {
            "path": "tests/baselines/reference/generatorInAmbientContext2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/generatorInAmbientContext2.js"
          },
          {
            "path": "tests/baselines/reference/generatorInAmbientContext2.symbols"
          },
          {
            "path": "tests/baselines/reference/generatorInAmbientContext2.types"
          },
          {
            "path": "tests/baselines/reference/generatorInAmbientContext4.d.errors.txt"
          },
          {
            "path": "tests/baselines/reference/generatorInAmbientContext4.d.symbols"
          },
          {
            "path": "tests/baselines/reference/generatorInAmbientContext4.d.types"
          },
          {
            "path": "tests/baselines/reference/generatorInAmbientContext6.js"
          },
          {
            "path": "tests/baselines/reference/generatorInAmbientContext6.symbols"
          },
          {
            "path": "tests/baselines/reference/generatorInAmbientContext6.types"
          },
          {
            "path": "tests/baselines/reference/generatorOverloads1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/generatorOverloads1.js"
          },
          {
            "path": "tests/baselines/reference/generatorOverloads1.symbols"
          },
          {
            "path": "tests/baselines/reference/generatorOverloads1.types"
          },
          {
            "path": "tests/baselines/reference/generatorOverloads2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/generatorOverloads2.js"
          },
          {
            "path": "tests/baselines/reference/generatorOverloads2.symbols"
          },
          {
            "path": "tests/baselines/reference/generatorOverloads2.types"
          },
          {
            "path": "tests/baselines/reference/generatorOverloads5.js"
          },
          {
            "path": "tests/baselines/reference/generatorOverloads5.symbols"
          },
          {
            "path": "tests/baselines/reference/generatorOverloads5.types"
          },
          {
            "path": "tests/baselines/reference/genericAndNonGenericInterfaceWithTheSameName.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericAndNonGenericInterfaceWithTheSameName.js"
          },
          {
            "path": "tests/baselines/reference/genericAndNonGenericInterfaceWithTheSameName.symbols"
          },
          {
            "path": "tests/baselines/reference/genericAndNonGenericInterfaceWithTheSameName.types"
          },
          {
            "path": "tests/baselines/reference/genericAndNonGenericInterfaceWithTheSameName2.js"
          },
          {
            "path": "tests/baselines/reference/genericAndNonGenericInterfaceWithTheSameName2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericAndNonGenericInterfaceWithTheSameName2.types"
          },
          {
            "path": "tests/baselines/reference/genericArgumentCallSigAssignmentCompat.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericArgumentCallSigAssignmentCompat.js"
          },
          {
            "path": "tests/baselines/reference/genericArgumentCallSigAssignmentCompat.symbols"
          },
          {
            "path": "tests/baselines/reference/genericArgumentCallSigAssignmentCompat.types"
          },
          {
            "path": "tests/baselines/reference/genericCallToOverloadedMethodWithOverloadedArguments.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericCallToOverloadedMethodWithOverloadedArguments.js"
          },
          {
            "path": "tests/baselines/reference/genericCallToOverloadedMethodWithOverloadedArguments.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallToOverloadedMethodWithOverloadedArguments.types"
          },
          {
            "path": "tests/baselines/reference/genericCallWithGenericSignatureArguments2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericCallWithGenericSignatureArguments2.js"
          },
          {
            "path": "tests/baselines/reference/genericCallWithGenericSignatureArguments2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallWithGenericSignatureArguments2.types"
          },
          {
            "path": "tests/baselines/reference/genericCallWithOverloadedConstructorTypedArguments.js"
          },
          {
            "path": "tests/baselines/reference/genericCallWithOverloadedConstructorTypedArguments.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallWithOverloadedConstructorTypedArguments.types"
          },
          {
            "path": "tests/baselines/reference/genericCallWithOverloadedConstructorTypedArguments2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericCallWithOverloadedConstructorTypedArguments2.js"
          },
          {
            "path": "tests/baselines/reference/genericCallWithOverloadedConstructorTypedArguments2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallWithOverloadedConstructorTypedArguments2.types"
          },
          {
            "path": "tests/baselines/reference/genericCallWithOverloadedFunctionTypedArguments.js"
          },
          {
            "path": "tests/baselines/reference/genericCallWithOverloadedFunctionTypedArguments.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallWithOverloadedFunctionTypedArguments.types"
          },
          {
            "path": "tests/baselines/reference/genericCallWithOverloadedFunctionTypedArguments2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericCallWithOverloadedFunctionTypedArguments2.js"
          },
          {
            "path": "tests/baselines/reference/genericCallWithOverloadedFunctionTypedArguments2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallWithOverloadedFunctionTypedArguments2.types"
          },
          {
            "path": "tests/baselines/reference/genericCallbacksAndClassHierarchy.js"
          },
          {
            "path": "tests/baselines/reference/genericCallbacksAndClassHierarchy.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallbacksAndClassHierarchy.types"
          },
          {
            "path": "tests/baselines/reference/genericClassImplementingGenericInterfaceFromAnotherModule.js"
          },
          {
            "path": "tests/baselines/reference/genericClassImplementingGenericInterfaceFromAnotherModule.symbols"
          },
          {
            "path": "tests/baselines/reference/genericClassImplementingGenericInterfaceFromAnotherModule.types"
          },
          {
            "path": "tests/baselines/reference/genericClassPropertyInheritanceSpecialization.js"
          },
          {
            "path": "tests/baselines/reference/genericClassPropertyInheritanceSpecialization.symbols"
          },
          {
            "path": "tests/baselines/reference/genericClassPropertyInheritanceSpecialization.types"
          },
          {
            "path": "tests/baselines/reference/genericClassWithFunctionTypedMemberArguments.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericClassWithFunctionTypedMemberArguments.js"
          },
          {
            "path": "tests/baselines/reference/genericClassWithFunctionTypedMemberArguments.symbols"
          },
          {
            "path": "tests/baselines/reference/genericClassWithFunctionTypedMemberArguments.types"
          },
          {
            "path": "tests/baselines/reference/genericClassWithObjectTypeArgsAndConstraints.js"
          },
          {
            "path": "tests/baselines/reference/genericClassWithObjectTypeArgsAndConstraints.symbols"
          },
          {
            "path": "tests/baselines/reference/genericClassWithObjectTypeArgsAndConstraints.types"
          },
          {
            "path": "tests/baselines/reference/genericClassWithStaticFactory.js"
          },
          {
            "path": "tests/baselines/reference/genericClassWithStaticFactory.symbols"
          },
          {
            "path": "tests/baselines/reference/genericClassWithStaticFactory.types"
          },
          {
            "path": "tests/baselines/reference/genericClassesInModule.js"
          },
          {
            "path": "tests/baselines/reference/genericClassesInModule.symbols"
          },
          {
            "path": "tests/baselines/reference/genericClassesInModule.types"
          },
          {
            "path": "tests/baselines/reference/genericClassesRedeclaration.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericClassesRedeclaration.js"
          },
          {
            "path": "tests/baselines/reference/genericClassesRedeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/genericClassesRedeclaration.types"
          },
          {
            "path": "tests/baselines/reference/genericCloduleInModule.js"
          },
          {
            "path": "tests/baselines/reference/genericCloduleInModule.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCloduleInModule.types"
          },
          {
            "path": "tests/baselines/reference/genericCloduleInModule2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericCloduleInModule2.js"
          },
          {
            "path": "tests/baselines/reference/genericCloduleInModule2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCloduleInModule2.types"
          },
          {
            "path": "tests/baselines/reference/genericConstraintOnExtendedBuiltinTypes.js"
          },
          {
            "path": "tests/baselines/reference/genericConstraintOnExtendedBuiltinTypes.symbols"
          },
          {
            "path": "tests/baselines/reference/genericConstraintOnExtendedBuiltinTypes.types"
          },
          {
            "path": "tests/baselines/reference/genericConstraintOnExtendedBuiltinTypes2.js"
          },
          {
            "path": "tests/baselines/reference/genericConstraintOnExtendedBuiltinTypes2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericConstraintOnExtendedBuiltinTypes2.types"
          },
          {
            "path": "tests/baselines/reference/genericFunduleInModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericFunduleInModule.js"
          },
          {
            "path": "tests/baselines/reference/genericFunduleInModule.symbols"
          },
          {
            "path": "tests/baselines/reference/genericFunduleInModule.types"
          },
          {
            "path": "tests/baselines/reference/genericFunduleInModule2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericFunduleInModule2.js"
          },
          {
            "path": "tests/baselines/reference/genericFunduleInModule2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericFunduleInModule2.types"
          },
          {
            "path": "tests/baselines/reference/genericInference2.js"
          },
          {
            "path": "tests/baselines/reference/genericInference2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericInference2.types"
          },
          {
            "path": "tests/baselines/reference/genericMergedDeclarationUsingTypeParameter.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericMergedDeclarationUsingTypeParameter.js"
          },
          {
            "path": "tests/baselines/reference/genericMergedDeclarationUsingTypeParameter.symbols"
          },
          {
            "path": "tests/baselines/reference/genericMergedDeclarationUsingTypeParameter.types"
          },
          {
            "path": "tests/baselines/reference/genericMergedDeclarationUsingTypeParameter2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericMergedDeclarationUsingTypeParameter2.js"
          },
          {
            "path": "tests/baselines/reference/genericMergedDeclarationUsingTypeParameter2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericMergedDeclarationUsingTypeParameter2.types"
          },
          {
            "path": "tests/baselines/reference/genericOfACloduleType1.js"
          },
          {
            "path": "tests/baselines/reference/genericOfACloduleType1.symbols"
          },
          {
            "path": "tests/baselines/reference/genericOfACloduleType1.types"
          },
          {
            "path": "tests/baselines/reference/genericOfACloduleType2.js"
          },
          {
            "path": "tests/baselines/reference/genericOfACloduleType2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericOfACloduleType2.types"
          },
          {
            "path": "tests/baselines/reference/genericRecursiveImplicitConstructorErrors1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericRecursiveImplicitConstructorErrors1.js"
          },
          {
            "path": "tests/baselines/reference/genericRecursiveImplicitConstructorErrors1.symbols"
          },
          {
            "path": "tests/baselines/reference/genericRecursiveImplicitConstructorErrors1.types"
          },
          {
            "path": "tests/baselines/reference/genericRecursiveImplicitConstructorErrors2.js"
          },
          {
            "path": "tests/baselines/reference/genericRecursiveImplicitConstructorErrors2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericRecursiveImplicitConstructorErrors2.types"
          },
          {
            "path": "tests/baselines/reference/genericRecursiveImplicitConstructorErrors3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericRecursiveImplicitConstructorErrors3.js"
          },
          {
            "path": "tests/baselines/reference/genericRecursiveImplicitConstructorErrors3.symbols"
          },
          {
            "path": "tests/baselines/reference/genericRecursiveImplicitConstructorErrors3.types"
          },
          {
            "path": "tests/baselines/reference/genericSetterInClassType.js"
          },
          {
            "path": "tests/baselines/reference/genericSetterInClassType.symbols"
          },
          {
            "path": "tests/baselines/reference/genericSetterInClassType.types"
          },
          {
            "path": "tests/baselines/reference/genericTypeArgumentInference1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericTypeArgumentInference1.js"
          },
          {
            "path": "tests/baselines/reference/genericTypeArgumentInference1.symbols"
          },
          {
            "path": "tests/baselines/reference/genericTypeArgumentInference1.types"
          },
          {
            "path": "tests/baselines/reference/genericTypeReferenceWithoutTypeArgument.d.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericTypeReferenceWithoutTypeArgument.d.symbols"
          },
          {
            "path": "tests/baselines/reference/genericTypeReferenceWithoutTypeArgument.d.types"
          },
          {
            "path": "tests/baselines/reference/genericTypeReferenceWithoutTypeArgument.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericTypeReferenceWithoutTypeArgument.js"
          },
          {
            "path": "tests/baselines/reference/genericTypeReferenceWithoutTypeArgument.symbols"
          },
          {
            "path": "tests/baselines/reference/genericTypeReferenceWithoutTypeArgument.types"
          },
          {
            "path": "tests/baselines/reference/genericTypeReferenceWithoutTypeArgument2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericTypeReferenceWithoutTypeArgument2.js"
          },
          {
            "path": "tests/baselines/reference/genericTypeReferenceWithoutTypeArgument2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericTypeReferenceWithoutTypeArgument2.types"
          },
          {
            "path": "tests/baselines/reference/genericTypeReferenceWithoutTypeArgument3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericTypeReferenceWithoutTypeArgument3.js"
          },
          {
            "path": "tests/baselines/reference/genericTypeReferenceWithoutTypeArgument3.symbols"
          },
          {
            "path": "tests/baselines/reference/genericTypeReferenceWithoutTypeArgument3.types"
          },
          {
            "path": "tests/baselines/reference/getAccessorWithImpliedReturnTypeAndFunctionClassMerge.js"
          },
          {
            "path": "tests/baselines/reference/getAccessorWithImpliedReturnTypeAndFunctionClassMerge.symbols"
          },
          {
            "path": "tests/baselines/reference/getAccessorWithImpliedReturnTypeAndFunctionClassMerge.types"
          },
          {
            "path": "tests/baselines/reference/getJavaScriptSyntacticDiagnostics7.baseline"
          },
          {
            "path": "tests/baselines/reference/getOccurrencesConst02.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/getOccurrencesConst03.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/getOccurrencesDeclare1.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/getOccurrencesDeclare2.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/getOccurrencesDeclare3.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/getOccurrencesExport1.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/getOccurrencesExport2.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/getOccurrencesExport3.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/getOccurrencesModifiersNegatives1.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/getOccurrencesPrivate1.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/getOccurrencesPropertyInAliasedInterface.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/getOccurrencesPublic1.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/getOccurrencesSuperNegatives.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/getOccurrencesThis6.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/giant.errors.txt"
          },
          {
            "path": "tests/baselines/reference/giant.js"
          },
          {
            "path": "tests/baselines/reference/giant.symbols"
          },
          {
            "path": "tests/baselines/reference/giant.types"
          },
          {
            "path": "tests/baselines/reference/global.js"
          },
          {
            "path": "tests/baselines/reference/global.symbols"
          },
          {
            "path": "tests/baselines/reference/global.types"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionAlias.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionImportedNames.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionImportedNames2.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionImportedNames3.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionImportedNames4.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionImportedNames5.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionImportedNames6.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionPartialImplementation.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionShadowVariableInsideModule.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToImplementationNamespace_02.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToImplementationNamespace_04.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToTypeDefinitionUnionType.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/heterogeneousArrayLiterals.js"
          },
          {
            "path": "tests/baselines/reference/heterogeneousArrayLiterals.symbols"
          },
          {
            "path": "tests/baselines/reference/heterogeneousArrayLiterals.types"
          },
          {
            "path": "tests/baselines/reference/ifDoWhileStatements.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ifDoWhileStatements.js"
          },
          {
            "path": "tests/baselines/reference/ifDoWhileStatements.symbols"
          },
          {
            "path": "tests/baselines/reference/ifDoWhileStatements.types"
          },
          {
            "path": "tests/baselines/reference/implementingAnInterfaceExtendingClassWithPrivates2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/implementingAnInterfaceExtendingClassWithPrivates2.js"
          },
          {
            "path": "tests/baselines/reference/implementingAnInterfaceExtendingClassWithPrivates2.symbols"
          },
          {
            "path": "tests/baselines/reference/implementingAnInterfaceExtendingClassWithPrivates2.types"
          },
          {
            "path": "tests/baselines/reference/implicitAnyAmbients.errors.txt"
          },
          {
            "path": "tests/baselines/reference/implicitAnyAmbients.js"
          },
          {
            "path": "tests/baselines/reference/implicitAnyAmbients.symbols"
          },
          {
            "path": "tests/baselines/reference/implicitAnyAmbients.types"
          },
          {
            "path": "tests/baselines/reference/implicitAnyInAmbientDeclaration.errors.txt"
          },
          {
            "path": "tests/baselines/reference/implicitAnyInAmbientDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/implicitAnyInAmbientDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/implicitAnyInAmbientDeclaration.types"
          },
          {
            "path": "tests/baselines/reference/importAliasAnExternalModuleInsideAnInternalModule.js"
          },
          {
            "path": "tests/baselines/reference/importAliasAnExternalModuleInsideAnInternalModule.symbols"
          },
          {
            "path": "tests/baselines/reference/importAliasAnExternalModuleInsideAnInternalModule.types"
          },
          {
            "path": "tests/baselines/reference/importAliasIdentifiers.js"
          },
          {
            "path": "tests/baselines/reference/importAliasIdentifiers.symbols"
          },
          {
            "path": "tests/baselines/reference/importAliasIdentifiers.types"
          },
          {
            "path": "tests/baselines/reference/importAliasWithDottedName.js"
          },
          {
            "path": "tests/baselines/reference/importAliasWithDottedName.symbols"
          },
          {
            "path": "tests/baselines/reference/importAliasWithDottedName.types"
          },
          {
            "path": "tests/baselines/reference/importAnImport.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAnImport.js"
          },
          {
            "path": "tests/baselines/reference/importAnImport.symbols"
          },
          {
            "path": "tests/baselines/reference/importAnImport.types"
          },
          {
            "path": "tests/baselines/reference/importAndVariableDeclarationConflict1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAndVariableDeclarationConflict1.js"
          },
          {
            "path": "tests/baselines/reference/importAndVariableDeclarationConflict1.symbols"
          },
          {
            "path": "tests/baselines/reference/importAndVariableDeclarationConflict1.types"
          },
          {
            "path": "tests/baselines/reference/importAndVariableDeclarationConflict2.js"
          },
          {
            "path": "tests/baselines/reference/importAndVariableDeclarationConflict2.symbols"
          },
          {
            "path": "tests/baselines/reference/importAndVariableDeclarationConflict2.types"
          },
          {
            "path": "tests/baselines/reference/importAndVariableDeclarationConflict3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAndVariableDeclarationConflict3.js"
          },
          {
            "path": "tests/baselines/reference/importAndVariableDeclarationConflict3.symbols"
          },
          {
            "path": "tests/baselines/reference/importAndVariableDeclarationConflict3.types"
          },
          {
            "path": "tests/baselines/reference/importAndVariableDeclarationConflict4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAndVariableDeclarationConflict4.js"
          },
          {
            "path": "tests/baselines/reference/importAndVariableDeclarationConflict4.symbols"
          },
          {
            "path": "tests/baselines/reference/importAndVariableDeclarationConflict4.types"
          },
          {
            "path": "tests/baselines/reference/importDecl.js"
          },
          {
            "path": "tests/baselines/reference/importDecl.symbols"
          },
          {
            "path": "tests/baselines/reference/importDecl.types"
          },
          {
            "path": "tests/baselines/reference/importDeclWithClassModifiers.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeclWithClassModifiers.js"
          },
          {
            "path": "tests/baselines/reference/importDeclWithClassModifiers.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeclWithClassModifiers.types"
          },
          {
            "path": "tests/baselines/reference/importDeclWithDeclareModifier.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeclWithDeclareModifier.js"
          },
          {
            "path": "tests/baselines/reference/importDeclWithDeclareModifier.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeclWithDeclareModifier.types"
          },
          {
            "path": "tests/baselines/reference/importDeclWithDeclareModifierInAmbientContext.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeclWithDeclareModifierInAmbientContext.js"
          },
          {
            "path": "tests/baselines/reference/importDeclWithDeclareModifierInAmbientContext.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeclWithDeclareModifierInAmbientContext.types"
          },
          {
            "path": "tests/baselines/reference/importDeclWithExportModifier.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeclWithExportModifier.js"
          },
          {
            "path": "tests/baselines/reference/importDeclWithExportModifier.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeclWithExportModifier.types"
          },
          {
            "path": "tests/baselines/reference/importDeclWithExportModifierAndExportAssignment.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeclWithExportModifierAndExportAssignment.js"
          },
          {
            "path": "tests/baselines/reference/importDeclWithExportModifierAndExportAssignment.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeclWithExportModifierAndExportAssignment.types"
          },
          {
            "path": "tests/baselines/reference/importDeclWithExportModifierAndExportAssignmentInAmbientContext.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeclWithExportModifierAndExportAssignmentInAmbientContext.js"
          },
          {
            "path": "tests/baselines/reference/importDeclWithExportModifierAndExportAssignmentInAmbientContext.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeclWithExportModifierAndExportAssignmentInAmbientContext.types"
          },
          {
            "path": "tests/baselines/reference/importDeclWithExportModifierInAmbientContext.js"
          },
          {
            "path": "tests/baselines/reference/importDeclWithExportModifierInAmbientContext.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeclWithExportModifierInAmbientContext.types"
          },
          {
            "path": "tests/baselines/reference/importDeclarationInModuleDeclaration1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeclarationInModuleDeclaration1.js"
          },
          {
            "path": "tests/baselines/reference/importDeclarationInModuleDeclaration1.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeclarationInModuleDeclaration1.types"
          },
          {
            "path": "tests/baselines/reference/importInTypePosition.js"
          },
          {
            "path": "tests/baselines/reference/importInTypePosition.symbols"
          },
          {
            "path": "tests/baselines/reference/importInTypePosition.types"
          },
          {
            "path": "tests/baselines/reference/importInsideModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importInsideModule.js"
          },
          {
            "path": "tests/baselines/reference/importInsideModule.symbols"
          },
          {
            "path": "tests/baselines/reference/importInsideModule.types"
          },
          {
            "path": "tests/baselines/reference/importNonExternalModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importNonExternalModule.js"
          },
          {
            "path": "tests/baselines/reference/importNonExternalModule.symbols"
          },
          {
            "path": "tests/baselines/reference/importNonExternalModule.types"
          },
          {
            "path": "tests/baselines/reference/importOnAliasedIdentifiers.js"
          },
          {
            "path": "tests/baselines/reference/importOnAliasedIdentifiers.symbols"
          },
          {
            "path": "tests/baselines/reference/importOnAliasedIdentifiers.types"
          },
          {
            "path": "tests/baselines/reference/importStatements.js"
          },
          {
            "path": "tests/baselines/reference/importStatements.symbols"
          },
          {
            "path": "tests/baselines/reference/importStatements.types"
          },
          {
            "path": "tests/baselines/reference/importStatementsInterfaces.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importStatementsInterfaces.js"
          },
          {
            "path": "tests/baselines/reference/importStatementsInterfaces.symbols"
          },
          {
            "path": "tests/baselines/reference/importStatementsInterfaces.types"
          },
          {
            "path": "tests/baselines/reference/import_reference-exported-alias.js"
          },
          {
            "path": "tests/baselines/reference/import_reference-exported-alias.symbols"
          },
          {
            "path": "tests/baselines/reference/import_reference-exported-alias.types"
          },
          {
            "path": "tests/baselines/reference/import_reference-to-type-alias.js"
          },
          {
            "path": "tests/baselines/reference/import_reference-to-type-alias.symbols"
          },
          {
            "path": "tests/baselines/reference/import_reference-to-type-alias.types"
          },
          {
            "path": "tests/baselines/reference/importedAliasesInTypePositions.js"
          },
          {
            "path": "tests/baselines/reference/importedAliasesInTypePositions.symbols"
          },
          {
            "path": "tests/baselines/reference/importedAliasesInTypePositions.types"
          },
          {
            "path": "tests/baselines/reference/importedModuleAddToGlobal.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importedModuleAddToGlobal.js"
          },
          {
            "path": "tests/baselines/reference/importedModuleAddToGlobal.symbols"
          },
          {
            "path": "tests/baselines/reference/importedModuleAddToGlobal.types"
          },
          {
            "path": "tests/baselines/reference/importedModuleClassNameClash.js"
          },
          {
            "path": "tests/baselines/reference/importedModuleClassNameClash.symbols"
          },
          {
            "path": "tests/baselines/reference/importedModuleClassNameClash.types"
          },
          {
            "path": "tests/baselines/reference/incompatibleExports1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/incompatibleExports1.js"
          },
          {
            "path": "tests/baselines/reference/incompatibleExports1.symbols"
          },
          {
            "path": "tests/baselines/reference/incompatibleExports1.types"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithAnyOtherType.js"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithAnyOtherType.symbols"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithAnyOtherType.types"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithAnyOtherTypeInvalidOperations.errors.txt"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithAnyOtherTypeInvalidOperations.js"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithAnyOtherTypeInvalidOperations.symbols"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithAnyOtherTypeInvalidOperations.types"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithNumberType.js"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithNumberType.symbols"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithNumberType.types"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithNumberTypeInvalidOperations.errors.txt"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithNumberTypeInvalidOperations.js"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithNumberTypeInvalidOperations.symbols"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithNumberTypeInvalidOperations.types"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithUnsupportedBooleanType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithUnsupportedBooleanType.js"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithUnsupportedBooleanType.symbols"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithUnsupportedBooleanType.types"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithUnsupportedStringType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithUnsupportedStringType.js"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithUnsupportedStringType.symbols"
          },
          {
            "path": "tests/baselines/reference/incrementOperatorWithUnsupportedStringType.types"
          },
          {
            "path": "tests/baselines/reference/indexIntoEnum.js"
          },
          {
            "path": "tests/baselines/reference/indexIntoEnum.symbols"
          },
          {
            "path": "tests/baselines/reference/indexIntoEnum.types"
          },
          {
            "path": "tests/baselines/reference/inheritanceOfGenericConstructorMethod2.js"
          },
          {
            "path": "tests/baselines/reference/inheritanceOfGenericConstructorMethod2.symbols"
          },
          {
            "path": "tests/baselines/reference/inheritanceOfGenericConstructorMethod2.types"
          },
          {
            "path": "tests/baselines/reference/inheritedModuleMembersForClodule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/inheritedModuleMembersForClodule.js"
          },
          {
            "path": "tests/baselines/reference/inheritedModuleMembersForClodule.symbols"
          },
          {
            "path": "tests/baselines/reference/inheritedModuleMembersForClodule.types"
          },
          {
            "path": "tests/baselines/reference/initializersInDeclarations.errors.txt"
          },
          {
            "path": "tests/baselines/reference/initializersInDeclarations.symbols"
          },
          {
            "path": "tests/baselines/reference/initializersInDeclarations.types"
          },
          {
            "path": "tests/baselines/reference/innerAliases.errors.txt"
          },
          {
            "path": "tests/baselines/reference/innerAliases.js"
          },
          {
            "path": "tests/baselines/reference/innerAliases.symbols"
          },
          {
            "path": "tests/baselines/reference/innerAliases.types"
          },
          {
            "path": "tests/baselines/reference/innerAliases2.js"
          },
          {
            "path": "tests/baselines/reference/innerAliases2.symbols"
          },
          {
            "path": "tests/baselines/reference/innerAliases2.types"
          },
          {
            "path": "tests/baselines/reference/innerBoundLambdaEmit.js"
          },
          {
            "path": "tests/baselines/reference/innerBoundLambdaEmit.symbols"
          },
          {
            "path": "tests/baselines/reference/innerBoundLambdaEmit.types"
          },
          {
            "path": "tests/baselines/reference/innerExtern.js"
          },
          {
            "path": "tests/baselines/reference/innerExtern.symbols"
          },
          {
            "path": "tests/baselines/reference/innerExtern.types"
          },
          {
            "path": "tests/baselines/reference/innerFunc.js"
          },
          {
            "path": "tests/baselines/reference/innerFunc.symbols"
          },
          {
            "path": "tests/baselines/reference/innerFunc.types"
          },
          {
            "path": "tests/baselines/reference/innerModExport1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/innerModExport1.js"
          },
          {
            "path": "tests/baselines/reference/innerModExport1.symbols"
          },
          {
            "path": "tests/baselines/reference/innerModExport1.types"
          },
          {
            "path": "tests/baselines/reference/innerModExport2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/innerModExport2.js"
          },
          {
            "path": "tests/baselines/reference/innerModExport2.symbols"
          },
          {
            "path": "tests/baselines/reference/innerModExport2.types"
          },
          {
            "path": "tests/baselines/reference/instancePropertiesInheritedIntoClassType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/instancePropertiesInheritedIntoClassType.js"
          },
          {
            "path": "tests/baselines/reference/instancePropertiesInheritedIntoClassType.symbols"
          },
          {
            "path": "tests/baselines/reference/instancePropertiesInheritedIntoClassType.types"
          },
          {
            "path": "tests/baselines/reference/instancePropertyInClassType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/instancePropertyInClassType.js"
          },
          {
            "path": "tests/baselines/reference/instancePropertyInClassType.symbols"
          },
          {
            "path": "tests/baselines/reference/instancePropertyInClassType.types"
          },
          {
            "path": "tests/baselines/reference/instanceofOperator.errors.txt"
          },
          {
            "path": "tests/baselines/reference/instanceofOperator.js"
          },
          {
            "path": "tests/baselines/reference/instanceofOperator.symbols"
          },
          {
            "path": "tests/baselines/reference/instanceofOperator.types"
          },
          {
            "path": "tests/baselines/reference/instantiatedModule.js"
          },
          {
            "path": "tests/baselines/reference/instantiatedModule.symbols"
          },
          {
            "path": "tests/baselines/reference/instantiatedModule.types"
          },
          {
            "path": "tests/baselines/reference/interMixingModulesInterfaces0.js"
          },
          {
            "path": "tests/baselines/reference/interMixingModulesInterfaces0.symbols"
          },
          {
            "path": "tests/baselines/reference/interMixingModulesInterfaces0.types"
          },
          {
            "path": "tests/baselines/reference/interMixingModulesInterfaces1.js"
          },
          {
            "path": "tests/baselines/reference/interMixingModulesInterfaces1.symbols"
          },
          {
            "path": "tests/baselines/reference/interMixingModulesInterfaces1.types"
          },
          {
            "path": "tests/baselines/reference/interMixingModulesInterfaces2.js"
          },
          {
            "path": "tests/baselines/reference/interMixingModulesInterfaces2.symbols"
          },
          {
            "path": "tests/baselines/reference/interMixingModulesInterfaces2.types"
          },
          {
            "path": "tests/baselines/reference/interMixingModulesInterfaces3.js"
          },
          {
            "path": "tests/baselines/reference/interMixingModulesInterfaces3.symbols"
          },
          {
            "path": "tests/baselines/reference/interMixingModulesInterfaces3.types"
          },
          {
            "path": "tests/baselines/reference/interMixingModulesInterfaces4.js"
          },
          {
            "path": "tests/baselines/reference/interMixingModulesInterfaces4.symbols"
          },
          {
            "path": "tests/baselines/reference/interMixingModulesInterfaces4.types"
          },
          {
            "path": "tests/baselines/reference/interMixingModulesInterfaces5.js"
          },
          {
            "path": "tests/baselines/reference/interMixingModulesInterfaces5.symbols"
          },
          {
            "path": "tests/baselines/reference/interMixingModulesInterfaces5.types"
          },
          {
            "path": "tests/baselines/reference/interfaceAssignmentCompat.errors.txt"
          },
          {
            "path": "tests/baselines/reference/interfaceAssignmentCompat.js"
          },
          {
            "path": "tests/baselines/reference/interfaceAssignmentCompat.symbols"
          },
          {
            "path": "tests/baselines/reference/interfaceAssignmentCompat.types"
          },
          {
            "path": "tests/baselines/reference/interfaceDeclaration2.js"
          },
          {
            "path": "tests/baselines/reference/interfaceDeclaration2.symbols"
          },
          {
            "path": "tests/baselines/reference/interfaceDeclaration2.types"
          },
          {
            "path": "tests/baselines/reference/interfaceDeclaration3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/interfaceDeclaration3.js"
          },
          {
            "path": "tests/baselines/reference/interfaceDeclaration3.symbols"
          },
          {
            "path": "tests/baselines/reference/interfaceDeclaration3.types"
          },
          {
            "path": "tests/baselines/reference/interfaceDeclaration4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/interfaceDeclaration4.js"
          },
          {
            "path": "tests/baselines/reference/interfaceDeclaration4.symbols"
          },
          {
            "path": "tests/baselines/reference/interfaceDeclaration4.types"
          },
          {
            "path": "tests/baselines/reference/interfaceInReopenedModule.js"
          },
          {
            "path": "tests/baselines/reference/interfaceInReopenedModule.symbols"
          },
          {
            "path": "tests/baselines/reference/interfaceInReopenedModule.types"
          },
          {
            "path": "tests/baselines/reference/interfaceNameAsIdentifier.errors.txt"
          },
          {
            "path": "tests/baselines/reference/interfaceNameAsIdentifier.js"
          },
          {
            "path": "tests/baselines/reference/interfaceNameAsIdentifier.symbols"
          },
          {
            "path": "tests/baselines/reference/interfaceNameAsIdentifier.types"
          },
          {
            "path": "tests/baselines/reference/interfacePropertiesWithSameName2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/interfacePropertiesWithSameName2.js"
          },
          {
            "path": "tests/baselines/reference/interfacePropertiesWithSameName2.symbols"
          },
          {
            "path": "tests/baselines/reference/interfacePropertiesWithSameName2.types"
          },
          {
            "path": "tests/baselines/reference/interfaceThatIndirectlyInheritsFromItself.errors.txt"
          },
          {
            "path": "tests/baselines/reference/interfaceThatIndirectlyInheritsFromItself.js"
          },
          {
            "path": "tests/baselines/reference/interfaceThatIndirectlyInheritsFromItself.symbols"
          },
          {
            "path": "tests/baselines/reference/interfaceThatIndirectlyInheritsFromItself.types"
          },
          {
            "path": "tests/baselines/reference/interfaceWithMultipleBaseTypes.errors.txt"
          },
          {
            "path": "tests/baselines/reference/interfaceWithMultipleBaseTypes.js"
          },
          {
            "path": "tests/baselines/reference/interfaceWithMultipleBaseTypes.symbols"
          },
          {
            "path": "tests/baselines/reference/interfaceWithMultipleBaseTypes.types"
          },
          {
            "path": "tests/baselines/reference/interfaceWithPropertyOfEveryType.js"
          },
          {
            "path": "tests/baselines/reference/interfaceWithPropertyOfEveryType.symbols"
          },
          {
            "path": "tests/baselines/reference/interfaceWithPropertyOfEveryType.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasClass.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasClass.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasClass.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasClassInsideLocalModuleWithExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasClassInsideLocalModuleWithExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasClassInsideLocalModuleWithExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasClassInsideLocalModuleWithoutExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasClassInsideLocalModuleWithoutExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasClassInsideLocalModuleWithoutExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasClassInsideLocalModuleWithoutExportAccessError.errors.txt"
          },
          {
            "path": "tests/baselines/reference/internalAliasClassInsideLocalModuleWithoutExportAccessError.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasClassInsideLocalModuleWithoutExportAccessError.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasClassInsideLocalModuleWithoutExportAccessError.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasClassInsideTopLevelModuleWithExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasClassInsideTopLevelModuleWithExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasClassInsideTopLevelModuleWithExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasClassInsideTopLevelModuleWithoutExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasClassInsideTopLevelModuleWithoutExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasClassInsideTopLevelModuleWithoutExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnum.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnum.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnum.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnumInsideLocalModuleWithExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnumInsideLocalModuleWithExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnumInsideLocalModuleWithExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnumInsideLocalModuleWithoutExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnumInsideLocalModuleWithoutExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnumInsideLocalModuleWithoutExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnumInsideLocalModuleWithoutExportAccessError.errors.txt"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnumInsideLocalModuleWithoutExportAccessError.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnumInsideLocalModuleWithoutExportAccessError.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnumInsideLocalModuleWithoutExportAccessError.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnumInsideTopLevelModuleWithExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnumInsideTopLevelModuleWithExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnumInsideTopLevelModuleWithExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnumInsideTopLevelModuleWithoutExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnumInsideTopLevelModuleWithoutExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasEnumInsideTopLevelModuleWithoutExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunction.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunction.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunctionInsideLocalModuleWithExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunctionInsideLocalModuleWithExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunctionInsideLocalModuleWithExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunctionInsideLocalModuleWithoutExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunctionInsideLocalModuleWithoutExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunctionInsideLocalModuleWithoutExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunctionInsideLocalModuleWithoutExportAccessError.errors.txt"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunctionInsideLocalModuleWithoutExportAccessError.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunctionInsideLocalModuleWithoutExportAccessError.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunctionInsideLocalModuleWithoutExportAccessError.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunctionInsideTopLevelModuleWithExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunctionInsideTopLevelModuleWithExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunctionInsideTopLevelModuleWithExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunctionInsideTopLevelModuleWithoutExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunctionInsideTopLevelModuleWithoutExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasFunctionInsideTopLevelModuleWithoutExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModule.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModule.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModule.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModuleInsideLocalModuleWithExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModuleInsideLocalModuleWithExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModuleInsideLocalModuleWithExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModuleInsideLocalModuleWithoutExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModuleInsideLocalModuleWithoutExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModuleInsideLocalModuleWithoutExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModuleInsideLocalModuleWithoutExportAccessError.errors.txt"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModuleInsideLocalModuleWithoutExportAccessError.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModuleInsideLocalModuleWithoutExportAccessError.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModuleInsideLocalModuleWithoutExportAccessError.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModuleInsideTopLevelModuleWithExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModuleInsideTopLevelModuleWithExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModuleInsideTopLevelModuleWithExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModuleInsideTopLevelModuleWithoutExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModuleInsideTopLevelModuleWithoutExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasInitializedModuleInsideTopLevelModuleWithoutExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterface.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterface.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterface.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterfaceInsideLocalModuleWithExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterfaceInsideLocalModuleWithExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterfaceInsideLocalModuleWithExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterfaceInsideLocalModuleWithoutExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterfaceInsideLocalModuleWithoutExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterfaceInsideLocalModuleWithoutExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterfaceInsideLocalModuleWithoutExportAccessError.errors.txt"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterfaceInsideLocalModuleWithoutExportAccessError.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterfaceInsideLocalModuleWithoutExportAccessError.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterfaceInsideLocalModuleWithoutExportAccessError.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterfaceInsideTopLevelModuleWithExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterfaceInsideTopLevelModuleWithExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterfaceInsideTopLevelModuleWithExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterfaceInsideTopLevelModuleWithoutExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterfaceInsideTopLevelModuleWithoutExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasInterfaceInsideTopLevelModuleWithoutExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModule.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModule.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModule.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModuleInsideLocalModuleWithExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModuleInsideLocalModuleWithExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModuleInsideLocalModuleWithExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModuleInsideLocalModuleWithoutExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModuleInsideLocalModuleWithoutExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModuleInsideLocalModuleWithoutExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.errors.txt"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModuleInsideTopLevelModuleWithExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModuleInsideTopLevelModuleWithExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModuleInsideTopLevelModuleWithExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModuleInsideTopLevelModuleWithoutExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModuleInsideTopLevelModuleWithoutExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasUninitializedModuleInsideTopLevelModuleWithoutExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasVar.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasVar.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasVar.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasVarInsideLocalModuleWithExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasVarInsideLocalModuleWithExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasVarInsideLocalModuleWithExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasVarInsideLocalModuleWithoutExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasVarInsideLocalModuleWithoutExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasVarInsideLocalModuleWithoutExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasVarInsideLocalModuleWithoutExportAccessError.errors.txt"
          },
          {
            "path": "tests/baselines/reference/internalAliasVarInsideLocalModuleWithoutExportAccessError.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasVarInsideLocalModuleWithoutExportAccessError.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasVarInsideLocalModuleWithoutExportAccessError.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasVarInsideTopLevelModuleWithExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasVarInsideTopLevelModuleWithExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasVarInsideTopLevelModuleWithExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasVarInsideTopLevelModuleWithoutExport.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasVarInsideTopLevelModuleWithoutExport.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasVarInsideTopLevelModuleWithoutExport.types"
          },
          {
            "path": "tests/baselines/reference/internalAliasWithDottedNameEmit.js"
          },
          {
            "path": "tests/baselines/reference/internalAliasWithDottedNameEmit.symbols"
          },
          {
            "path": "tests/baselines/reference/internalAliasWithDottedNameEmit.types"
          },
          {
            "path": "tests/baselines/reference/internalImportInstantiatedModuleMergedWithClassNotReferencingInstance.errors.txt"
          },
          {
            "path": "tests/baselines/reference/internalImportInstantiatedModuleMergedWithClassNotReferencingInstance.js"
          },
          {
            "path": "tests/baselines/reference/internalImportInstantiatedModuleMergedWithClassNotReferencingInstance.symbols"
          },
          {
            "path": "tests/baselines/reference/internalImportInstantiatedModuleMergedWithClassNotReferencingInstance.types"
          },
          {
            "path": "tests/baselines/reference/internalImportInstantiatedModuleMergedWithClassNotReferencingInstanceNoConflict.js"
          },
          {
            "path": "tests/baselines/reference/internalImportInstantiatedModuleMergedWithClassNotReferencingInstanceNoConflict.symbols"
          },
          {
            "path": "tests/baselines/reference/internalImportInstantiatedModuleMergedWithClassNotReferencingInstanceNoConflict.types"
          },
          {
            "path": "tests/baselines/reference/internalImportInstantiatedModuleNotReferencingInstance.errors.txt"
          },
          {
            "path": "tests/baselines/reference/internalImportInstantiatedModuleNotReferencingInstance.js"
          },
          {
            "path": "tests/baselines/reference/internalImportInstantiatedModuleNotReferencingInstance.symbols"
          },
          {
            "path": "tests/baselines/reference/internalImportInstantiatedModuleNotReferencingInstance.types"
          },
          {
            "path": "tests/baselines/reference/internalImportUnInstantiatedModuleMergedWithClassNotReferencingInstance.errors.txt"
          },
          {
            "path": "tests/baselines/reference/internalImportUnInstantiatedModuleMergedWithClassNotReferencingInstance.js"
          },
          {
            "path": "tests/baselines/reference/internalImportUnInstantiatedModuleMergedWithClassNotReferencingInstance.symbols"
          },
          {
            "path": "tests/baselines/reference/internalImportUnInstantiatedModuleMergedWithClassNotReferencingInstance.types"
          },
          {
            "path": "tests/baselines/reference/internalImportUnInstantiatedModuleMergedWithClassNotReferencingInstanceNoConflict.js"
          },
          {
            "path": "tests/baselines/reference/internalImportUnInstantiatedModuleMergedWithClassNotReferencingInstanceNoConflict.symbols"
          },
          {
            "path": "tests/baselines/reference/internalImportUnInstantiatedModuleMergedWithClassNotReferencingInstanceNoConflict.types"
          },
          {
            "path": "tests/baselines/reference/internalImportUnInstantiatedModuleNotReferencingInstanceNoConflict.js"
          },
          {
            "path": "tests/baselines/reference/internalImportUnInstantiatedModuleNotReferencingInstanceNoConflict.symbols"
          },
          {
            "path": "tests/baselines/reference/internalImportUnInstantiatedModuleNotReferencingInstanceNoConflict.types"
          },
          {
            "path": "tests/baselines/reference/intrinsics.errors.txt"
          },
          {
            "path": "tests/baselines/reference/intrinsics.js"
          },
          {
            "path": "tests/baselines/reference/intrinsics.symbols"
          },
          {
            "path": "tests/baselines/reference/intrinsics.types"
          },
          {
            "path": "tests/baselines/reference/invalidAssignmentsToVoid.errors.txt"
          },
          {
            "path": "tests/baselines/reference/invalidAssignmentsToVoid.js"
          },
          {
            "path": "tests/baselines/reference/invalidAssignmentsToVoid.symbols"
          },
          {
            "path": "tests/baselines/reference/invalidAssignmentsToVoid.types"
          },
          {
            "path": "tests/baselines/reference/invalidBooleanAssignments.errors.txt"
          },
          {
            "path": "tests/baselines/reference/invalidBooleanAssignments.js"
          },
          {
            "path": "tests/baselines/reference/invalidBooleanAssignments.symbols"
          },
          {
            "path": "tests/baselines/reference/invalidBooleanAssignments.types"
          },
          {
            "path": "tests/baselines/reference/invalidInstantiatedModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/invalidInstantiatedModule.js"
          },
          {
            "path": "tests/baselines/reference/invalidInstantiatedModule.symbols"
          },
          {
            "path": "tests/baselines/reference/invalidInstantiatedModule.types"
          },
          {
            "path": "tests/baselines/reference/invalidModuleWithStatementsOfEveryKind.errors.txt"
          },
          {
            "path": "tests/baselines/reference/invalidModuleWithStatementsOfEveryKind.js"
          },
          {
            "path": "tests/baselines/reference/invalidModuleWithStatementsOfEveryKind.symbols"
          },
          {
            "path": "tests/baselines/reference/invalidModuleWithStatementsOfEveryKind.types"
          },
          {
            "path": "tests/baselines/reference/invalidModuleWithVarStatements.errors.txt"
          },
          {
            "path": "tests/baselines/reference/invalidModuleWithVarStatements.js"
          },
          {
            "path": "tests/baselines/reference/invalidModuleWithVarStatements.symbols"
          },
          {
            "path": "tests/baselines/reference/invalidModuleWithVarStatements.types"
          },
          {
            "path": "tests/baselines/reference/invalidMultipleVariableDeclarations.errors.txt"
          },
          {
            "path": "tests/baselines/reference/invalidMultipleVariableDeclarations.js"
          },
          {
            "path": "tests/baselines/reference/invalidMultipleVariableDeclarations.symbols"
          },
          {
            "path": "tests/baselines/reference/invalidMultipleVariableDeclarations.types"
          },
          {
            "path": "tests/baselines/reference/invalidNestedModules.errors.txt"
          },
          {
            "path": "tests/baselines/reference/invalidNestedModules.js"
          },
          {
            "path": "tests/baselines/reference/invalidNestedModules.symbols"
          },
          {
            "path": "tests/baselines/reference/invalidNestedModules.types"
          },
          {
            "path": "tests/baselines/reference/invalidNumberAssignments.errors.txt"
          },
          {
            "path": "tests/baselines/reference/invalidNumberAssignments.js"
          },
          {
            "path": "tests/baselines/reference/invalidNumberAssignments.symbols"
          },
          {
            "path": "tests/baselines/reference/invalidNumberAssignments.types"
          },
          {
            "path": "tests/baselines/reference/invalidStringAssignments.errors.txt"
          },
          {
            "path": "tests/baselines/reference/invalidStringAssignments.js"
          },
          {
            "path": "tests/baselines/reference/invalidStringAssignments.symbols"
          },
          {
            "path": "tests/baselines/reference/invalidStringAssignments.types"
          },
          {
            "path": "tests/baselines/reference/invalidUndefinedAssignments.errors.txt"
          },
          {
            "path": "tests/baselines/reference/invalidUndefinedAssignments.js"
          },
          {
            "path": "tests/baselines/reference/invalidUndefinedAssignments.symbols"
          },
          {
            "path": "tests/baselines/reference/invalidUndefinedAssignments.types"
          },
          {
            "path": "tests/baselines/reference/invalidUndefinedValues.js"
          },
          {
            "path": "tests/baselines/reference/invalidUndefinedValues.symbols"
          },
          {
            "path": "tests/baselines/reference/invalidUndefinedValues.types"
          },
          {
            "path": "tests/baselines/reference/invalidVoidAssignments.errors.txt"
          },
          {
            "path": "tests/baselines/reference/invalidVoidAssignments.js"
          },
          {
            "path": "tests/baselines/reference/invalidVoidAssignments.symbols"
          },
          {
            "path": "tests/baselines/reference/invalidVoidAssignments.types"
          },
          {
            "path": "tests/baselines/reference/invalidVoidValues.errors.txt"
          },
          {
            "path": "tests/baselines/reference/invalidVoidValues.js"
          },
          {
            "path": "tests/baselines/reference/invalidVoidValues.symbols"
          },
          {
            "path": "tests/baselines/reference/invalidVoidValues.types"
          },
          {
            "path": "tests/baselines/reference/ipromise2.js"
          },
          {
            "path": "tests/baselines/reference/ipromise2.symbols"
          },
          {
            "path": "tests/baselines/reference/ipromise2.types"
          },
          {
            "path": "tests/baselines/reference/ipromise4.js"
          },
          {
            "path": "tests/baselines/reference/ipromise4.symbols"
          },
          {
            "path": "tests/baselines/reference/ipromise4.types"
          },
          {
            "path": "tests/baselines/reference/isDeclarationVisibleNodeKinds.js"
          },
          {
            "path": "tests/baselines/reference/isDeclarationVisibleNodeKinds.symbols"
          },
          {
            "path": "tests/baselines/reference/isDeclarationVisibleNodeKinds.types"
          },
          {
            "path": "tests/baselines/reference/jsFileCompilationModuleSyntax.errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsFileCompilationModuleSyntax.symbols"
          },
          {
            "path": "tests/baselines/reference/jsFileCompilationModuleSyntax.types"
          },
          {
            "path": "tests/baselines/reference/jsxElementsAsIdentifierNames.js"
          },
          {
            "path": "tests/baselines/reference/jsxElementsAsIdentifierNames.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxElementsAsIdentifierNames.types"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryIdentifierAsParameter.js"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryIdentifierAsParameter.js.map"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryIdentifierAsParameter.sourcemap.txt"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryIdentifierAsParameter.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryIdentifierAsParameter.types"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryIdentifierWithAbsentParameter.errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryIdentifierWithAbsentParameter.js"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryIdentifierWithAbsentParameter.js.map"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryIdentifierWithAbsentParameter.sourcemap.txt"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryIdentifierWithAbsentParameter.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryIdentifierWithAbsentParameter.types"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryQualifiedNameResolutionError.errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryQualifiedNameResolutionError.js"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryQualifiedNameResolutionError.js.map"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryQualifiedNameResolutionError.sourcemap.txt"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryQualifiedNameResolutionError.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryQualifiedNameResolutionError.types"
          },
          {
            "path": "tests/baselines/reference/jsxParsingError1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxParsingError1.js"
          },
          {
            "path": "tests/baselines/reference/jsxParsingError1.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxParsingError1.types"
          },
          {
            "path": "tests/baselines/reference/jsxParsingError2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxParsingError2.js"
          },
          {
            "path": "tests/baselines/reference/jsxParsingError2.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxParsingError2.types"
          },
          {
            "path": "tests/baselines/reference/jsxParsingError3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxParsingError3.js"
          },
          {
            "path": "tests/baselines/reference/jsxParsingError3.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxParsingError3.types"
          },
          {
            "path": "tests/baselines/reference/jsxViaImport.2.js"
          },
          {
            "path": "tests/baselines/reference/jsxViaImport.2.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxViaImport.2.types"
          },
          {
            "path": "tests/baselines/reference/jsxViaImport.errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxViaImport.js"
          },
          {
            "path": "tests/baselines/reference/jsxViaImport.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxViaImport.types"
          },
          {
            "path": "tests/baselines/reference/knockout.errors.txt"
          },
          {
            "path": "tests/baselines/reference/knockout.js"
          },
          {
            "path": "tests/baselines/reference/knockout.symbols"
          },
          {
            "path": "tests/baselines/reference/knockout.types"
          },
          {
            "path": "tests/baselines/reference/labeledStatementWithLabel.errors.txt"
          },
          {
            "path": "tests/baselines/reference/labeledStatementWithLabel.js"
          },
          {
            "path": "tests/baselines/reference/labeledStatementWithLabel.symbols"
          },
          {
            "path": "tests/baselines/reference/labeledStatementWithLabel.types"
          },
          {
            "path": "tests/baselines/reference/labeledStatementWithLabel_es2015.errors.txt"
          },
          {
            "path": "tests/baselines/reference/labeledStatementWithLabel_es2015.js"
          },
          {
            "path": "tests/baselines/reference/labeledStatementWithLabel_es2015.symbols"
          },
          {
            "path": "tests/baselines/reference/labeledStatementWithLabel_es2015.types"
          },
          {
            "path": "tests/baselines/reference/labeledStatementWithLabel_strict.errors.txt"
          },
          {
            "path": "tests/baselines/reference/labeledStatementWithLabel_strict.js"
          },
          {
            "path": "tests/baselines/reference/labeledStatementWithLabel_strict.symbols"
          },
          {
            "path": "tests/baselines/reference/labeledStatementWithLabel_strict.types"
          },
          {
            "path": "tests/baselines/reference/lambdaPropSelf.errors.txt"
          },
          {
            "path": "tests/baselines/reference/lambdaPropSelf.js"
          },
          {
            "path": "tests/baselines/reference/lambdaPropSelf.symbols"
          },
          {
            "path": "tests/baselines/reference/lambdaPropSelf.types"
          },
          {
            "path": "tests/baselines/reference/letAndVarRedeclaration.errors.txt"
          },
          {
            "path": "tests/baselines/reference/letAndVarRedeclaration.js"
          },
          {
            "path": "tests/baselines/reference/letAndVarRedeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/letAndVarRedeclaration.types"
          },
          {
            "path": "tests/baselines/reference/letDeclarations-scopes.errors.txt"
          },
          {
            "path": "tests/baselines/reference/letDeclarations-scopes.js"
          },
          {
            "path": "tests/baselines/reference/letDeclarations-scopes.symbols"
          },
          {
            "path": "tests/baselines/reference/letDeclarations-scopes.types"
          },
          {
            "path": "tests/baselines/reference/letDeclarations-validContexts.errors.txt"
          },
          {
            "path": "tests/baselines/reference/letDeclarations-validContexts.js"
          },
          {
            "path": "tests/baselines/reference/letDeclarations-validContexts.symbols"
          },
          {
            "path": "tests/baselines/reference/letDeclarations-validContexts.types"
          },
          {
            "path": "tests/baselines/reference/letDeclarations2.js"
          },
          {
            "path": "tests/baselines/reference/letDeclarations2.symbols"
          },
          {
            "path": "tests/baselines/reference/letDeclarations2.types"
          },
          {
            "path": "tests/baselines/reference/letKeepNamesOfTopLevelItems.js"
          },
          {
            "path": "tests/baselines/reference/letKeepNamesOfTopLevelItems.symbols"
          },
          {
            "path": "tests/baselines/reference/letKeepNamesOfTopLevelItems.types"
          },
          {
            "path": "tests/baselines/reference/libMembers.errors.txt"
          },
          {
            "path": "tests/baselines/reference/libMembers.js"
          },
          {
            "path": "tests/baselines/reference/libMembers.symbols"
          },
          {
            "path": "tests/baselines/reference/libMembers.types"
          },
          {
            "path": "tests/baselines/reference/listFailure.js"
          },
          {
            "path": "tests/baselines/reference/listFailure.symbols"
          },
          {
            "path": "tests/baselines/reference/listFailure.types"
          },
          {
            "path": "tests/baselines/reference/localGetReferences.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/localImportNameVsGlobalName.js"
          },
          {
            "path": "tests/baselines/reference/localImportNameVsGlobalName.symbols"
          },
          {
            "path": "tests/baselines/reference/localImportNameVsGlobalName.types"
          },
          {
            "path": "tests/baselines/reference/logicalNotOperatorWithAnyOtherType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/logicalNotOperatorWithAnyOtherType.js"
          },
          {
            "path": "tests/baselines/reference/logicalNotOperatorWithAnyOtherType.symbols"
          },
          {
            "path": "tests/baselines/reference/logicalNotOperatorWithAnyOtherType.types"
          },
          {
            "path": "tests/baselines/reference/logicalNotOperatorWithBooleanType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/logicalNotOperatorWithBooleanType.js"
          },
          {
            "path": "tests/baselines/reference/logicalNotOperatorWithBooleanType.symbols"
          },
          {
            "path": "tests/baselines/reference/logicalNotOperatorWithBooleanType.types"
          },
          {
            "path": "tests/baselines/reference/logicalNotOperatorWithNumberType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/logicalNotOperatorWithNumberType.js"
          },
          {
            "path": "tests/baselines/reference/logicalNotOperatorWithNumberType.symbols"
          },
          {
            "path": "tests/baselines/reference/logicalNotOperatorWithNumberType.types"
          },
          {
            "path": "tests/baselines/reference/logicalNotOperatorWithStringType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/logicalNotOperatorWithStringType.js"
          },
          {
            "path": "tests/baselines/reference/logicalNotOperatorWithStringType.symbols"
          },
          {
            "path": "tests/baselines/reference/logicalNotOperatorWithStringType.types"
          },
          {
            "path": "tests/baselines/reference/memberScope.errors.txt"
          },
          {
            "path": "tests/baselines/reference/memberScope.js"
          },
          {
            "path": "tests/baselines/reference/memberScope.symbols"
          },
          {
            "path": "tests/baselines/reference/memberScope.types"
          },
          {
            "path": "tests/baselines/reference/mergeClassInterfaceAndModule.js"
          },
          {
            "path": "tests/baselines/reference/mergeClassInterfaceAndModule.symbols"
          },
          {
            "path": "tests/baselines/reference/mergeClassInterfaceAndModule.types"
          },
          {
            "path": "tests/baselines/reference/mergeThreeInterfaces.js"
          },
          {
            "path": "tests/baselines/reference/mergeThreeInterfaces.symbols"
          },
          {
            "path": "tests/baselines/reference/mergeThreeInterfaces.types"
          },
          {
            "path": "tests/baselines/reference/mergeThreeInterfaces2.js"
          },
          {
            "path": "tests/baselines/reference/mergeThreeInterfaces2.symbols"
          },
          {
            "path": "tests/baselines/reference/mergeThreeInterfaces2.types"
          },
          {
            "path": "tests/baselines/reference/mergeTwoInterfaces.js"
          },
          {
            "path": "tests/baselines/reference/mergeTwoInterfaces.symbols"
          },
          {
            "path": "tests/baselines/reference/mergeTwoInterfaces.types"
          },
          {
            "path": "tests/baselines/reference/mergeTwoInterfaces2.js"
          },
          {
            "path": "tests/baselines/reference/mergeTwoInterfaces2.symbols"
          },
          {
            "path": "tests/baselines/reference/mergeTwoInterfaces2.types"
          },
          {
            "path": "tests/baselines/reference/mergedDeclarations1.js"
          },
          {
            "path": "tests/baselines/reference/mergedDeclarations1.symbols"
          },
          {
            "path": "tests/baselines/reference/mergedDeclarations1.types"
          },
          {
            "path": "tests/baselines/reference/mergedDeclarations2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/mergedDeclarations2.js"
          },
          {
            "path": "tests/baselines/reference/mergedDeclarations2.symbols"
          },
          {
            "path": "tests/baselines/reference/mergedDeclarations2.types"
          },
          {
            "path": "tests/baselines/reference/mergedDeclarations3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/mergedDeclarations3.js"
          },
          {
            "path": "tests/baselines/reference/mergedDeclarations3.symbols"
          },
          {
            "path": "tests/baselines/reference/mergedDeclarations3.types"
          },
          {
            "path": "tests/baselines/reference/mergedDeclarations4.js"
          },
          {
            "path": "tests/baselines/reference/mergedDeclarations4.symbols"
          },
          {
            "path": "tests/baselines/reference/mergedDeclarations4.types"
          },
          {
            "path": "tests/baselines/reference/mergedInterfacesWithConflictingPropertyNames.errors.txt"
          },
          {
            "path": "tests/baselines/reference/mergedInterfacesWithConflictingPropertyNames.js"
          },
          {
            "path": "tests/baselines/reference/mergedInterfacesWithConflictingPropertyNames.symbols"
          },
          {
            "path": "tests/baselines/reference/mergedInterfacesWithConflictingPropertyNames.types"
          },
          {
            "path": "tests/baselines/reference/mergedInterfacesWithConflictingPropertyNames2.js"
          },
          {
            "path": "tests/baselines/reference/mergedInterfacesWithConflictingPropertyNames2.symbols"
          },
          {
            "path": "tests/baselines/reference/mergedInterfacesWithConflictingPropertyNames2.types"
          },
          {
            "path": "tests/baselines/reference/mergedInterfacesWithInheritedPrivates3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/mergedInterfacesWithInheritedPrivates3.js"
          },
          {
            "path": "tests/baselines/reference/mergedInterfacesWithInheritedPrivates3.symbols"
          },
          {
            "path": "tests/baselines/reference/mergedInterfacesWithInheritedPrivates3.types"
          },
          {
            "path": "tests/baselines/reference/mergedInterfacesWithMultipleBases.js"
          },
          {
            "path": "tests/baselines/reference/mergedInterfacesWithMultipleBases.symbols"
          },
          {
            "path": "tests/baselines/reference/mergedInterfacesWithMultipleBases.types"
          },
          {
            "path": "tests/baselines/reference/mergedInterfacesWithMultipleBases2.js"
          },
          {
            "path": "tests/baselines/reference/mergedInterfacesWithMultipleBases2.symbols"
          },
          {
            "path": "tests/baselines/reference/mergedInterfacesWithMultipleBases2.types"
          },
          {
            "path": "tests/baselines/reference/mergedModuleDeclarationCodeGen.js"
          },
          {
            "path": "tests/baselines/reference/mergedModuleDeclarationCodeGen.symbols"
          },
          {
            "path": "tests/baselines/reference/mergedModuleDeclarationCodeGen.types"
          },
          {
            "path": "tests/baselines/reference/mergedModuleDeclarationCodeGen2.js"
          },
          {
            "path": "tests/baselines/reference/mergedModuleDeclarationCodeGen2.symbols"
          },
          {
            "path": "tests/baselines/reference/mergedModuleDeclarationCodeGen2.types"
          },
          {
            "path": "tests/baselines/reference/mergedModuleDeclarationCodeGen3.js"
          },
          {
            "path": "tests/baselines/reference/mergedModuleDeclarationCodeGen3.symbols"
          },
          {
            "path": "tests/baselines/reference/mergedModuleDeclarationCodeGen3.types"
          },
          {
            "path": "tests/baselines/reference/mergedModuleDeclarationCodeGen4.js"
          },
          {
            "path": "tests/baselines/reference/mergedModuleDeclarationCodeGen4.symbols"
          },
          {
            "path": "tests/baselines/reference/mergedModuleDeclarationCodeGen4.types"
          },
          {
            "path": "tests/baselines/reference/mergedModuleDeclarationCodeGen5.js"
          },
          {
            "path": "tests/baselines/reference/mergedModuleDeclarationCodeGen5.symbols"
          },
          {
            "path": "tests/baselines/reference/mergedModuleDeclarationCodeGen5.types"
          },
          {
            "path": "tests/baselines/reference/mergedModuleDeclarationWithSharedExportedVar.js"
          },
          {
            "path": "tests/baselines/reference/mergedModuleDeclarationWithSharedExportedVar.symbols"
          },
          {
            "path": "tests/baselines/reference/mergedModuleDeclarationWithSharedExportedVar.types"
          },
          {
            "path": "tests/baselines/reference/metadataOfClassFromModule.js"
          },
          {
            "path": "tests/baselines/reference/metadataOfClassFromModule.symbols"
          },
          {
            "path": "tests/baselines/reference/metadataOfClassFromModule.types"
          },
          {
            "path": "tests/baselines/reference/methodContainingLocalFunction.js"
          },
          {
            "path": "tests/baselines/reference/methodContainingLocalFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/methodContainingLocalFunction.types"
          },
          {
            "path": "tests/baselines/reference/missingReturnStatement.errors.txt"
          },
          {
            "path": "tests/baselines/reference/missingReturnStatement.js"
          },
          {
            "path": "tests/baselines/reference/missingReturnStatement.symbols"
          },
          {
            "path": "tests/baselines/reference/missingReturnStatement.types"
          },
          {
            "path": "tests/baselines/reference/missingTypeArguments3.js"
          },
          {
            "path": "tests/baselines/reference/missingTypeArguments3.symbols"
          },
          {
            "path": "tests/baselines/reference/missingTypeArguments3.types"
          },
          {
            "path": "tests/baselines/reference/mixedExports.js"
          },
          {
            "path": "tests/baselines/reference/mixedExports.symbols"
          },
          {
            "path": "tests/baselines/reference/mixedExports.types"
          },
          {
            "path": "tests/baselines/reference/mixingFunctionAndAmbientModule1.js"
          },
          {
            "path": "tests/baselines/reference/mixingFunctionAndAmbientModule1.symbols"
          },
          {
            "path": "tests/baselines/reference/mixingFunctionAndAmbientModule1.types"
          },
          {
            "path": "tests/baselines/reference/modFunctionCrash.js"
          },
          {
            "path": "tests/baselines/reference/modFunctionCrash.symbols"
          },
          {
            "path": "tests/baselines/reference/modFunctionCrash.types"
          },
          {
            "path": "tests/baselines/reference/moduleAliasInterface.js"
          },
          {
            "path": "tests/baselines/reference/moduleAliasInterface.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleAliasInterface.types"
          },
          {
            "path": "tests/baselines/reference/moduleAndInterfaceSharingName.js"
          },
          {
            "path": "tests/baselines/reference/moduleAndInterfaceSharingName.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleAndInterfaceSharingName.types"
          },
          {
            "path": "tests/baselines/reference/moduleAndInterfaceSharingName2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleAndInterfaceSharingName2.js"
          },
          {
            "path": "tests/baselines/reference/moduleAndInterfaceSharingName2.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleAndInterfaceSharingName2.types"
          },
          {
            "path": "tests/baselines/reference/moduleAndInterfaceSharingName3.js"
          },
          {
            "path": "tests/baselines/reference/moduleAndInterfaceSharingName3.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleAndInterfaceSharingName3.types"
          },
          {
            "path": "tests/baselines/reference/moduleAndInterfaceSharingName4.js"
          },
          {
            "path": "tests/baselines/reference/moduleAndInterfaceSharingName4.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleAndInterfaceSharingName4.types"
          },
          {
            "path": "tests/baselines/reference/moduleAndInterfaceWithSameName.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleAndInterfaceWithSameName.js"
          },
          {
            "path": "tests/baselines/reference/moduleAndInterfaceWithSameName.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleAndInterfaceWithSameName.types"
          },
          {
            "path": "tests/baselines/reference/moduleAsBaseType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleAsBaseType.js"
          },
          {
            "path": "tests/baselines/reference/moduleAsBaseType.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleAsBaseType.types"
          },
          {
            "path": "tests/baselines/reference/moduleAssignmentCompat1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleAssignmentCompat1.js"
          },
          {
            "path": "tests/baselines/reference/moduleAssignmentCompat1.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleAssignmentCompat1.types"
          },
          {
            "path": "tests/baselines/reference/moduleAssignmentCompat2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleAssignmentCompat2.js"
          },
          {
            "path": "tests/baselines/reference/moduleAssignmentCompat2.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleAssignmentCompat2.types"
          },
          {
            "path": "tests/baselines/reference/moduleAssignmentCompat3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleAssignmentCompat3.js"
          },
          {
            "path": "tests/baselines/reference/moduleAssignmentCompat3.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleAssignmentCompat3.types"
          },
          {
            "path": "tests/baselines/reference/moduleAssignmentCompat4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleAssignmentCompat4.js"
          },
          {
            "path": "tests/baselines/reference/moduleAssignmentCompat4.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleAssignmentCompat4.types"
          },
          {
            "path": "tests/baselines/reference/moduleAugmentationNoNewNames.js"
          },
          {
            "path": "tests/baselines/reference/moduleAugmentationNoNewNames.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleAugmentationNoNewNames.types"
          },
          {
            "path": "tests/baselines/reference/moduleCodeGenTest3.js"
          },
          {
            "path": "tests/baselines/reference/moduleCodeGenTest3.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleCodeGenTest3.types"
          },
          {
            "path": "tests/baselines/reference/moduleCodegenTest4.js"
          },
          {
            "path": "tests/baselines/reference/moduleCodegenTest4.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleCodegenTest4.types"
          },
          {
            "path": "tests/baselines/reference/moduleCrashBug1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleCrashBug1.js"
          },
          {
            "path": "tests/baselines/reference/moduleCrashBug1.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleCrashBug1.types"
          },
          {
            "path": "tests/baselines/reference/moduleElementsInWrongContext.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleElementsInWrongContext.js"
          },
          {
            "path": "tests/baselines/reference/moduleElementsInWrongContext.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleElementsInWrongContext.types"
          },
          {
            "path": "tests/baselines/reference/moduleElementsInWrongContext2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleElementsInWrongContext2.js"
          },
          {
            "path": "tests/baselines/reference/moduleElementsInWrongContext2.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleElementsInWrongContext2.types"
          },
          {
            "path": "tests/baselines/reference/moduleElementsInWrongContext3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleElementsInWrongContext3.js"
          },
          {
            "path": "tests/baselines/reference/moduleElementsInWrongContext3.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleElementsInWrongContext3.types"
          },
          {
            "path": "tests/baselines/reference/moduleExports1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleExports1.js"
          },
          {
            "path": "tests/baselines/reference/moduleExports1.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleExports1.types"
          },
          {
            "path": "tests/baselines/reference/moduleIdentifiers.js"
          },
          {
            "path": "tests/baselines/reference/moduleIdentifiers.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleIdentifiers.types"
          },
          {
            "path": "tests/baselines/reference/moduleImport.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleImport.js"
          },
          {
            "path": "tests/baselines/reference/moduleImport.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleImport.types"
          },
          {
            "path": "tests/baselines/reference/moduleMemberWithoutTypeAnnotation1.js"
          },
          {
            "path": "tests/baselines/reference/moduleMemberWithoutTypeAnnotation1.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleMemberWithoutTypeAnnotation1.types"
          },
          {
            "path": "tests/baselines/reference/moduleMemberWithoutTypeAnnotation2.js"
          },
          {
            "path": "tests/baselines/reference/moduleMemberWithoutTypeAnnotation2.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleMemberWithoutTypeAnnotation2.types"
          },
          {
            "path": "tests/baselines/reference/moduleNewExportBug.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleNewExportBug.js"
          },
          {
            "path": "tests/baselines/reference/moduleNewExportBug.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleNewExportBug.types"
          },
          {
            "path": "tests/baselines/reference/moduleNoEmit.js"
          },
          {
            "path": "tests/baselines/reference/moduleNoEmit.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleNoEmit.types"
          },
          {
            "path": "tests/baselines/reference/moduleOuterQualification.js"
          },
          {
            "path": "tests/baselines/reference/moduleOuterQualification.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleOuterQualification.types"
          },
          {
            "path": "tests/baselines/reference/moduleProperty1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleProperty1.js"
          },
          {
            "path": "tests/baselines/reference/moduleProperty1.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleProperty1.types"
          },
          {
            "path": "tests/baselines/reference/moduleProperty2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleProperty2.js"
          },
          {
            "path": "tests/baselines/reference/moduleProperty2.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleProperty2.types"
          },
          {
            "path": "tests/baselines/reference/moduleRedifinitionErrors.js"
          },
          {
            "path": "tests/baselines/reference/moduleRedifinitionErrors.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleRedifinitionErrors.types"
          },
          {
            "path": "tests/baselines/reference/moduleReopenedTypeOtherBlock.js"
          },
          {
            "path": "tests/baselines/reference/moduleReopenedTypeOtherBlock.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleReopenedTypeOtherBlock.types"
          },
          {
            "path": "tests/baselines/reference/moduleReopenedTypeSameBlock.js"
          },
          {
            "path": "tests/baselines/reference/moduleReopenedTypeSameBlock.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleReopenedTypeSameBlock.types"
          },
          {
            "path": "tests/baselines/reference/moduleScopingBug.js"
          },
          {
            "path": "tests/baselines/reference/moduleScopingBug.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleScopingBug.types"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt.js"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt.types"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt2.js"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt2.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt2.types"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt3.js"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt3.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt3.types"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt4.js"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt4.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt4.types"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt5.js"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt5.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt5.types"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt6.js"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt6.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleSharesNameWithImportDeclarationInsideIt6.types"
          },
          {
            "path": "tests/baselines/reference/moduleSymbolMerging.js"
          },
          {
            "path": "tests/baselines/reference/moduleSymbolMerging.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleSymbolMerging.types"
          },
          {
            "path": "tests/baselines/reference/moduleUnassignedVariable.js"
          },
          {
            "path": "tests/baselines/reference/moduleUnassignedVariable.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleUnassignedVariable.types"
          },
          {
            "path": "tests/baselines/reference/moduleVariableArrayIndexer.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleVariableArrayIndexer.js"
          },
          {
            "path": "tests/baselines/reference/moduleVariableArrayIndexer.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleVariableArrayIndexer.types"
          },
          {
            "path": "tests/baselines/reference/moduleVariables.js"
          },
          {
            "path": "tests/baselines/reference/moduleVariables.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleVariables.types"
          },
          {
            "path": "tests/baselines/reference/moduleVisibilityTest1.js"
          },
          {
            "path": "tests/baselines/reference/moduleVisibilityTest1.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleVisibilityTest1.types"
          },
          {
            "path": "tests/baselines/reference/moduleVisibilityTest2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleVisibilityTest2.js"
          },
          {
            "path": "tests/baselines/reference/moduleVisibilityTest2.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleVisibilityTest2.types"
          },
          {
            "path": "tests/baselines/reference/moduleVisibilityTest3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleVisibilityTest3.js"
          },
          {
            "path": "tests/baselines/reference/moduleVisibilityTest3.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleVisibilityTest3.types"
          },
          {
            "path": "tests/baselines/reference/moduleVisibilityTest4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleVisibilityTest4.js"
          },
          {
            "path": "tests/baselines/reference/moduleVisibilityTest4.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleVisibilityTest4.types"
          },
          {
            "path": "tests/baselines/reference/moduleWithNoValuesAsType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleWithNoValuesAsType.js"
          },
          {
            "path": "tests/baselines/reference/moduleWithNoValuesAsType.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleWithNoValuesAsType.types"
          },
          {
            "path": "tests/baselines/reference/moduleWithStatementsOfEveryKind.js"
          },
          {
            "path": "tests/baselines/reference/moduleWithStatementsOfEveryKind.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleWithStatementsOfEveryKind.types"
          },
          {
            "path": "tests/baselines/reference/moduleWithTryStatement1.js"
          },
          {
            "path": "tests/baselines/reference/moduleWithTryStatement1.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleWithTryStatement1.types"
          },
          {
            "path": "tests/baselines/reference/moduleWithValuesAsType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleWithValuesAsType.js"
          },
          {
            "path": "tests/baselines/reference/moduleWithValuesAsType.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleWithValuesAsType.types"
          },
          {
            "path": "tests/baselines/reference/module_augmentExistingAmbientVariable.errors.txt"
          },
          {
            "path": "tests/baselines/reference/module_augmentExistingAmbientVariable.js"
          },
          {
            "path": "tests/baselines/reference/module_augmentExistingAmbientVariable.symbols"
          },
          {
            "path": "tests/baselines/reference/module_augmentExistingAmbientVariable.types"
          },
          {
            "path": "tests/baselines/reference/module_augmentExistingVariable.errors.txt"
          },
          {
            "path": "tests/baselines/reference/module_augmentExistingVariable.js"
          },
          {
            "path": "tests/baselines/reference/module_augmentExistingVariable.symbols"
          },
          {
            "path": "tests/baselines/reference/module_augmentExistingVariable.types"
          },
          {
            "path": "tests/baselines/reference/module_augmentUninstantiatedModule2.js"
          },
          {
            "path": "tests/baselines/reference/module_augmentUninstantiatedModule2.symbols"
          },
          {
            "path": "tests/baselines/reference/module_augmentUninstantiatedModule2.types"
          },
          {
            "path": "tests/baselines/reference/moduledecl.js"
          },
          {
            "path": "tests/baselines/reference/moduledecl.symbols"
          },
          {
            "path": "tests/baselines/reference/moduledecl.types"
          },
          {
            "path": "tests/baselines/reference/multiModuleClodule1.js"
          },
          {
            "path": "tests/baselines/reference/multiModuleClodule1.symbols"
          },
          {
            "path": "tests/baselines/reference/multiModuleClodule1.types"
          },
          {
            "path": "tests/baselines/reference/multiModuleFundule1.js"
          },
          {
            "path": "tests/baselines/reference/multiModuleFundule1.symbols"
          },
          {
            "path": "tests/baselines/reference/multiModuleFundule1.types"
          },
          {
            "path": "tests/baselines/reference/multipleExports.errors.txt"
          },
          {
            "path": "tests/baselines/reference/multipleExports.js"
          },
          {
            "path": "tests/baselines/reference/multipleExports.symbols"
          },
          {
            "path": "tests/baselines/reference/multipleExports.types"
          },
          {
            "path": "tests/baselines/reference/multivar.errors.txt"
          },
          {
            "path": "tests/baselines/reference/multivar.js"
          },
          {
            "path": "tests/baselines/reference/multivar.symbols"
          },
          {
            "path": "tests/baselines/reference/multivar.types"
          },
          {
            "path": "tests/baselines/reference/nameCollision.js"
          },
          {
            "path": "tests/baselines/reference/nameCollision.symbols"
          },
          {
            "path": "tests/baselines/reference/nameCollision.types"
          },
          {
            "path": "tests/baselines/reference/nameCollisionWithBlockScopedVariable1.js"
          },
          {
            "path": "tests/baselines/reference/nameCollisionWithBlockScopedVariable1.symbols"
          },
          {
            "path": "tests/baselines/reference/nameCollisionWithBlockScopedVariable1.types"
          },
          {
            "path": "tests/baselines/reference/nameCollisions.errors.txt"
          },
          {
            "path": "tests/baselines/reference/nameCollisions.js"
          },
          {
            "path": "tests/baselines/reference/nameCollisions.symbols"
          },
          {
            "path": "tests/baselines/reference/nameCollisions.types"
          },
          {
            "path": "tests/baselines/reference/nameOrDottedSpan_classes.baseline"
          },
          {
            "path": "tests/baselines/reference/nameWithRelativePaths.js"
          },
          {
            "path": "tests/baselines/reference/nameWithRelativePaths.symbols"
          },
          {
            "path": "tests/baselines/reference/nameWithRelativePaths.types"
          },
          {
            "path": "tests/baselines/reference/namespaces1.js"
          },
          {
            "path": "tests/baselines/reference/namespaces1.symbols"
          },
          {
            "path": "tests/baselines/reference/namespaces1.types"
          },
          {
            "path": "tests/baselines/reference/namespaces2.js"
          },
          {
            "path": "tests/baselines/reference/namespaces2.symbols"
          },
          {
            "path": "tests/baselines/reference/namespaces2.types"
          },
          {
            "path": "tests/baselines/reference/namespacesDeclaration1.js"
          },
          {
            "path": "tests/baselines/reference/namespacesDeclaration1.symbols"
          },
          {
            "path": "tests/baselines/reference/namespacesDeclaration1.types"
          },
          {
            "path": "tests/baselines/reference/namespacesDeclaration2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/namespacesDeclaration2.js"
          },
          {
            "path": "tests/baselines/reference/namespacesDeclaration2.symbols"
          },
          {
            "path": "tests/baselines/reference/namespacesDeclaration2.types"
          },
          {
            "path": "tests/baselines/reference/negateOperatorWithAnyOtherType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/negateOperatorWithAnyOtherType.js"
          },
          {
            "path": "tests/baselines/reference/negateOperatorWithAnyOtherType.symbols"
          },
          {
            "path": "tests/baselines/reference/negateOperatorWithAnyOtherType.types"
          },
          {
            "path": "tests/baselines/reference/negateOperatorWithBooleanType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/negateOperatorWithBooleanType.js"
          },
          {
            "path": "tests/baselines/reference/negateOperatorWithBooleanType.symbols"
          },
          {
            "path": "tests/baselines/reference/negateOperatorWithBooleanType.types"
          },
          {
            "path": "tests/baselines/reference/negateOperatorWithNumberType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/negateOperatorWithNumberType.js"
          },
          {
            "path": "tests/baselines/reference/negateOperatorWithNumberType.symbols"
          },
          {
            "path": "tests/baselines/reference/negateOperatorWithNumberType.types"
          },
          {
            "path": "tests/baselines/reference/negateOperatorWithStringType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/negateOperatorWithStringType.js"
          },
          {
            "path": "tests/baselines/reference/negateOperatorWithStringType.symbols"
          },
          {
            "path": "tests/baselines/reference/negateOperatorWithStringType.types"
          },
          {
            "path": "tests/baselines/reference/nestedModules.js"
          },
          {
            "path": "tests/baselines/reference/nestedModules.symbols"
          },
          {
            "path": "tests/baselines/reference/nestedModules.types"
          },
          {
            "path": "tests/baselines/reference/nestedSelf.js"
          },
          {
            "path": "tests/baselines/reference/nestedSelf.symbols"
          },
          {
            "path": "tests/baselines/reference/nestedSelf.types"
          },
          {
            "path": "tests/baselines/reference/newArrays.js"
          },
          {
            "path": "tests/baselines/reference/newArrays.symbols"
          },
          {
            "path": "tests/baselines/reference/newArrays.types"
          },
          {
            "path": "tests/baselines/reference/newNamesInGlobalAugmentations1.js"
          },
          {
            "path": "tests/baselines/reference/newNamesInGlobalAugmentations1.symbols"
          },
          {
            "path": "tests/baselines/reference/newNamesInGlobalAugmentations1.types"
          },
          {
            "path": "tests/baselines/reference/newOperator.errors.txt"
          },
          {
            "path": "tests/baselines/reference/newOperator.js"
          },
          {
            "path": "tests/baselines/reference/newOperator.symbols"
          },
          {
            "path": "tests/baselines/reference/newOperator.types"
          },
          {
            "path": "tests/baselines/reference/noImplicitAnyModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/noImplicitAnyModule.js"
          },
          {
            "path": "tests/baselines/reference/noImplicitAnyModule.symbols"
          },
          {
            "path": "tests/baselines/reference/noImplicitAnyModule.types"
          },
          {
            "path": "tests/baselines/reference/noImplicitAnyParametersInAmbientModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/noImplicitAnyParametersInAmbientModule.js"
          },
          {
            "path": "tests/baselines/reference/noImplicitAnyParametersInAmbientModule.symbols"
          },
          {
            "path": "tests/baselines/reference/noImplicitAnyParametersInAmbientModule.types"
          },
          {
            "path": "tests/baselines/reference/noImplicitAnyParametersInModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/noImplicitAnyParametersInModule.js"
          },
          {
            "path": "tests/baselines/reference/noImplicitAnyParametersInModule.symbols"
          },
          {
            "path": "tests/baselines/reference/noImplicitAnyParametersInModule.types"
          },
          {
            "path": "tests/baselines/reference/nonExportedElementsOfMergedModules.errors.txt"
          },
          {
            "path": "tests/baselines/reference/nonExportedElementsOfMergedModules.js"
          },
          {
            "path": "tests/baselines/reference/nonExportedElementsOfMergedModules.symbols"
          },
          {
            "path": "tests/baselines/reference/nonExportedElementsOfMergedModules.types"
          },
          {
            "path": "tests/baselines/reference/nonInstantiatedModule.js"
          },
          {
            "path": "tests/baselines/reference/nonInstantiatedModule.symbols"
          },
          {
            "path": "tests/baselines/reference/nonInstantiatedModule.types"
          },
          {
            "path": "tests/baselines/reference/nullIsSubtypeOfEverythingButUndefined.js"
          },
          {
            "path": "tests/baselines/reference/nullIsSubtypeOfEverythingButUndefined.symbols"
          },
          {
            "path": "tests/baselines/reference/nullIsSubtypeOfEverythingButUndefined.types"
          },
          {
            "path": "tests/baselines/reference/objectLitArrayDeclNoNew.errors.txt"
          },
          {
            "path": "tests/baselines/reference/objectLitArrayDeclNoNew.js"
          },
          {
            "path": "tests/baselines/reference/objectLitArrayDeclNoNew.symbols"
          },
          {
            "path": "tests/baselines/reference/objectLitArrayDeclNoNew.types"
          },
          {
            "path": "tests/baselines/reference/objectLiteralShorthandPropertiesErrorWithModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/objectLiteralShorthandPropertiesErrorWithModule.js"
          },
          {
            "path": "tests/baselines/reference/objectLiteralShorthandPropertiesErrorWithModule.symbols"
          },
          {
            "path": "tests/baselines/reference/objectLiteralShorthandPropertiesErrorWithModule.types"
          },
          {
            "path": "tests/baselines/reference/objectLiteralShorthandPropertiesWithModule.js"
          },
          {
            "path": "tests/baselines/reference/objectLiteralShorthandPropertiesWithModule.symbols"
          },
          {
            "path": "tests/baselines/reference/objectLiteralShorthandPropertiesWithModule.types"
          },
          {
            "path": "tests/baselines/reference/objectLiteralShorthandPropertiesWithModuleES6.js"
          },
          {
            "path": "tests/baselines/reference/objectLiteralShorthandPropertiesWithModuleES6.symbols"
          },
          {
            "path": "tests/baselines/reference/objectLiteralShorthandPropertiesWithModuleES6.types"
          },
          {
            "path": "tests/baselines/reference/overload1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/overload1.js"
          },
          {
            "path": "tests/baselines/reference/overload1.symbols"
          },
          {
            "path": "tests/baselines/reference/overload1.types"
          },
          {
            "path": "tests/baselines/reference/overloadResolutionOverNonCTLambdas.js"
          },
          {
            "path": "tests/baselines/reference/overloadResolutionOverNonCTLambdas.symbols"
          },
          {
            "path": "tests/baselines/reference/overloadResolutionOverNonCTLambdas.types"
          },
          {
            "path": "tests/baselines/reference/overloadResolutionOverNonCTObjectLit.js"
          },
          {
            "path": "tests/baselines/reference/overloadResolutionOverNonCTObjectLit.symbols"
          },
          {
            "path": "tests/baselines/reference/overloadResolutionOverNonCTObjectLit.types"
          },
          {
            "path": "tests/baselines/reference/overloadsInDifferentContainersDisagreeOnAmbient.errors.txt"
          },
          {
            "path": "tests/baselines/reference/overloadsInDifferentContainersDisagreeOnAmbient.js"
          },
          {
            "path": "tests/baselines/reference/overloadsInDifferentContainersDisagreeOnAmbient.symbols"
          },
          {
            "path": "tests/baselines/reference/overloadsInDifferentContainersDisagreeOnAmbient.types"
          },
          {
            "path": "tests/baselines/reference/parameterPropertyInConstructor1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parameterPropertyInConstructor1.js"
          },
          {
            "path": "tests/baselines/reference/parameterPropertyInConstructor1.symbols"
          },
          {
            "path": "tests/baselines/reference/parameterPropertyInConstructor1.types"
          },
          {
            "path": "tests/baselines/reference/parameterPropertyInConstructor2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parameterPropertyInConstructor2.js"
          },
          {
            "path": "tests/baselines/reference/parameterPropertyInConstructor2.symbols"
          },
          {
            "path": "tests/baselines/reference/parameterPropertyInConstructor2.types"
          },
          {
            "path": "tests/baselines/reference/parseInvalidNames.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parseInvalidNames.js"
          },
          {
            "path": "tests/baselines/reference/parseInvalidNames.symbols"
          },
          {
            "path": "tests/baselines/reference/parseInvalidNames.types"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6kpnqZ",
      "title": "Fix parenthesizer rules for manually constructed binary expressions with `??` and `||`/`&&` mix",
      "url": "https://github.com/microsoft/TypeScript/pull/62311",
      "mergedAt": "2025-09-09T17:06:00Z",
      "updatedAt": "2025-09-09T17:11:47Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "4f94cb2aa4ddea1a18af210a0ff4d8cd88d60cba"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/factory/parenthesizerRules.ts"
          },
          {
            "path": "src/testRunner/unittests/printer.ts"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryAmpersandAmpersandExpressionWithLeftBinaryQuestionQuestionExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryAmpersandAmpersandExpressionWithRightBinaryQuestionQuestionExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryBarBarExpressionWithLeftBinaryQuestionQuestionExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryBarBarExpressionWithRightBinaryQuestionQuestionExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryCommaExpressionWithLeftBinaryQuestionQuestionExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryCommaExpressionWithRightBinaryQuestionQuestionExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryEqualsEqualsExpressionWithLeftBinaryQuestionQuestionExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryEqualsEqualsExpressionWithRightBinaryQuestionQuestionExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryQuestionQuestionExpressionWithLeftBinaryAmpersandAmpersandExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryQuestionQuestionExpressionWithLeftBinaryBarBarExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryQuestionQuestionExpressionWithLeftBinaryCommaExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryQuestionQuestionExpressionWithLeftBinaryEqualsEqualsExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryQuestionQuestionExpressionWithLeftBinaryQuestionQuestionExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryQuestionQuestionExpressionWithRightBinaryAmpersandAmpersandExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryQuestionQuestionExpressionWithRightBinaryBarBarExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryQuestionQuestionExpressionWithRightBinaryCommaExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryQuestionQuestionExpressionWithRightBinaryEqualsEqualsExpression.js"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.binaryQuestionQuestionExpressionWithRightBinaryQuestionQuestionExpression.js"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6l4kHX",
      "title": "Add missing Float16Array constructors",
      "url": "https://github.com/microsoft/TypeScript/pull/62351",
      "mergedAt": "2025-09-09T18:22:55Z",
      "updatedAt": "2025-09-09T18:22:55Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3320dfdfcf17cdcdbfccb8040ea73cf110d94ba3"
      },
      "author": {
        "login": "greggman"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/esnext.float16.d.ts"
          },
          {
            "path": "tests/cases/compiler/typedArrayConstructorOverloads.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6mvpNZ",
      "title": "Switch `libReplacement` to `false` by default and fix condition logic",
      "url": "https://github.com/microsoft/TypeScript/pull/62391",
      "mergedAt": "2025-09-11T00:02:03Z",
      "updatedAt": "2025-09-11T00:02:05Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "cdfc519b999d250252b227993980b2e45b98b46e"
      },
      "author": {
        "login": "copilot-swe-agent"
      },
      "assignees": {
        "nodes": [
          {
            "login": "DanielRosenwasser"
          },
          {
            "login": "Copilot"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/program.ts"
          },
          {
            "path": "tests/baselines/reference/allowJsCrossMonorepoPackage.trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerConditionsExcludesNode(module=esnext).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerConditionsExcludesNode(module=preserve).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=node18,moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=node18,moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=node20,moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=node20,moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerImportTsExtensions(allowimportingtsextensions=false,noemit=false).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerImportTsExtensions(allowimportingtsextensions=false,noemit=true).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerImportTsExtensions(allowimportingtsextensions=true,noemit=false).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerImportTsExtensions(allowimportingtsextensions=true,noemit=true).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerNodeModules1(module=esnext).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerNodeModules1(module=preserve).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerRelative1(module=esnext).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerRelative1(module=preserve).trace.json"
          },
          {
            "path": "tests/baselines/reference/cacheResolutions.trace.json"
          },
          {
            "path": "tests/baselines/reference/cachedModuleResolution1.trace.json"
          },
          {
            "path": "tests/baselines/reference/cachedModuleResolution2.trace.json"
          },
          {
            "path": "tests/baselines/reference/cachedModuleResolution3.trace.json"
          },
          {
            "path": "tests/baselines/reference/cachedModuleResolution4.trace.json"
          },
          {
            "path": "tests/baselines/reference/cachedModuleResolution5.trace.json"
          },
          {
            "path": "tests/baselines/reference/cachedModuleResolution6.trace.json"
          },
          {
            "path": "tests/baselines/reference/cachedModuleResolution7.trace.json"
          },
          {
            "path": "tests/baselines/reference/cachedModuleResolution8.trace.json"
          },
          {
            "path": "tests/baselines/reference/cachedModuleResolution9.trace.json"
          },
          {
            "path": "tests/baselines/reference/conditionalExportsResolutionFallback(moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/conditionalExportsResolutionFallback(moduleresolution=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/conditionalExportsResolutionFallback(moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/customConditions(resolvepackagejsonexports=false).trace.json"
          },
          {
            "path": "tests/baselines/reference/customConditions(resolvepackagejsonexports=true).trace.json"
          },
          {
            "path": "tests/baselines/reference/duplicatePackage_relativeImportWithinPackage.trace.json"
          },
          {
            "path": "tests/baselines/reference/duplicatePackage_relativeImportWithinPackage_scoped.trace.json"
          },
          {
            "path": "tests/baselines/reference/globalAugmentationModuleResolution.trace.json"
          },
          {
            "path": "tests/baselines/reference/importWithTrailingSlash.trace.json"
          },
          {
            "path": "tests/baselines/reference/importWithTrailingSlash_noResolve.trace.json"
          },
          {
            "path": "tests/baselines/reference/jsdocInTypeScript.trace.json"
          },
          {
            "path": "tests/baselines/reference/library-reference-1.trace.json"
          },
          {
            "path": "tests/baselines/reference/library-reference-10.trace.json"
          },
          {
            "path": "tests/baselines/reference/library-reference-11.trace.json"
          },
          {
            "path": "tests/baselines/reference/library-reference-12.trace.json"
          },
          {
            "path": "tests/baselines/reference/library-reference-13.trace.json"
          },
          {
            "path": "tests/baselines/reference/library-reference-14.trace.json"
          },
          {
            "path": "tests/baselines/reference/library-reference-15.trace.json"
          },
          {
            "path": "tests/baselines/reference/library-reference-2.trace.json"
          },
          {
            "path": "tests/baselines/reference/library-reference-3.trace.json"
          },
          {
            "path": "tests/baselines/reference/library-reference-4.trace.json"
          },
          {
            "path": "tests/baselines/reference/library-reference-5.trace.json"
          },
          {
            "path": "tests/baselines/reference/library-reference-6.trace.json"
          },
          {
            "path": "tests/baselines/reference/library-reference-7.trace.json"
          },
          {
            "path": "tests/baselines/reference/library-reference-8.trace.json"
          },
          {
            "path": "tests/baselines/reference/library-reference-scoped-packages.trace.json"
          },
          {
            "path": "tests/baselines/reference/maxNodeModuleJsDepthDefaultsToZero.trace.json"
          },
          {
            "path": "tests/baselines/reference/modulePreserve2.trace.json"
          },
          {
            "path": "tests/baselines/reference/modulePreserve3.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionAsTypeReferenceDirective.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionAsTypeReferenceDirectiveAmbient.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionAsTypeReferenceDirectiveScoped.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionPackageIdWithRelativeAndAbsolutePath.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithExtensions.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithExtensions_notSupported.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithExtensions_notSupported2.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithExtensions_notSupported3.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithExtensions_unexpected.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithExtensions_unexpected2.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithExtensions_withAmbientPresent.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithExtensions_withPaths.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithRequire.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithRequireAndImport.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_empty.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_notSpecified.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_oneBlank.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_oneNotFound.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_dirModuleWithIndex.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_externalModule.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_externalModulePath.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_externalModule_withPaths.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_externalTSModule.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_jsModule.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_jsonModule.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_threeLastIsBlank1.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_threeLastIsBlank2.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_threeLastIsBlank3.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_threeLastIsBlank4.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSymlinks.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSymlinks_notInNodeModules.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSymlinks_preserveSymlinks.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSymlinks_referenceTypes.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSymlinks_withOutDir.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolution_packageJson_notAtPackageRoot.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolution_packageJson_notAtPackageRoot_fakeScopedPackage.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolution_packageJson_scopedPackage.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolution_packageJson_yesAtPackageRoot.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolution_packageJson_yesAtPackageRoot_fakeScopedPackage.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolution_packageJson_yesAtPackageRoot_mainFieldInSubDirectory.trace.json"
          },
          {
            "path": "tests/baselines/reference/nestedPackageJsonRedirect(moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/nestedPackageJsonRedirect(moduleresolution=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/nestedPackageJsonRedirect(moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/node10AlternateResult_noResolution.trace.json"
          },
          {
            "path": "tests/baselines/reference/node10Alternateresult_noTypes.trace.json"
          },
          {
            "path": "tests/baselines/reference/node10IsNode_node.trace.json"
          },
          {
            "path": "tests/baselines/reference/node10IsNode_node10.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeColonModuleResolution.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeColonModuleResolution2.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAtTypesPriority.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node18).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node20).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node18).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node20).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node18).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node20).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeNextModuleResolution1.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeNextModuleResolution2.trace.json"
          },
          {
            "path": "tests/baselines/reference/packageJsonMain.trace.json"
          },
          {
            "path": "tests/baselines/reference/packageJsonMain_isNonRecursive.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution1_amd.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution1_node.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution2_classic.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution2_node.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution3_classic.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution3_node.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution4_classic.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution4_node.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution5_classic.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution5_node.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution6_classic.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution6_node.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution7_classic.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution7_node.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution8_classic.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution8_node.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_rootImport_aliasWithRoot.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_rootImport_aliasWithRoot_differentRootTypes.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_rootImport_aliasWithRoot_multipleAliases.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_rootImport_aliasWithRoot_realRootFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_rootImport_noAliasWithRoot.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_rootImport_noAliasWithRoot_realRootFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_withExtension.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_withExtensionInName.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_withExtension_MapedToNodeModules.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_withExtension_failedLookup.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathsValidation4.trace.json"
          },
          {
            "path": "tests/baselines/reference/pathsValidation5.trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNext.trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNextEsm.trace.json"
          },
          {
            "path": "tests/baselines/reference/requireOfJsonFileWithoutResolveJsonModuleAndPathMapping.trace.json"
          },
          {
            "path": "tests/baselines/reference/requireOfJsonFile_PathMapping.trace.json"
          },
          {
            "path": "tests/baselines/reference/resolutionModeCache.trace.json"
          },
          {
            "path": "tests/baselines/reference/resolvesWithoutExportsDiagnostic1(moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/resolvesWithoutExportsDiagnostic1(moduleresolution=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/scopedPackages.trace.json"
          },
          {
            "path": "tests/baselines/reference/scopedPackagesClassic.trace.json"
          },
          {
            "path": "tests/baselines/reference/selfNameModuleAugmentation.trace.json"
          },
          {
            "path": "tests/baselines/reference/tsbuild/libraryResolution/with-config.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/libraryResolution/with-config.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/libraryResolution/with-config.js"
          },
          {
            "path": "tests/baselines/reference/tsc/libraryResolution/without-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tsc/libraryResolution/without-config.js"
          },
          {
            "path": "tests/baselines/reference/tsc/moduleResolution/pnpm-style-layout.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/libraryResolution/with-config.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/libraryResolution/without-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/libraryResolution/without-config.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/correctly-handles-changes-in-lib-section-of-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/when-multiple-projects-are-open-detects-correct-default-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/correctly-handles-changes-in-lib-section-of-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossPackage_pathsAndSymlink.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_baseUrl_toDist.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_paths_sharedOutDir.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_paths_stripSrc.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_paths_toDist.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_paths_toDist2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_paths_toSrc.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_symlinks_stripSrc.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_symlinks_toDist.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_symlinks_toSrc.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportFileExcludePatterns1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportFileExcludePatterns2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportFileExcludePatterns_networkPaths.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportFileExcludePatterns_symlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportFileExcludePatterns_symlinks2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportFileExcludePatterns_windowsPaths.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportNodeModuleSymlinkRenamed.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportPackageJsonFilterExistingImport1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportPackageJsonFilterExistingImport2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportPackageJsonFilterExistingImport3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider4.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider5.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider6.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider7.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider8.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider9.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_exportMap1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_exportMap2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_exportMap3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_exportMap4.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_exportMap7.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_exportMap8.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_exportMap9.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_globalTypingsCache.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_importsMap1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_importsMap2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_importsMap3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_importsMap4.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_importsMap5.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_namespaceSameNameAsIntrinsic.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_pnpm.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_referencesCrash.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_wildcardExports1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_wildcardExports2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_wildcardExports3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportReExportFromAmbientModule.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportRelativePathToMonorepoPackage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportSymlinkedJsPackages.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/brace01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/callHierarchyContainerNameServer.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/completionEntryDetailAcrossFiles01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/completionEntryDetailAcrossFiles02.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/completions01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/completions02.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/completions03.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/completionsImport_addToNamedWithDifferentCacheValue.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/completionsImport_computedSymbolName.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/completionsImport_jsModuleExportsAssignment.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/completionsImport_mergedReExport.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/completionsImport_sortingModuleSpecifiers.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/completionsOverridingMethodCrash2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/completionsServerCommitCharacters.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/configurePlugin.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/convertFunctionToEs6Class-server1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/convertFunctionToEs6Class-server2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/declarationMapGoToDefinition.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/declarationMapsEnableMapping_NoInline.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/declarationMapsEnableMapping_NoInlineSources.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/declarationMapsGeneratedMapsEnableMapping.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/declarationMapsGeneratedMapsEnableMapping2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/declarationMapsGeneratedMapsEnableMapping3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/declarationMapsGoToDefinitionRelativeSourceRoot.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/declarationMapsGoToDefinitionSameNameDifferentDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/declarationMapsOutOfDateMapping.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/definition01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/documentHighlights01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/documentHighlights02.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/documentHighlightsTypeParameterInHeritageClause01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/fixExtractToInnerFunctionDuplicaton.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/format01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/formatBracketInSwitchCase.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/formatOnEnter.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/formatSpaceBetweenFunctionAndArrayIndex.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/formatonkey01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/getFileReferences_deduplicate.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/getFileReferences_server1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/getFileReferences_server2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/getJavaScriptSyntacticDiagnostics01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/getJavaScriptSyntacticDiagnostics02.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/getOutliningSpansForComments.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/getOutliningSpansForRegions.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/getOutliningSpansForRegionsNoSingleLineFolds.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToDefinitionScriptImportServer.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToImplementation_inDifferentFiles.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource10_mapFromAtTypes3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource11_propertyOfAlias.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource12_callbackParam.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource13_nodenext.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource14_unresolvedRequireDestructuring.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource15_bundler.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource16_callbackParamDifferentFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource17_AddsFileToProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource18_reusedFromDifferentFolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource1_localJsBesideDts.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource2_nodeModulesWithTypes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource3_nodeModulesAtTypes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource5_sameAsGoToDef1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource6_sameAsGoToDef2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource7_conditionallyMinified.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource8_mapFromAtTypes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/goToSource9_mapFromAtTypes2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/implementation01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/impliedNodeFormat.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importCompletions_importsMap1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importCompletions_importsMap2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importCompletions_importsMap3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importCompletions_importsMap4.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importCompletions_importsMap5.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importFixes_ambientCircularDefaultCrash.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importNameCodeFix_externalNonRelateive2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importNameCodeFix_externalNonRelative1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importNameCodeFix_pnpm1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importStatementCompletions_pnpm1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importStatementCompletions_pnpmTransitive.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importSuggestionsCache_ambient.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importSuggestionsCache_coreNodeModules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importSuggestionsCache_exportUndefined.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importSuggestionsCache_invalidPackageJson.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importSuggestionsCache_moduleAugmentation.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/isDefinitionAcrossGlobalProjects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/isDefinitionAcrossModuleProjects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/jsdocCallbackTag.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/jsdocCallbackTagNavigateTo.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/jsdocCallbackTagRename01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/jsdocParamTagSpecialKeywords.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/jsdocTypedefTag.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/jsdocTypedefTag1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/jsdocTypedefTag2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/jsdocTypedefTagGoToDefinition.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/jsdocTypedefTagNamespace.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/jsdocTypedefTagNavigateTo.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/jsdocTypedefTagRename01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/jsdocTypedefTagRename02.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/jsdocTypedefTagRename03.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/jsdocTypedefTagRename04.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/moveToFile_emptyTargetFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/navbar01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/navto01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/navto_serverExcludeLib.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/ngProxy1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/ngProxy2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/ngProxy3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/ngProxy4.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/nodeNextModuleKindCaching1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/nodeNextPathCompletions.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/nonJsDeclarationFilePathCompletions.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/occurrences01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/occurrences02.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/openFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/openFileWithSyntaxKind.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/packageJsonImportsFailedLookups.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_addInNextLine.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_blankTargetFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_defaultExport1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_defaultExport2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_existingImports1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_existingImports2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_globalAndLocal1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_globalAndLocal2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_knownSourceFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_multiplePastes1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_multiplePastes2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_multiplePastes3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_multiplePastes4.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_multiplePastesConsistentlyLargerInSize.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_multiplePastesConsistentlySmallerInSize.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_multiplePastesEqualInSize.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_multiplePastesGrowingAndShrinkingInSize.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_multiplePastesGrowingInSize.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_multiplePastesShrinkingInSize.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_namespaceImport.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_noImportNeeded.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_noImportNeededInUpdatedProgram.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_pasteComments.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_pasteIntoSameFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection0.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection4.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection5.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection6.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection7.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection8.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection9.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_requireImportJsx.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_revertUpdatedFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_unknownSourceFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard4.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard5.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard6.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard7.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard8.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard9.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/projectInfo01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/projectInfo02.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/projectWithNonExistentFiles.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/quickinfo01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/quickinfoVerbosityServer.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/quickinfoWrongComment.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/referenceToEmptyObject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/references01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/referencesInConfiguredProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/referencesInEmptyFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/referencesInEmptyFileWithMultipleProjects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/referencesInStringLiteralValueWithMultipleProjects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/referencesToNonPropertyNameStringLiteral.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/referencesToStringLiteralValue.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/rename01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/renameInConfiguredProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/renameNamedImport.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/renameNamespaceImport.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/rewriteRelativeImportExtensionsProjectReferences1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/rewriteRelativeImportExtensionsProjectReferences2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/rewriteRelativeImportExtensionsProjectReferences3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/semanticClassificationJs1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/signatureHelp01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/signatureHelpJSDocCallbackTag.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/tripleSlashReferenceResolutionMode.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/tsconfigComputedPropertyError.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/tsxIncrementalServer.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/typedefinition01.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/libraryResolution/with-config.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleResolution/using-referenced-project-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleResolution/using-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/does-not-expose-paths.js"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectiveScopedPackageCustomTypeRoot.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectiveWithFailedFromTypeRoot.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectiveWithTypeAsFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives1.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives10.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives11.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives12.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives13.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives2.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives3.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives4.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives5.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives6.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives7.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives8.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeReferenceDirectives9.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeRootsFromMultipleNodeModulesDirectories.trace.json"
          },
          {
            "path": "tests/baselines/reference/typeRootsFromNodeModulesInParentDirectory.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.ambientModules.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.emptyTypes.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.justIndex.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.ambient.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToSelf.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToUnmapped.trace.json"
          },
          {
            "path": "tests/baselines/reference/typingsLookup1.trace.json"
          },
          {
            "path": "tests/baselines/reference/typingsLookup2.trace.json"
          },
          {
            "path": "tests/baselines/reference/typingsLookup3.trace.json"
          },
          {
            "path": "tests/baselines/reference/typingsLookup4.trace.json"
          },
          {
            "path": "tests/baselines/reference/typingsLookupAmd.trace.json"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6oGRRw",
      "title": "Fix incorrectly ignored dts file from project reference for resolution",
      "url": "https://github.com/microsoft/TypeScript/pull/62438",
      "mergedAt": "2025-09-11T19:14:31Z",
      "updatedAt": "2025-09-11T19:44:58Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e9bcbe6ef706e0b5a34678964988eb6a9cd86cc6"
      },
      "author": {
        "login": "sheetalkamat"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sheetalkamat"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/program.ts"
          },
          {
            "path": "src/testRunner/unittests/tsbuild/moduleResolution.ts"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleResolution/resolution-from-d.ts-of-referenced-project.js"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6pWmMH",
      "title": "fix(error message): fixes issue in  error message TS1355",
      "url": "https://github.com/microsoft/TypeScript/pull/62465",
      "mergedAt": "2025-09-19T15:47:27Z",
      "updatedAt": "2025-09-19T15:47:27Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "233f392d675ccf7da3cf27d628b503d0a9302332"
      },
      "author": {
        "login": "Janhvi21"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/constAssertions.errors.txt"
          },
          {
            "path": "tests/baselines/reference/constantEnumAssert.errors.txt"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6oSsZa",
      "title": "Enable `noUncheckedSideEffectImports` by default",
      "url": "https://github.com/microsoft/TypeScript/pull/62443",
      "mergedAt": "2025-09-22T19:06:05Z",
      "updatedAt": "2025-09-23T16:20:14Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "904e7dd97dc8da1352c8e05d70829dff17c73214"
      },
      "author": {
        "login": "RyanCavanaugh"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/amdDependencyCommentName4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/autoAccessorDisallowedModifiers(target=es2017).errors.txt"
          },
          {
            "path": "tests/baselines/reference/autoAccessorDisallowedModifiers(target=esnext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/checkExportsObjectAssignPrototypeProperty.errors.txt"
          },
          {
            "path": "tests/baselines/reference/emit(jsx=preserve).errors.txt"
          },
          {
            "path": "tests/baselines/reference/emit(jsx=react).errors.txt"
          },
          {
            "path": "tests/baselines/reference/es6ImportWithoutFromClauseInEs5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/es6ImportWithoutFromClauseWithExport.errors.txt"
          },
          {
            "path": "tests/baselines/reference/extendGlobalThis.errors.txt"
          },
          {
            "path": "tests/baselines/reference/extendGlobalThis.types"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryQualifiedNameWithEs5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryQualifiedNameWithEs5.types"
          },
          {
            "path": "tests/baselines/reference/jsxImportForSideEffectsNonExtantNoError.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleAugmentationInAmbientModule5.js"
          },
          {
            "path": "tests/baselines/reference/moduleAugmentationsImports3.js"
          },
          {
            "path": "tests/baselines/reference/moduleAugmentationsImports4.js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithExtensions_unexpected2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportAssignment(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportAssignment(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportAssignment(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportAssignment(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCJSEmit1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCJSEmit1(module=node20).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCJSEmit1(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesNoDirectoryModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathsValidation4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathsValidation5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/sideEffectImports1(module=commonjs,nouncheckedsideeffectimports=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/sideEffectImports1(module=nodenext,nouncheckedsideeffectimports=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/sideEffectImports1(module=preserve,nouncheckedsideeffectimports=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/systemModule9.errors.txt"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/when-changing-`allowImportingTsExtensions`-of-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/when-changing-noUncheckedSideEffectImports-of-config-file.js"
          },
          {
            "path": "tests/cases/compiler/ambientExportDefaultErrors.ts"
          },
          {
            "path": "tests/cases/compiler/moduleAugmentationGlobal5.ts"
          },
          {
            "path": "tests/cases/compiler/moduleResolutionWithExtensions_unexpected.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6oE9K7",
      "title": "Remove no-default-lib",
      "url": "https://github.com/microsoft/TypeScript/pull/62435",
      "mergedAt": "2025-09-24T23:16:15Z",
      "updatedAt": "2025-09-24T23:16:19Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "96acaa52902feb1320e1d8ec8936b8669cca447d"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sheetalkamat"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "Herebyfile.mjs"
          },
          {
            "path": "src/compiler/builder.ts"
          },
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/emitter.ts"
          },
          {
            "path": "src/compiler/factory/nodeFactory.ts"
          },
          {
            "path": "src/compiler/parser.ts"
          },
          {
            "path": "src/compiler/program.ts"
          },
          {
            "path": "src/compiler/transformers/declarations.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/harness/fourslashImpl.ts"
          },
          {
            "path": "src/harness/harnessIO.ts"
          },
          {
            "path": "src/harness/tsserverLogger.ts"
          },
          {
            "path": "src/lib/header.d.ts"
          },
          {
            "path": "src/services/navigateTo.ts"
          },
          {
            "path": "src/services/preProcess.ts"
          },
          {
            "path": "src/services/services.ts"
          },
          {
            "path": "src/services/transpile.ts"
          },
          {
            "path": "src/services/types.ts"
          },
          {
            "path": "src/testRunner/unittests/helpers.ts"
          },
          {
            "path": "src/testRunner/unittests/helpers/virtualFileSystemWithWatch.ts"
          },
          {
            "path": "src/testRunner/unittests/reuseProgramStructure.ts"
          },
          {
            "path": "src/testRunner/unittests/services/convertToAsyncFunction.ts"
          },
          {
            "path": "src/testRunner/unittests/services/extract/symbolWalker.ts"
          },
          {
            "path": "src/testRunner/unittests/tsbuild/sample.ts"
          },
          {
            "path": "src/testRunner/unittests/tsc/incremental.ts"
          },
          {
            "path": "src/testRunner/unittests/tsc/libraryResolution.ts"
          },
          {
            "path": "tests/baselines/reference/1.0lib-noErrors.js"
          },
          {
            "path": "tests/baselines/reference/1.0lib-noErrors.symbols"
          },
          {
            "path": "tests/baselines/reference/1.0lib-noErrors.types"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/booleanLiteralsContextuallyTypedFromUnion.errors.txt"
          },
          {
            "path": "tests/baselines/reference/booleanLiteralsContextuallyTypedFromUnion.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitBundlePreservesHasNoDefaultLibDirective.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitBundlePreservesHasNoDefaultLibDirective.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitBundlePreservesHasNoDefaultLibDirective.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitPreservesHasNoDefaultLibDirective.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitPreservesHasNoDefaultLibDirective.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitPreservesHasNoDefaultLibDirective.types"
          },
          {
            "path": "tests/baselines/reference/findAllRefsImportMeta.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionImportMeta.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToTypeDefinitionImportMeta.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/jsxInferenceProducesLiteralAsExpected.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxInferenceProducesLiteralAsExpected.types"
          },
          {
            "path": "tests/baselines/reference/multiline.symbols"
          },
          {
            "path": "tests/baselines/reference/multiline.types"
          },
          {
            "path": "tests/baselines/reference/noDefaultLib.errors.txt"
          },
          {
            "path": "tests/baselines/reference/noDefaultLib.js"
          },
          {
            "path": "tests/baselines/reference/noDefaultLib.symbols"
          },
          {
            "path": "tests/baselines/reference/noDefaultLib.types"
          },
          {
            "path": "tests/baselines/reference/project/noDefaultLib/amd/noDefaultLib.errors.txt"
          },
          {
            "path": "tests/baselines/reference/project/noDefaultLib/amd/noDefaultLib.json"
          },
          {
            "path": "tests/baselines/reference/project/noDefaultLib/node/noDefaultLib.errors.txt"
          },
          {
            "path": "tests/baselines/reference/project/noDefaultLib/node/noDefaultLib.json"
          },
          {
            "path": "tests/baselines/reference/quickInfoImportMeta.baseline"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/can-reuse-module-resolutions-from-non-modified-files.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/change-affects-a-single-module-of-a-package.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/change-affects-imports.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/change-affects-tripleslash-references.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/change-affects-type-directives.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/change-affects-type-references.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/change-does-not-affect-imports-or-type-refs.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/change-doesnot-affect-type-references.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/config-path-changes.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/fetches-imports-after-npm-install.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/handles-file-preprocessing-dignostics-when-diagnostics-are-not-queried.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/handles-file-preprocessing-dignostics.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/module-kind-changes.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/redirect-no-change.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/redirect-previous-duplicate-packages.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/redirect-target-changes.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/redirect-underlying-changes.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/redirect-with-getSourceFileByPath-no-change.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/redirect-with-getSourceFileByPath-previous-duplicate-packages.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/redirect-with-getSourceFileByPath-target-changes.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/redirect-with-getSourceFileByPath-underlying-changes.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/resolution-cache-follows-imports.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/resolved-type-directives-cache-follows-type-directives.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/resolvedImports-after-re-using-an-ambient-external-module-declaration.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/rootdir-changes.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/should-not-reuse-ambient-module-declarations-from-non-modified-files.js"
          },
          {
            "path": "tests/baselines/reference/reuseProgramStructure/works-with-updated-SourceFiles.js"
          },
          {
            "path": "tests/baselines/reference/thisInTupleTypeParameterConstraints.js"
          },
          {
            "path": "tests/baselines/reference/thisInTupleTypeParameterConstraints.symbols"
          },
          {
            "path": "tests/baselines/reference/thisInTupleTypeParameterConstraints.types"
          },
          {
            "path": "tests/baselines/reference/tsbuild/amdModulesWithOut/modules-and-globals-mixed-in-amd.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/amdModulesWithOut/prepend-reports-deprecation-error.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/amdModulesWithOut/when-the-module-resolution-finds-original-source-file.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/clean/file-name-and-output-name-clashing.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/clean/tsx-with-dts-emit.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/help.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/multiFile/different-options-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/multiFile/different-options-with-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/multiFile/different-options-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/multiFile/different-options.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/multiFile/emitDeclarationOnly-false-on-commandline-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/multiFile/emitDeclarationOnly-false-on-commandline-with-declaration-and-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/multiFile/emitDeclarationOnly-false-on-commandline-with-declaration-and-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/multiFile/emitDeclarationOnly-false-on-commandline-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/multiFile/emitDeclarationOnly-false-on-commandline.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/multiFile/emitDeclarationOnly-on-commandline-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/multiFile/emitDeclarationOnly-on-commandline-with-declaration-and-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/multiFile/emitDeclarationOnly-on-commandline-with-declaration-and-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/multiFile/emitDeclarationOnly-on-commandline-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/multiFile/emitDeclarationOnly-on-commandline.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/outFile/different-options-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/outFile/different-options-with-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/outFile/different-options-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/outFile/different-options.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/outFile/emitDeclarationOnly-false-on-commandline-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/outFile/emitDeclarationOnly-false-on-commandline-with-declaration-and-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/outFile/emitDeclarationOnly-false-on-commandline-with-declaration-and-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/outFile/emitDeclarationOnly-false-on-commandline-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/outFile/emitDeclarationOnly-false-on-commandline.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/outFile/emitDeclarationOnly-on-commandline-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/outFile/emitDeclarationOnly-on-commandline-with-declaration-and-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/outFile/emitDeclarationOnly-on-commandline-with-declaration-and-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/outFile/emitDeclarationOnly-on-commandline-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/commandLine/outFile/emitDeclarationOnly-on-commandline.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/configFileErrors/multiFile/reports-syntax-errors-in-config-file-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/configFileErrors/multiFile/reports-syntax-errors-in-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/configFileErrors/outFile/reports-syntax-errors-in-config-file-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/configFileErrors/outFile/reports-syntax-errors-in-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/configFileErrors/when-tsconfig-extends-the-missing-file.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/configFileExtends/when-building-project-uses-reference-and-both-extend-config-with-include.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/configFileExtends/when-building-solution-with-projects-extends-config-with-include.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/containerOnlyReferenced/verify-that-subsequent-builds-after-initial-build-doesnt-build-anything.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/containerOnlyReferenced/when-solution-is-referenced-indirectly.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/declarationEmit/multiFile/reports-dts-generation-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/declarationEmit/multiFile/reports-dts-generation-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/declarationEmit/outFile/reports-dts-generation-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/declarationEmit/outFile/reports-dts-generation-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/declarationEmit/when-declaration-file-is-referenced-through-triple-slash-but-uses-no-references.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/declarationEmit/when-declaration-file-is-referenced-through-triple-slash.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/declarationEmit/when-declaration-file-used-inferred-type-from-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/demo/in-bad-ref-branch-reports-the-error-about-files-not-in-rootDir-at-the-import-location.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/demo/in-circular-branch-reports-the-error-about-it-by-stopping-build.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/demo/in-master-branch-with-everything-setup-correctly-and-reports-no-error.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/emitDeclarationOnly/only-dts-output-in-circular-import-project-with-emitDeclarationOnly-and-declarationMap.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/emitDeclarationOnly/only-dts-output-in-circular-import-project-with-emitDeclarationOnly.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/emitDeclarationOnly/only-dts-output-in-non-circular-imports-project-with-emitDeclarationOnly.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/emptyFiles/does-not-have-empty-files-diagnostic-when-files-is-empty-and-references-are-provided.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/emptyFiles/has-empty-files-diagnostic-when-files-is-empty-and-no-references-are-provided.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/exitCodeOnBogusFile/test-exit-code.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/extends/configDir-template.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/extends/resolves-the-symlink-path.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/fileDelete/multiFile/deleted-file-without-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/fileDelete/multiFile/detects-deleted-file.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/fileDelete/outFile/deleted-file-without-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/fileDelete/outFile/detects-deleted-file.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/inferredTypeFromTransitiveModule/inferred-type-from-transitive-module-with-isolatedModules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/inferredTypeFromTransitiveModule/inferred-type-from-transitive-module.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/inferredTypeFromTransitiveModule/reports-errors-in-files-affected-by-change-in-signature-with-isolatedModules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/javascriptProjectEmit/loads-js-based-projects-and-emits-them-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/javascriptProjectEmit/loads-js-based-projects-with-non-moved-json-files-and-emits-them-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/lateBoundSymbol/interface-is-merged-and-contains-late-bound-member.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/libraryResolution/with-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/libraryResolution/with-config.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleResolution/impliedNodeFormat-differs-between-projects-for-shared-file.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleResolution/resolution-from-d.ts-of-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleResolution/resolves-specifier-in-output-declaration-file-from-referenced-project-correctly-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleResolution/resolves-specifier-in-output-declaration-file-from-referenced-project-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleResolution/shared-resolution-should-not-report-error.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleResolution/type-reference-resolution-uses-correct-options-for-different-resolution-options-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleResolution/when-resolution-is-not-shared.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleSpecifiers/synthesized-module-specifiers-across-projects-resolve-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleSpecifiers/synthesized-module-specifiers-resolve-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noCheck/multiFile/dts-errors-with-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noCheck/multiFile/dts-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noCheck/multiFile/dts-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noCheck/multiFile/semantic-errors-with-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noCheck/multiFile/semantic-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noCheck/multiFile/semantic-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noCheck/multiFile/syntax-errors-with-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noCheck/multiFile/syntax-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noCheck/multiFile/syntax-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noCheck/outFile/dts-errors-with-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noCheck/outFile/dts-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noCheck/outFile/dts-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noCheck/outFile/semantic-errors-with-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noCheck/outFile/semantic-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noCheck/outFile/semantic-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noCheck/outFile/syntax-errors-with-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noCheck/outFile/syntax-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noCheck/outFile/syntax-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/changes-composite-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/changes-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/changes-incremental-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/changes-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/changes-with-initial-noEmit-composite-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/changes-with-initial-noEmit-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/changes-with-initial-noEmit-incremental-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/changes-with-initial-noEmit-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/dts-errors-with-declaration-enable-changes-with-incremental-as-modules-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/dts-errors-with-declaration-enable-changes-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/dts-errors-with-declaration-enable-changes-with-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/dts-errors-with-declaration-enable-changes-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/dts-errors-with-declaration-enable-changes-with-multiple-files-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/dts-errors-with-declaration-enable-changes-with-multiple-files.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/dts-errors-with-declaration-enable-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/dts-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/dts-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/dts-errors-without-dts-enabled-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/dts-errors-without-dts-enabled-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/dts-errors-without-dts-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/dts-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/semantic-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/semantic-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/semantic-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/syntax-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/syntax-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/multiFile/syntax-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/changes-composite-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/changes-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/changes-incremental-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/changes-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/changes-with-initial-noEmit-composite-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/changes-with-initial-noEmit-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/changes-with-initial-noEmit-incremental-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/changes-with-initial-noEmit-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/dts-errors-with-declaration-enable-changes-with-incremental-as-modules-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/dts-errors-with-declaration-enable-changes-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/dts-errors-with-declaration-enable-changes-with-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/dts-errors-with-declaration-enable-changes-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/dts-errors-with-declaration-enable-changes-with-multiple-files-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/dts-errors-with-declaration-enable-changes-with-multiple-files.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/dts-errors-with-declaration-enable-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/dts-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/dts-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/dts-errors-without-dts-enabled-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/dts-errors-without-dts-enabled-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/dts-errors-without-dts-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/dts-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/semantic-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/semantic-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/semantic-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/syntax-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/syntax-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmit/outFile/syntax-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/multiFile/dts-errors-with-declaration-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/multiFile/dts-errors-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/multiFile/dts-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/multiFile/dts-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/multiFile/semantic-errors-with-declaration-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/multiFile/semantic-errors-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/multiFile/semantic-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/multiFile/semantic-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/multiFile/syntax-errors-with-declaration-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/multiFile/syntax-errors-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/multiFile/syntax-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/multiFile/syntax-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/outFile/dts-errors-with-declaration-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/outFile/dts-errors-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/outFile/dts-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/outFile/dts-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/outFile/semantic-errors-with-declaration-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/outFile/semantic-errors-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/outFile/semantic-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/outFile/semantic-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/outFile/syntax-errors-with-declaration-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/outFile/syntax-errors-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/outFile/syntax-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/noEmitOnError/outFile/syntax-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outFile/baseline-sectioned-sourcemaps.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outFile/builds-till-project-specified.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outFile/clean-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outFile/cleans-till-project-specified.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outFile/non-module-projects-without-prepend.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outFile/rebuilds-completely-when-command-line-incremental-flag-changes-between-non-dts-changes-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outFile/rebuilds-completely-when-command-line-incremental-flag-changes-between-non-dts-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outFile/rebuilds-completely-when-version-in-tsbuildinfo-doesnt-match-ts-version.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outFile/tsbuildinfo-is-not-generated-when-incremental-is-set-to-false.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outFile/verify-buildInfo-absence-results-in-new-build.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outFile/when-final-project-is-not-composite-but-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outFile/when-final-project-is-not-composite-but-uses-project-references.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outFile/when-final-project-specifies-tsBuildInfoFile.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outFile/when-input-file-text-does-not-change-but-its-modified-time-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outputPaths/when-rootDir-is-not-specified-and-is-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outputPaths/when-rootDir-is-not-specified.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outputPaths/when-rootDir-is-specified-but-not-all-files-belong-to-rootDir-and-is-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outputPaths/when-rootDir-is-specified-but-not-all-files-belong-to-rootDir.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/outputPaths/when-rootDir-is-specified.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/projectReferenceWithRootDirInParent/builds-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/projectReferenceWithRootDirInParent/reports-error-for-same-tsbuildinfo-file-because-no-rootDir-in-the-base.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/projectReferenceWithRootDirInParent/reports-error-for-same-tsbuildinfo-file-without-incremental-with-tsc.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/projectReferenceWithRootDirInParent/reports-error-for-same-tsbuildinfo-file-without-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/projectReferenceWithRootDirInParent/reports-error-for-same-tsbuildinfo-file.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/projectReferenceWithRootDirInParent/reports-no-error-when-tsbuildinfo-differ.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/publicAPI/build-with-custom-transformers.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/files-containing-json-file-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/files-containing-json-file.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/importing-json-module-from-project-reference.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-and-files-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-and-files.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-of-json-along-with-other-include-and-file-name-matches-ts-file-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-of-json-along-with-other-include-and-file-name-matches-ts-file.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-of-json-along-with-other-include-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-of-json-along-with-other-include.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-with-json-not-in-rootDir-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-with-json-not-in-rootDir.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-with-json-without-rootDir-but-outside-configDirectory-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-with-json-without-rootDir-but-outside-configDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-without-outDir-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-without-outDir.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/sourcemap-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/sourcemap.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/without-outDir-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/without-outDir.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/roots/when-consecutive-and-non-consecutive-are-mixed.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/roots/when-files-are-not-consecutive.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/roots/when-multiple-root-files-are-consecutive.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/roots/when-root-file-is-from-referenced-project-and-shared-is-first.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/roots/when-root-file-is-from-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/roots/when-two-root-files-are-consecutive.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/always-builds-under-with-force-option.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/building-project-in-not-build-order-doesnt-throw-error.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/building-using-buildReferencedProject.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/building-using-getNextInvalidatedProject.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/builds-correctly-when-declarationDir-is-specified.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/builds-correctly-when-outDir-is-specified.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/builds-correctly-when-project-is-not-composite-or-doesnt-have-any-references.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/builds-downstream-projects-even-if-upstream-projects-have-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/builds-till-project-specified.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/can-detect-when-and-what-to-rebuild.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/cleaning-project-in-not-build-order-doesnt-throw-error.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/cleans-till-project-specified.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/does-not-rebuild-if-there-is-no-program-and-bundle-in-the-ts-build-info-event-if-version-doesnt-match-ts-version.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/does-not-write-any-files-in-a-dry-build.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/explainFiles.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/indicates-that-it-would-skip-builds-during-a-dry-build.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/invalidates-projects-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/listEmittedFiles.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/listFiles.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/rebuilds-completely-when-version-in-tsbuildinfo-doesnt-match-ts-version.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/rebuilds-from-start-if-force-option-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/rebuilds-when-extended-config-file-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/removes-all-files-it-built.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/reports-error-if-input-file-is-missing-with-force.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/reports-error-if-input-file-is-missing.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/sample.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/skips-builds-downstream-projects-if-upstream-projects-have-errors-with-stopBuildOnErrors-when-test-does-not-reference-core.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/skips-builds-downstream-projects-if-upstream-projects-have-errors-with-stopBuildOnErrors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/tsbuildinfo-has-error.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/when-declaration-option-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/when-declarationMap-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/when-esModuleInterop-option-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/when-input-file-text-does-not-change-but-its-modified-time-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/when-logic-specifies-tsBuildInfoFile.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/when-module-option-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/when-target-option-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/transitiveReferences/builds-correctly-when-the-referenced-project-uses-different-module-resolution.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/transitiveReferences/builds-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/transitiveReferences/reports-error-about-module-not-found-with-node-resolution-with-external-module-name.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/configFileErrors/multiFile/reports-syntax-errors-in-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/configFileErrors/outFile/reports-syntax-errors-in-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/demo/updates-with-bad-reference.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/demo/updates-with-circular-reference.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/extends/configDir-template.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/libraryResolution/with-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/libraryResolution/with-config.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/moduleResolution/build-mode-watches-for-changes-to-package-json-main-fields.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/moduleResolution/resolves-specifier-in-output-declaration-file-from-referenced-project-correctly-with-cts-and-mts-extensions.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/moduleResolutionCache/handles-the-cache-correctly-when-two-projects-use-different-module-resolution-settings.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/multiFile/does-not-go-in-loop-when-watching-when-no-files-are-emitted-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/multiFile/does-not-go-in-loop-when-watching-when-no-files-are-emitted.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/multiFile/dts-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/multiFile/dts-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/multiFile/dts-errors-without-dts-enabled-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/multiFile/dts-errors-without-dts-enabled-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/multiFile/dts-errors-without-dts-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/multiFile/dts-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/multiFile/semantic-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/multiFile/semantic-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/multiFile/semantic-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/multiFile/syntax-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/multiFile/syntax-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/multiFile/syntax-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/outFile/does-not-go-in-loop-when-watching-when-no-files-are-emitted-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/outFile/does-not-go-in-loop-when-watching-when-no-files-are-emitted.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/outFile/dts-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/outFile/dts-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/outFile/dts-errors-without-dts-enabled-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/outFile/dts-errors-without-dts-enabled-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/outFile/dts-errors-without-dts-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/outFile/dts-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/outFile/semantic-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/outFile/semantic-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/outFile/semantic-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/outFile/syntax-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/outFile/syntax-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmit/outFile/syntax-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmitOnError/multiFile/noEmitOnError-with-declaration-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmitOnError/multiFile/noEmitOnError-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmitOnError/multiFile/noEmitOnError-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmitOnError/multiFile/noEmitOnError.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmitOnError/outFile/noEmitOnError-with-declaration-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmitOnError/outFile/noEmitOnError-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmitOnError/outFile/noEmitOnError-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/noEmitOnError/outFile/noEmitOnError.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/creates-solution-in-watch-mode.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/incremental-updates-in-verbose-mode.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/reportErrors/declarationEmitErrors/introduceError/when-file-with-no-error-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/reportErrors/declarationEmitErrors/introduceError/when-fixing-errors-only-changed-file-is-emitted.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/reportErrors/declarationEmitErrors/when-file-with-no-error-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/reportErrors/declarationEmitErrors/when-fixing-error-files-all-files-are-emitted.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/reportErrors/when-preserveWatchOutput-is-not-used.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/reportErrors/when-preserveWatchOutput-is-passed-on-command-line.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/reportErrors/when-stopBuildOnErrors-is-passed-on-command-line.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/should-not-trigger-recompilation-because-of-program-emit-with-outDir-specified.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/should-not-trigger-recompilation-because-of-program-emit.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/skips-builds-downstream-projects-if-upstream-projects-have-errors-with-stopBuildOnErrors-when-test-does-not-reference-core.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/skips-builds-downstream-projects-if-upstream-projects-have-errors-with-stopBuildOnErrors.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/tsbuildinfo-has-error.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/verify-building-references-watches-only-those-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/watches-config-files-that-are-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/when-referenced-project-change-introduces-error-in-the-down-stream-project-and-then-fixes-it.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/with-circular-project-reference/builds-when-new-file-is-added,-and-its-subsequent-updates.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/with-circular-project-reference/change-builds-changes-and-reports-found-errors-message.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/with-circular-project-reference/non-local-change-does-not-start-build-of-referencing-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/with-outFile-and-non-local-change.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/with-simple-project-reference-graph/builds-when-new-file-is-added,-and-its-subsequent-updates.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/with-simple-project-reference-graph/change-builds-changes-and-reports-found-errors-message.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/with-simple-project-reference-graph/non-local-change-does-not-start-build-of-referencing-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/works-correctly-when-project-with-extended-config-is-removed.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/works-when-noUnusedParameters-changes-to-false.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/programUpdates/works-with-extended-source-files.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/projectsBuilding/when-there-are-23-projects-in-a-solution.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/projectsBuilding/when-there-are-3-projects-in-a-solution.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/projectsBuilding/when-there-are-5-projects-in-a-solution.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/projectsBuilding/when-there-are-8-projects-in-a-solution.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/publicApi/with-custom-transformers.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/reexport/Reports-errors-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/roots/when-root-file-is-from-referenced-project-and-shared-is-first.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/roots/when-root-file-is-from-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/watchEnvironment/same-file-in-multiple-projects-with-single-watcher-per-file.js"
          },
          {
            "path": "tests/baselines/reference/tsc/cancellationToken/when-emitting-buildInfo.js"
          },
          {
            "path": "tests/baselines/reference/tsc/cancellationToken/when-using-state.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/does-not-add-color-when-NO_COLOR-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped-when-host-can't-provide-terminal-width.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/when-build-not-first-argument.js"
          },
          {
            "path": "tests/baselines/reference/tsc/composite/converting-to-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsc/composite/synthetic-jsx-import-of-ESM-module-from-CJS-module-error-on-jsx-element.js"
          },
          {
            "path": "tests/baselines/reference/tsc/composite/synthetic-jsx-import-of-ESM-module-from-CJS-module-no-crash-no-jsx-element.js"
          },
          {
            "path": "tests/baselines/reference/tsc/composite/when-setting-composite-false-and-tsbuildinfo-as-null-on-command-line-but-has-tsbuild-info-in-config.js"
          },
          {
            "path": "tests/baselines/reference/tsc/composite/when-setting-composite-false-on-command-line-but-has-tsbuild-info-in-config.js"
          },
          {
            "path": "tests/baselines/reference/tsc/composite/when-setting-composite-false-on-command-line.js"
          },
          {
            "path": "tests/baselines/reference/tsc/composite/when-setting-composite-null-on-command-line.js"
          },
          {
            "path": "tests/baselines/reference/tsc/declarationEmit/multiFile/reports-dts-generation-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/declarationEmit/multiFile/reports-dts-generation-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/declarationEmit/outFile/reports-dts-generation-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/declarationEmit/outFile/reports-dts-generation-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/declarationEmit/when-pkg-references-sibling-package-through-indirect-symlink-moduleCaseChange.js"
          },
          {
            "path": "tests/baselines/reference/tsc/declarationEmit/when-pkg-references-sibling-package-through-indirect-symlink.js"
          },
          {
            "path": "tests/baselines/reference/tsc/declarationEmit/when-same-version-is-referenced-through-source-and-another-symlinked-package-moduleCaseChange.js"
          },
          {
            "path": "tests/baselines/reference/tsc/declarationEmit/when-same-version-is-referenced-through-source-and-another-symlinked-package-with-indirect-link-moduleCaseChange.js"
          },
          {
            "path": "tests/baselines/reference/tsc/declarationEmit/when-same-version-is-referenced-through-source-and-another-symlinked-package-with-indirect-link.js"
          },
          {
            "path": "tests/baselines/reference/tsc/declarationEmit/when-same-version-is-referenced-through-source-and-another-symlinked-package.js"
          },
          {
            "path": "tests/baselines/reference/tsc/declarationEmit/when-using-Windows-paths-and-uppercase-letters.js"
          },
          {
            "path": "tests/baselines/reference/tsc/extends/configDir-template-showConfig.js"
          },
          {
            "path": "tests/baselines/reference/tsc/extends/configDir-template-with-commandline.js"
          },
          {
            "path": "tests/baselines/reference/tsc/extends/configDir-template.js"
          },
          {
            "path": "tests/baselines/reference/tsc/extends/resolves-the-symlink-path.js"
          },
          {
            "path": "tests/baselines/reference/tsc/forceConsistentCasingInFileNames/when-file-is-included-from-multiple-places-with-different-casing.js"
          },
          {
            "path": "tests/baselines/reference/tsc/forceConsistentCasingInFileNames/with-relative-and-non-relative-file-resolutions.js"
          },
          {
            "path": "tests/baselines/reference/tsc/forceConsistentCasingInFileNames/with-type-ref-from-file.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/change-to-modifier-of-class-expression-field-with-declaration-emit-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/change-to-modifier-of-class-expression-field.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/change-to-type-that-gets-used-as-global-through-export-in-another-file-through-indirect-import.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/change-to-type-that-gets-used-as-global-through-export-in-another-file.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/generates-typerefs-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/multiFile/different-options-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/multiFile/different-options-with-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/multiFile/different-options-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/multiFile/different-options.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/outFile/different-options-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/outFile/different-options-with-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/outFile/different-options-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/outFile/different-options.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/react-jsx-emit-mode-with-no-backing-types-found-doesn't-crash-under---strict.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/react-jsx-emit-mode-with-no-backing-types-found-doesn't-crash.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/serializing-error-chains.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/ts-file-with-no-default-lib-that-augments-the-global-scope.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/tsbuildinfo-has-error.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/when-file-is-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/when-global-file-is-added,-the-signatures-are-updated.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/when-new-file-is-added-to-the-referenced-project-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/when-new-file-is-added-to-the-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/when-passing-filename-for-buildinfo-on-commandline.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/when-passing-rootDir-from-commandline.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/when-passing-rootDir-is-in-the-tsconfig.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/with-aliased-const-enums-with-preserveConstEnums.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/with-aliased-const-enums.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/with-aliased-in-different-file-const-enums-with-preserveConstEnums.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/with-aliased-in-different-file-const-enums.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/with-const-enums-with-preserveConstEnums.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/with-const-enums.js"
          },
          {
            "path": "tests/baselines/reference/tsc/incremental/with-only-dts-files.js"
          },
          {
            "path": "tests/baselines/reference/tsc/libraryResolution/unknown-lib.js"
          },
          {
            "path": "tests/baselines/reference/tsc/libraryResolution/when-noLib-toggles.js"
          },
          {
            "path": "tests/baselines/reference/tsc/libraryResolution/when-one-of-the-file-skips-default-lib-inclusion.js"
          },
          {
            "path": "tests/baselines/reference/tsc/libraryResolution/with-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tsc/libraryResolution/with-config.js"
          },
          {
            "path": "tests/baselines/reference/tsc/libraryResolution/without-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tsc/libraryResolution/without-config.js"
          },
          {
            "path": "tests/baselines/reference/tsc/listFilesOnly/combined-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/listFilesOnly/loose-file.js"
          },
          {
            "path": "tests/baselines/reference/tsc/moduleResolution/alternateResult.js"
          },
          {
            "path": "tests/baselines/reference/tsc/moduleResolution/package-json-scope.js"
          },
          {
            "path": "tests/baselines/reference/tsc/moduleResolution/pnpm-style-layout.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noCheck/multiFile/dts-errors-with-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noCheck/multiFile/dts-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noCheck/multiFile/dts-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noCheck/multiFile/semantic-errors-with-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noCheck/multiFile/semantic-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noCheck/multiFile/semantic-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noCheck/multiFile/syntax-errors-with-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noCheck/multiFile/syntax-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noCheck/multiFile/syntax-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noCheck/outFile/dts-errors-with-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noCheck/outFile/dts-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noCheck/outFile/dts-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noCheck/outFile/semantic-errors-with-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noCheck/outFile/semantic-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noCheck/outFile/semantic-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noCheck/outFile/syntax-errors-with-incremental-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noCheck/outFile/syntax-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noCheck/outFile/syntax-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/changes-composite-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/changes-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/changes-incremental-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/changes-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/changes-with-initial-noEmit-composite-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/changes-with-initial-noEmit-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/changes-with-initial-noEmit-incremental-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/changes-with-initial-noEmit-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/dts-errors-with-declaration-enable-changes-with-multiple-files-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/dts-errors-with-declaration-enable-changes-with-multiple-files.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/dts-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/dts-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/dts-errors-without-dts-enabled-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/dts-errors-without-dts-enabled-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/dts-errors-without-dts-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/dts-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/semantic-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/semantic-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/semantic-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/syntax-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/syntax-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/multiFile/syntax-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/changes-composite-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/changes-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/changes-incremental-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/changes-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/changes-with-initial-noEmit-composite-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/changes-with-initial-noEmit-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/changes-with-initial-noEmit-incremental-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/changes-with-initial-noEmit-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/dts-errors-with-declaration-enable-changes-with-multiple-files-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/dts-errors-with-declaration-enable-changes-with-multiple-files.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/dts-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/dts-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/dts-errors-without-dts-enabled-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/dts-errors-without-dts-enabled-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/dts-errors-without-dts-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/dts-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/semantic-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/semantic-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/semantic-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/syntax-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/syntax-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/outFile/syntax-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmit/when-project-has-strict-true.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/multiFile/dts-errors-with-declaration-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/multiFile/dts-errors-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/multiFile/dts-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/multiFile/dts-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/multiFile/file-deleted-before-fixing-error-with-noEmitOnError.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/multiFile/semantic-errors-with-declaration-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/multiFile/semantic-errors-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/multiFile/semantic-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/multiFile/semantic-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/multiFile/syntax-errors-with-declaration-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/multiFile/syntax-errors-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/multiFile/syntax-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/multiFile/syntax-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/multiFile/when-declarationMap-changes-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/multiFile/when-declarationMap-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/outFile/dts-errors-with-declaration-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/outFile/dts-errors-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/outFile/dts-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/outFile/dts-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/outFile/file-deleted-before-fixing-error-with-noEmitOnError.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/outFile/semantic-errors-with-declaration-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/outFile/semantic-errors-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/outFile/semantic-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/outFile/semantic-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/outFile/syntax-errors-with-declaration-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/outFile/syntax-errors-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/outFile/syntax-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/outFile/syntax-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/outFile/when-declarationMap-changes-discrepancies.js"
          },
          {
            "path": "tests/baselines/reference/tsc/noEmitOnError/outFile/when-declarationMap-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsc/projectReferences/default-import-interop-uses-referenced-project-settings.js"
          },
          {
            "path": "tests/baselines/reference/tsc/projectReferences/importing-const-enum-from-referenced-project-with-preserveConstEnums-and-verbatimModuleSyntax.js"
          },
          {
            "path": "tests/baselines/reference/tsc/projectReferences/referencing-ambient-const-enum-from-referenced-project-with-preserveConstEnums.js"
          },
          {
            "path": "tests/baselines/reference/tsc/projectReferences/when-project-contains-invalid-project-reference.js"
          },
          {
            "path": "tests/baselines/reference/tsc/projectReferences/when-project-references-composite-project-with-noEmit.js"
          },
          {
            "path": "tests/baselines/reference/tsc/projectReferencesConfig/default-setup-was-created-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsc/projectReferencesConfig/does-not-error-when-the-referenced-project-doesnt-have-composite-if-its-a-container-project.js"
          },
          {
            "path": "tests/baselines/reference/tsc/projectReferencesConfig/doesnt-infer-the-rootDir-from-source-paths.js"
          },
          {
            "path": "tests/baselines/reference/tsc/projectReferencesConfig/errors-when-a-file-is-outside-the-rootdir.js"
          },
          {
            "path": "tests/baselines/reference/tsc/projectReferencesConfig/errors-when-declaration-=-false.js"
          },
          {
            "path": "tests/baselines/reference/tsc/projectReferencesConfig/errors-when-the-file-list-is-not-exhaustive.js"
          },
          {
            "path": "tests/baselines/reference/tsc/projectReferencesConfig/errors-when-the-referenced-project-doesnt-exist.js"
          },
          {
            "path": "tests/baselines/reference/tsc/projectReferencesConfig/errors-when-the-referenced-project-doesnt-have-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsc/projectReferencesConfig/issues-a-nice-error-when-the-input-file-is-missing-when-module-reference-is-not-relative.js"
          },
          {
            "path": "tests/baselines/reference/tsc/projectReferencesConfig/issues-a-nice-error-when-the-input-file-is-missing.js"
          },
          {
            "path": "tests/baselines/reference/tsc/projectReferencesConfig/redirects-to-the-output-dts-file.js"
          },
          {
            "path": "tests/baselines/reference/tsc/redirect/when-redirecting-ts-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/consoleClearing/when-preserveWatchOutput-is-true-in-config-file/createWatchOfConfigFile.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/consoleClearing/when-preserveWatchOutput-is-true-in-config-file/when-createWatchProgram-is-invoked-with-configFileParseResult-on-WatchCompilerHostOfConfigFile.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/consoleClearing/with---diagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/consoleClearing/with---extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/consoleClearing/with---preserveWatchOutput.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/consoleClearing/without---diagnostics-or---extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-file-content/elides-const-enums-correctly-in-incremental-compilation.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-file-content/file-is-deleted-and-created-as-part-of-change.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-file-content/handles-new-lines-carriageReturn-lineFeed.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-file-content/handles-new-lines-lineFeed.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-file-content/should-emit-specified-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-for-configured-projects/should-always-return-the-file-itself-if-'--isolatedModules'-is-specified.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-for-configured-projects/should-always-return-the-file-itself-if-'--out'-or-'--outFile'-is-specified.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-for-configured-projects/should-be-up-to-date-with-deleted-files.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-for-configured-projects/should-be-up-to-date-with-newly-created-files.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-for-configured-projects/should-be-up-to-date-with-the-reference-map-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-for-configured-projects/should-contains-only-itself-if-a-module-file's-shape-didn't-change,-and-all-files-referencing-it-if-its-shape-changed.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-for-configured-projects/should-detect-changes-in-non-root-files.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-for-configured-projects/should-detect-non-existing-code-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-for-configured-projects/should-detect-removed-code-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-for-configured-projects/should-return-all-files-if-a-global-file-changed-shape.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-for-configured-projects/should-return-cascaded-affected-file-list.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-for-configured-projects/should-work-fine-for-files-with-circular-references.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-with-outFile-or-out-setting/config-does-not-have-out-or-outFile.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-with-outFile-or-out-setting/config-has-out.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-with-outFile-or-out-setting/config-has-outFile.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-with-outFile-or-out-setting/with---outFile-and-multiple-declaration-files-in-the-program.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/emit-with-outFile-or-out-setting/without---outFile-and-multiple-declaration-files-in-the-program.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emit/when-module-emit-is-specified-as-node/when-instead-of-filechanged-recursive-directory-watcher-is-invoked.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependencies/deepImportChanges/errors-for-.d.ts-change-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependencies/deepImportChanges/errors-for-.d.ts-change.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependencies/deepImportChanges/errors-for-.ts-change-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependencies/deepImportChanges/errors-for-.ts-change.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependencies/file-not-exporting-a-deep-multilevel-import-that-changes-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependencies/file-not-exporting-a-deep-multilevel-import-that-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependencies/transitive-exports/no-circular-import/export-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependencies/transitive-exports/no-circular-import/export.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependencies/transitive-exports/yes-circular-import/exports-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependencies/transitive-exports/yes-circular-import/exports.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependenciesAndD/deepImportChanges/errors-for-.d.ts-change-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependenciesAndD/deepImportChanges/errors-for-.d.ts-change.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependenciesAndD/deepImportChanges/errors-for-.ts-change-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependenciesAndD/deepImportChanges/errors-for-.ts-change.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependenciesAndD/file-not-exporting-a-deep-multilevel-import-that-changes-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependenciesAndD/file-not-exporting-a-deep-multilevel-import-that-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependenciesAndD/transitive-exports/no-circular-import/export-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependenciesAndD/transitive-exports/no-circular-import/export.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependenciesAndD/transitive-exports/yes-circular-import/exports-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependenciesAndD/transitive-exports/yes-circular-import/exports.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/default/deepImportChanges/errors-for-.d.ts-change-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/default/deepImportChanges/errors-for-.d.ts-change.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/default/deepImportChanges/errors-for-.ts-change-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/default/deepImportChanges/errors-for-.ts-change.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/default/file-not-exporting-a-deep-multilevel-import-that-changes-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/default/file-not-exporting-a-deep-multilevel-import-that-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/default/transitive-exports/no-circular-import/export-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/default/transitive-exports/no-circular-import/export.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/default/transitive-exports/yes-circular-import/exports-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/default/transitive-exports/yes-circular-import/exports.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/defaultAndD/deepImportChanges/errors-for-.d.ts-change-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/defaultAndD/deepImportChanges/errors-for-.d.ts-change.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/defaultAndD/deepImportChanges/errors-for-.ts-change-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/defaultAndD/deepImportChanges/errors-for-.ts-change.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/defaultAndD/file-not-exporting-a-deep-multilevel-import-that-changes-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/defaultAndD/file-not-exporting-a-deep-multilevel-import-that-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/defaultAndD/transitive-exports/no-circular-import/export-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/defaultAndD/transitive-exports/no-circular-import/export.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/defaultAndD/transitive-exports/yes-circular-import/exports-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/defaultAndD/transitive-exports/yes-circular-import/exports.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModules/deepImportChanges/errors-for-.d.ts-change-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModules/deepImportChanges/errors-for-.d.ts-change.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModules/deepImportChanges/errors-for-.ts-change-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModules/deepImportChanges/errors-for-.ts-change.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModules/file-not-exporting-a-deep-multilevel-import-that-changes-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModules/file-not-exporting-a-deep-multilevel-import-that-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModules/transitive-exports/no-circular-import/export-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModules/transitive-exports/no-circular-import/export.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModules/transitive-exports/yes-circular-import/exports-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModules/transitive-exports/yes-circular-import/exports.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModulesAndD/deepImportChanges/errors-for-.d.ts-change-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModulesAndD/deepImportChanges/errors-for-.d.ts-change.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModulesAndD/deepImportChanges/errors-for-.ts-change-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModulesAndD/deepImportChanges/errors-for-.ts-change.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModulesAndD/file-not-exporting-a-deep-multilevel-import-that-changes-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModulesAndD/file-not-exporting-a-deep-multilevel-import-that-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModulesAndD/transitive-exports/no-circular-import/export-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModulesAndD/transitive-exports/no-circular-import/export.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModulesAndD/transitive-exports/yes-circular-import/exports-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModulesAndD/transitive-exports/yes-circular-import/exports.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/extends/configDir-template.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/extends/resolves-the-symlink-path.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/jsxImportSource-option-changed.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/package-json-is-looked-up-for-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/self-name-package-reference.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/when-Windows-style-drive-root-is-lowercase.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/when-Windows-style-drive-root-is-uppercase.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/when-both-directory-symlink-target-and-import-match-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/when-both-file-symlink-target-and-import-match-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/when-changing-module-name-with-different-casing.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/when-directory-symlink-target-matches-disk-but-import-does-not.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/when-file-is-included-from-multiple-places-with-different-casing.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/when-file-symlink-target-matches-disk-but-import-does-not.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/when-import,-directory-symlink-target,-and-disk-are-all-different.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/when-import,-file-symlink-target,-and-disk-are-all-different.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/when-import-and-directory-symlink-target-agree-but-do-not-match-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/when-import-and-file-symlink-target-agree-but-do-not-match-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/when-import-matches-disk-but-directory-symlink-target-does-not.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/when-import-matches-disk-but-file-symlink-target-does-not.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/when-relative-information-file-location-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/when-renaming-file-with-different-casing.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/with-nodeNext-resolution.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/editing-module-augmentation-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/editing-module-augmentation-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/importHelpers-backing-types-removed-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/importHelpers-backing-types-removed-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/incremental-with-circular-references-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/incremental-with-circular-references-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/jsxImportSource-backing-types-added-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/jsxImportSource-backing-types-added-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/jsxImportSource-backing-types-removed-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/jsxImportSource-backing-types-removed-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/jsxImportSource-option-changed-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/jsxImportSource-option-changed-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/module-compilation/own-file-emit-with-errors-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/module-compilation/own-file-emit-with-errors-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/module-compilation/own-file-emit-without-errors-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/module-compilation/own-file-emit-without-errors-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/module-compilation/with---out-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/module-compilation/with---out-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/own-file-emit-with-errors-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/own-file-emit-with-errors-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/own-file-emit-without-errors/with-commandline-parameters-that-are-not-relative-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/own-file-emit-without-errors/with-commandline-parameters-that-are-not-relative-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/own-file-emit-without-errors/without-commandline-options-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/own-file-emit-without-errors/without-commandline-options-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/tsbuildinfo-has-error.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/when-file-with-ambient-global-declaration-file-is-deleted-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/when-file-with-ambient-global-declaration-file-is-deleted-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/with---out-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/incremental/with---out-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/libraryResolution/unknwon-lib.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/libraryResolution/with-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/libraryResolution/with-config.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/libraryResolution/without-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/libraryResolution/without-config.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/listFilesOnly/combined-with-watch.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/moduleResolution/alternateResult.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/moduleResolution/ambient-module-names-are-resolved-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/moduleResolution/diagnostics-from-cache.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/moduleResolution/late-discovered-dependency-symlink.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/moduleResolution/module-resolutions-from-file-are-partially-used.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/moduleResolution/module-resolutions-from-files-with-partially-used-import-attributes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/moduleResolution/package-json-file-is-edited-when-package-json-with-type-module-exists.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/moduleResolution/package-json-file-is-edited.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/moduleResolution/type-reference-resolutions-reuse.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/moduleResolution/type-reference-resolutions-with-impliedMode.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/moduleResolution/watches-for-changes-to-package-json-main-fields.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/multiFile/dts-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/multiFile/dts-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/multiFile/dts-errors-without-dts-enabled-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/multiFile/dts-errors-without-dts-enabled-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/multiFile/dts-errors-without-dts-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/multiFile/dts-errors.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/multiFile/semantic-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/multiFile/semantic-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/multiFile/semantic-errors.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/multiFile/syntax-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/multiFile/syntax-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/multiFile/syntax-errors.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/outFile/dts-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/outFile/dts-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/outFile/dts-errors-without-dts-enabled-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/outFile/dts-errors-without-dts-enabled-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/outFile/dts-errors-without-dts-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/outFile/dts-errors.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/outFile/semantic-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/outFile/semantic-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/outFile/semantic-errors.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/outFile/syntax-errors-with-incremental-as-modules.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/outFile/syntax-errors-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmit/outFile/syntax-errors.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmitOnError/multiFile/noEmitOnError-with-declaration-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmitOnError/multiFile/noEmitOnError-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmitOnError/multiFile/noEmitOnError-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmitOnError/multiFile/noEmitOnError.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmitOnError/outFile/noEmitOnError-with-declaration-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmitOnError/outFile/noEmitOnError-with-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmitOnError/outFile/noEmitOnError-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/noEmitOnError/outFile/noEmitOnError.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/nodeNextWatch/esm-mode-file-is-edited.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/Configure-file-diagnostics-events-are-generated-when-the-config-file-has-errors.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/Options-Diagnostic-locations-reported-correctly-with-changes-in-configFile-contents-when-options-change.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/Proper-errors-document-is-not-contained-in-project.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/Reports-errors-when-the-config-file-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/Updates-diagnostics-when-'--allowArbitraryExtensions'-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/Updates-diagnostics-when-'--noUnusedLabels'-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/add-new-files-to-a-configured-program-without-file-list.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/add-the-missing-module-file-for-inferred-project-should-remove-the-module-not-found-error.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/can-correctly-update-configured-project-when-set-of-root-files-has-changed-(new-file-in-list-of-files).js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/can-correctly-update-configured-project-when-set-of-root-files-has-changed-(new-file-on-disk).js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/can-correctly-update-configured-project-when-set-of-root-files-has-changed-through-include.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/can-handle-tsconfig-file-name-with-difference-casing.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/can-update-configured-project-when-set-of-root-files-was-not-changed.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/change-module-to-none.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/changes-in-files-are-reflected-in-project-structure.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/config-file-includes-the-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/config-file-is-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/correctly-handles-changes-in-lib-section-of-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/correctly-parses-wild-card-directories-from-implicit-glob-when-two-keys-differ-only-in-directory-seperator.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/create-configured-project-without-file-list.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/create-watch-without-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/deleted-files-affect-project-structure-2.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/deleted-files-affect-project-structure.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/extended-source-files-are-watched.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/file-in-files-is-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/files-explicitly-excluded-in-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/handle-recreated-files-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/handles-the-missing-files---that-were-added-to-program-because-they-were-added-with-tripleSlashRefs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/if-config-file-doesnt-have-errors,-they-are-not-reported.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/non-existing-directories-listed-in-config-file-input-array-should-be-able-to-handle-@types-if-input-file-list-is-empty.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/non-existing-directories-listed-in-config-file-input-array-should-be-tolerated-without-crashing-the-server.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/rename-a-module-file-and-rename-back-should-restore-the-states-for-configured-projects.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/rename-a-module-file-and-rename-back-should-restore-the-states-for-inferred-projects.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/reports-errors-correctly-with-file-not-in-rootDir.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/reports-errors-correctly-with-isolatedModules.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/should-handle-non-existing-directories-in-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/should-ignore-non-existing-files-specified-in-the-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/should-not-trigger-recompilation-because-of-program-emit/declarationDir-is-specified.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/should-not-trigger-recompilation-because-of-program-emit/when-outDir-and-declarationDir-is-specified.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/should-not-trigger-recompilation-because-of-program-emit/when-outDir-is-specified.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/should-not-trigger-recompilation-because-of-program-emit/with-outFile.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/should-not-trigger-recompilation-because-of-program-emit/without-outDir-or-outFile-is-specified-with-declaration-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/should-not-trigger-recompilation-because-of-program-emit/without-outDir-or-outFile-is-specified.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/should-properly-handle-module-resolution-changes-in-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/should-reflect-change-in-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/should-support-files-without-extensions.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/should-tolerate-config-file-errors-and-still-try-to-build-a-project.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/shouldnt-report-error-about-unused-function-incorrectly-when-file-changes-from-global-to-module.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/two-watch-programs-are-not-affected-by-each-other.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/types-should-load-from-config-file-path-if-config-exists.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/types-should-not-load-from-config-file-path-if-config-exists-but-does-not-specifies-typeRoots.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-diagnostics-and-emit-for-decorators.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-diagnostics-and-emit-when-useDefineForClassFields-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-emit-on-jsx-option-add.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-emit-on-jsx-option-change.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-errors-and-emit-when-verbatimModuleSyntax-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-errors-correctly-when-declaration-emit-is-disabled-in-compiler-options.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-errors-in-lib-file/when-module-file-with-global-definitions-changes/with-default-options.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-errors-in-lib-file/when-module-file-with-global-definitions-changes/with-skipDefaultLibCheck.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-errors-in-lib-file/when-module-file-with-global-definitions-changes/with-skipLibCheck.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-errors-in-lib-file/when-non-module-file-changes/with-default-options.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-errors-in-lib-file/when-non-module-file-changes/with-skipDefaultLibCheck.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-errors-in-lib-file/when-non-module-file-changes/with-skipLibCheck.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-errors-when-ambient-modules-of-program-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-errors-when-forceConsistentCasingInFileNames-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-errors-when-noErrorTruncation-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-errors-when-strictNullChecks-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-moduleResolution-when-resolveJsonModule-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/watched-files-when-file-is-deleted-and-new-file-is-added-as-part-of-change.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/when-changing-`allowImportingTsExtensions`-of-config-file-2.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/when-changing-`allowImportingTsExtensions`-of-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/when-changing-checkJs-of-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/when-changing-noUncheckedSideEffectImports-of-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/when-creating-extensionless-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/when-creating-new-file-in-symlinked-folder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/when-new-file-is-added-to-the-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/when-skipLibCheck-and-skipDefaultLibCheck-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/works-correctly-when-config-file-is-changed-but-its-content-havent.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/on-sample-project-with-nodenext.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/on-sample-project.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/on-transitive-references-in-different-folders-with-no-files-clause.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/on-transitive-references-in-different-folders.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/on-transitive-references-with-nodenext.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/on-transitive-references.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/watch-options-differing-between-projects.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/when-declarationMap-changes-for-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/when-referenced-project-uses-different-module-resolution.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/caching-works.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/ignores-changes-in-node_modules-that-start-with-dot/watch-with-configFile.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/ignores-changes-in-node_modules-that-start-with-dot/watch-without-configFile.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/loads-missing-files-from-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/reusing-type-ref-resolution.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/scoped-package-installation.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/should-compile-correctly-when-resolved-module-goes-missing-and-then-comes-back.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/when-dir-watcher-is-invoked-without-file-change.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/when-types-in-compiler-option-are-global-and-installed-at-later-point.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/with-modules-linked-to-sibling-folder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/works-when-included-file-with-ambient-module-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/works-when-installing-something-in-node_modules-or-@types-when-there-is-no-notification-from-fs-for-index-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/works-when-module-resolution-changes-to-ambient-module.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/works-when-renaming-node_modules-folder-that-already-contains-@types-folder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/works-when-reusing-program-with-files-from-external-library.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolveJsonModule/incremental-always-prefers-declaration-file-over-document.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-packageJson-has-types-field-when-solution-is-already-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-packageJson-has-types-field-with-preserveSymlinks-when-solution-is-already-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-packageJson-has-types-field-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-packageJson-has-types-field-with-scoped-package-when-solution-is-already-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-packageJson-has-types-field-with-scoped-package-with-preserveSymlinks-when-solution-is-already-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-packageJson-has-types-field-with-scoped-package-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-packageJson-has-types-field-with-scoped-package.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-packageJson-has-types-field.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-referencing-file-from-subFolder-when-solution-is-already-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-referencing-file-from-subFolder-with-preserveSymlinks-when-solution-is-already-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-referencing-file-from-subFolder-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-referencing-file-from-subFolder-with-scoped-package-when-solution-is-already-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-referencing-file-from-subFolder-with-scoped-package-with-preserveSymlinks-when-solution-is-already-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-referencing-file-from-subFolder-with-scoped-package-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-referencing-file-from-subFolder-with-scoped-package.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/when-referencing-file-from-subFolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/with-simple-project-when-solution-is-already-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/sourceOfProjectReferenceRedirect/with-simple-project.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-package1-built.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-Windows.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-Windows.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/extraFileExtensions-are-supported.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/host-implements-does-not-implement-hasInvalidatedResolutions.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/host-implements-hasInvalidatedResolutions.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/multiFile/noEmit-with-composite-with-emit-builder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/multiFile/noEmit-with-composite-with-semantic-builder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/multiFile/noEmitOnError-with-composite-with-emit-builder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/multiFile/noEmitOnError-with-composite-with-semantic-builder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/multiFile/semantic-builder-emitOnlyDts.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/multiFile/verifies-that-noEmit-is-handled-on-createSemanticDiagnosticsBuilderProgram.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/multiFile/when-emitting-with-emitOnlyDtsFiles.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/outFile/noEmit-with-composite-with-emit-builder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/outFile/noEmit-with-composite-with-semantic-builder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/outFile/noEmitOnError-with-composite-with-emit-builder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/outFile/noEmitOnError-with-composite-with-semantic-builder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/outFile/semantic-builder-emitOnlyDts.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/outFile/verifies-that-noEmit-is-handled-on-createSemanticDiagnosticsBuilderProgram.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/outFile/when-emitting-with-emitOnlyDtsFiles.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/verify-that-module-resolution-with-json-extension-works-when-returned-without-extension.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/verify-that-the-error-count-is-correctly-passed-down-to-the-watch-status-reporter.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/when-new-file-is-added-to-the-referenced-project-with-host-implementing-getParsedCommandLine-without-implementing-useSourceOfProjectReferenceRedirect.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/when-new-file-is-added-to-the-referenced-project-with-host-implementing-getParsedCommandLine.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/when-watching-referenced-project-when-there-is-no-config-file-name.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/when-watching-referenced-project-with-extends-when-there-is-no-config-file-name.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchApi/without-timesouts-on-host-program-gets-updated.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsEvent-for-change-is-repeated.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-false-useFsEventsOnParentDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-false.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true-useFsEventsOnParentDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-event-ends-with-tilde.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-occurs-when-file-is-still-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-when-rename-occurs-when-file-is-still-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-dynamic-polling-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-watchDirectory-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-watchFile-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders-with-synchronousWatchDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-renaming-a-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-with-outDir-and-declaration-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchFile/using-dynamic-priority-polling.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchFile/using-fixed-chunk-size-polling.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeFiles-option-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeFiles-option.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-fallbackPolling-option.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-watchDirectory-option.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-watchFile-as-watch-options-to-extend.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-watchFile-option.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/applyChangesToOpenFiles/with-applyChangedToOpenFiles-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/applyChangesToOpenFiles/with-updateOpen-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/Auto-importable-file-is-in-inferred-project-until-imported.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/Closes-AutoImportProviderProject-when-host-project-closes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/Does-not-close-when-root-files-are-redirects-that-dont-actually-exist.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/Does-not-create-an-auto-import-provider-if-there-are-too-many-dependencies.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/Does-not-create-auto-import-providers-upon-opening-projects-for-find-all-references.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/Does-not-schedule-ensureProjectForOpenFiles-on-AutoImportProviderProject-creation.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/Recovers-from-an-unparseable-package_json.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/Responds-to-automatic-changes-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/Responds-to-manual-changes-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/Responds-to-package_json-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/Reuses-autoImportProvider-when-program-structure-is-unchanged.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/Shared-source-files-between-AutoImportProvider-and-main-program.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/dependencies-are-already-in-main-program.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/projects-already-inside-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/autoImportProvider/without-dependencies-listed.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/auxiliaryProject/does-not-remove-scrips-from-InferredProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/auxiliaryProject/file-is-added-later-through-finding-definition.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/auxiliaryProject/resolution-is-reused-from-different-folder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/includes-the-parent-folder-FLLs-in-Classic-module-resolution-mode.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/includes-the-parent-folder-FLLs-in-Node-module-resolution-mode.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/loads-missing-files-from-disk.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/npm-install-works-when-timeout-occurs-after-installation.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/npm-install-works-when-timeout-occurs-inbetween-installation.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/watchDirectories-for-config-file-with-case-insensitive-file-system.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/watchDirectories-for-config-file-with-case-sensitive-file-system.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/when-calling-goto-definition-of-module.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/when-creating-new-file-in-symlinked-folder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/when-node_modules-dont-receive-event-for-the-@types-file-addition.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/works-using-legacy-resolution-logic.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cancellationT/Geterr-is-cancellable.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cancellationT/Lower-priority-tasks-are-cancellable.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cancellationT/is-attached-to-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/codeFix/install-package-when-serialized.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/codeFix/install-package.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/CompileOnSaveAffectedFileListRequest-when-projectFile-is-not-specified.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/CompileOnSaveAffectedFileListRequest-when-projectFile-is-specified.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/compileOnSaveAffectedFileList-projectUsesOutFile-should-be-true-if-outFile-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/compileOnSaveAffectedFileList-projectUsesOutFile-should-not-be-returned-if-not-set.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/configProjects-all-projects-without-projectPath.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/configProjects-cascaded-affected-file-list.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/configProjects-circular-references.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/configProjects-compileOnSave-disabled.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/configProjects-compileOnSave-in-base-tsconfig.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/configProjects-detect-changes-in-non-root-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/configProjects-global-file-shape-changed.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/configProjects-isolatedModules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/configProjects-module-shape-changed.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/configProjects-noEmit.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/configProjects-non-existing-code.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/configProjects-outFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/configProjects-removed-code.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/configProjects-uptodate-with-changes-in-non-open-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/configProjects-uptodate-with-deleted-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/configProjects-uptodate-with-new-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/configProjects-uptodate-with-reference-map-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/dtsFileChange-in-global-file-with-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/dtsFileChange-in-global-file-with-decorator-emit.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/dtsFileChange-in-global-file-with-dts-emit.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/dtsFileChange-in-global-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/dtsFileChange-in-module-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/emit-in-project-with-dts-emit.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/emit-in-project-with-module-with-dts-emit.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/emit-in-project-with-module.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/emit-in-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/emit-specified-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/emit-with-richRepsonse-as-false.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/emit-with-richRepsonse-as-true.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/emit-with-richRepsonse-as-undefined.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/line-endings.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/should-not-emit-js-files-in-external-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/compileOnSave/use-projectRoot-as-current-directory.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completions/in-project-reference-setup-with-path-mapping-with-existing-import-without-includeCompletionsForModuleExports.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completions/in-project-reference-setup-with-path-mapping-with-existing-import.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completions/in-project-reference-setup-with-path-mapping-without-includeCompletionsForModuleExports.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completions/in-project-reference-setup-with-path-mapping.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completions/in-project-where-there-are-no-imports-but-has-project-references-setup.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completions/works-when-files-are-included-from-two-different-drives-of-windows.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completions/works.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completionsIncomplete/ambient-module-specifier-resolutions-do-not-count-against-the-resolution-limit.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completionsIncomplete/resolves-more-when-available-from-module-specifier-cache-(1).js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completionsIncomplete/resolves-more-when-available-from-module-specifier-cache-(2).js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completionsIncomplete/works-for-transient-symbols-between-requests.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completionsIncomplete/works-with-PackageJsonAutoImportProvider.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completionsIncomplete/works.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configFileSearch/should-stop-at-projectRootPath-if-given.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configFileSearch/should-use-projectRootPath-when-searching-for-inferred-project-again-2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configFileSearch/should-use-projectRootPath-when-searching-for-inferred-project-again.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configFileSearch/tsconfig-for-the-file-does-not-exist.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configFileSearch/tsconfig-for-the-file-exists.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configFileSearch/when-projectRootPath-is-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configFileSearch/when-projectRootPath-is-present-but-file-is-not-from-project-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/Open-ref-of-configured-project-when-open-file-gets-added-to-the-project-as-part-of-configured-file-update-buts-its-open-file-references-are-all-closed-when-the-update-happens.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/Open-ref-of-configured-project-when-open-file-gets-added-to-the-project-as-part-of-configured-file-update.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/add-and-then-remove-a-config-file-in-a-folder-with-loose-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/add-and-then-remove-a-config-file-when-parent-folder-has-config-file-and-file-from-first-config-is-not-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/add-and-then-remove-a-config-file-when-parent-folder-has-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/add-and-then-remove-a-config-file-with-sibling-jsconfig-file-and-file-from-first-config-is-not-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/add-and-then-remove-a-config-file-with-sibling-jsconfig-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/add-new-files-to-a-configured-project-without-file-list.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/can-correctly-update-configured-project-when-set-of-root-files-has-changed-(new-file-in-list-of-files).js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/can-correctly-update-configured-project-when-set-of-root-files-has-changed-(new-file-on-disk).js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/can-update-configured-project-when-set-of-root-files-was-not-changed.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/changed-module-resolution-reflected-when-specifying-files-list.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/create-configured-project-with-the-file-list.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/create-configured-project-without-file-list.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/creating-new-file-and-then-open-it-after-watcher-is-invoked,-ask-errors-on-it-after-old-one-without-file-being-in-config.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/creating-new-file-and-then-open-it-after-watcher-is-invoked,-ask-errors-on-it-after-old-one.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/creating-new-file-and-then-open-it-after-watcher-is-invoked,-ask-errors-on-it-before-old-one-without-file-being-in-config.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/creating-new-file-and-then-open-it-after-watcher-is-invoked,-ask-errors-on-it-before-old-one.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/creating-new-file-and-then-open-it-before-watcher-is-invoked,-ask-errors-on-it-after-old-one-without-file-being-in-config.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/creating-new-file-and-then-open-it-before-watcher-is-invoked,-ask-errors-on-it-after-old-one.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/creating-new-file-and-then-open-it-before-watcher-is-invoked,-ask-errors-on-it-before-old-one-without-file-being-in-config.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/creating-new-file-and-then-open-it-before-watcher-is-invoked,-ask-errors-on-it-before-old-one.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/failed-lookup-locations-uses-parent-most-node_modules-directory.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/files-are-properly-detached-when-language-service-is-disabled.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/files-explicitly-excluded-in-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/handle-recreated-files-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/open-file-become-a-part-of-configured-project-if-it-is-referenced-from-root-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/should-be-able-to-handle-@types-if-input-file-list-is-empty.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/should-be-tolerated-without-crashing-the-server-when-reading-tsconfig-file-fails.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/should-be-tolerated-without-crashing-the-server.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/should-ignore-non-existing-files-specified-in-the-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/should-keep-the-configured-project-when-the-opened-file-is-referenced-by-the-project-but-not-its-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/should-not-close-configured-project-after-closing-last-open-file,-but-should-be-closed-on-next-file-open-if-its-not-the-file-from-same-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/should-properly-handle-module-resolution-changes-in-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/should-reuse-same-project-if-file-is-opened-from-the-configured-project-that-has-no-open-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/should-stop-watching-the-extended-configs-of-closed-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/should-tolerate-config-file-errors-and-still-try-to-build-a-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/should-tolerate-invalid-include-files-that-start-in-subDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/should-watch-the-extended-configs-of-multiple-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/syntactic-features-work-even-if-language-service-is-disabled.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/when-default-configured-project-does-not-contain-the-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/when-file-name-starts-with-caret.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/when-multiple-projects-are-open-detects-correct-default-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/does-not-jump-to-source-if-inlined-sources.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/findAllReferences-starting-at-definition.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/findAllReferences-target-does-not-exist.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/findAllReferences.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/findAllReferencesFull-definition-is-in-mapped-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/findAllReferencesFull.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/getDefinitionAndBoundSpan-with-file-navigation.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/getDefinitionAndBoundSpan.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/getEditsForFileRename-when-referencing-project-doesnt-include-file-and-its-renamed.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/getEditsForFileRename.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/goToDefinition-target-does-not-exist.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/goToDefinition.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/goToImplementation.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/goToType.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/navigateTo.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/navigateToAll-file-is-not-specified-but-project-is.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/navigateToAll-neither-file-not-project-is-specified.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/renameLocations-starting-at-definition.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/renameLocations-target-does-not-exist.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/renameLocations.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/declarationFileMaps/renameLocationsFull.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/documentRegistry/Caches-the-source-file-if-script-info-is-orphan,-and-orphan-script-info-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/documentRegistry/Caches-the-source-file-if-script-info-is-orphan.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/documentRegistry/works-when-reusing-orphan-script-info-with-different-scriptKind.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/duplicatePackages/works-with-import-fixes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/dynamicFiles/dynamic-file-with-projectRootPath-fails-when-useInferredProjectPerProjectRoot-is-false.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/dynamicFiles/dynamic-file-with-projectRootPath-with-useInferredProjectPerProjectRoot.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/dynamicFiles/dynamic-file-with-reference-paths-without-external-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/dynamicFiles/dynamic-file-without-external-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/dynamicFiles/opening-and-closing-untitled-files-when-projectRootPath-is-different-from-currentDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/dynamicFiles/opening-untitled-files-without-inferred-project-per-projectRootPath.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/dynamicFiles/opening-untitled-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/dynamicFiles/untitled-can-convert-positions-to-locations.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/dynamicFiles/untitled.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/dynamicFiles/walkThroughSnippet.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/dynamicFiles/when-changing-scriptKind-of-the-untitled-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/largeFileReferenced/when-large-js-file-is-included-by-module-resolution.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/largeFileReferenced/when-large-js-file-is-included-by-tsconfig.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/largeFileReferenced/when-large-ts-file-is-included-by-module-resolution.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/largeFileReferenced/when-large-ts-file-is-included-by-tsconfig.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectLanguageServiceState/language-service-disabled-events-are-triggered.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectLanguageServiceState/large-file-size-is-determined-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectLoading/change-is-detected-in-an-extended-config-file-when-using-default-event-handler.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectLoading/change-is-detected-in-an-extended-config-file-when-using-event-handler.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectLoading/change-is-detected-in-the-config-file-when-using-default-event-handler.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectLoading/change-is-detected-in-the-config-file-when-using-event-handler.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectLoading/lazyConfiguredProjectsFromExternalProject-is-disabled-when-using-default-event-handler.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectLoading/lazyConfiguredProjectsFromExternalProject-is-disabled-when-using-event-handler.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectLoading/lazyConfiguredProjectsFromExternalProject-is-false-when-using-default-event-handler.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectLoading/lazyConfiguredProjectsFromExternalProject-is-false-when-using-event-handler.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectLoading/lazyConfiguredProjectsFromExternalProject-is-true-and-file-is-opened-when-using-default-event-handler.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectLoading/lazyConfiguredProjectsFromExternalProject-is-true-and-file-is-opened-when-using-event-handler.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectLoading/opening-original-location-project-disableSourceOfProjectReferenceRedirect-when-using-default-event-handler.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectLoading/opening-original-location-project-disableSourceOfProjectReferenceRedirect-when-using-event-handler.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectLoading/opening-original-location-project-when-using-default-event-handler.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectLoading/opening-original-location-project-when-using-event-handler.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectLoading/project-is-created-by-open-file-when-using-default-event-handler.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectLoading/project-is-created-by-open-file-when-using-event-handler.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-project-is-at-root-level.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-project-is-not-at-root-level.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-should-always-return-the-file-itself-if---isolatedModules-is-specified.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-should-always-return-the-file-itself-if---out-or---outFile-is-specified.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-should-be-up-to-date-with-deleted-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-should-be-up-to-date-with-newly-created-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-should-be-up-to-date-with-the-reference-map-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-should-contains-only-itself.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-should-detect-changes-in-non-root-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-should-detect-non-existing-code-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-should-detect-removed-code-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-should-return-all-files-if-a-global-file-changed-shape.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-should-return-cascaded-affected-file-list.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-should-work-fine-for-files-with-circular-references.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-when---outFile-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-when-adding-new-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/when-event-handler-is-set-in-the-session-and-when-both-options-are-not-set.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-project-is-at-root-level.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-project-is-not-at-root-level.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-should-always-return-the-file-itself-if---isolatedModules-is-specified.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-should-always-return-the-file-itself-if---out-or---outFile-is-specified.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-should-be-up-to-date-with-deleted-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-should-be-up-to-date-with-newly-created-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-should-be-up-to-date-with-the-reference-map-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-should-contains-only-itself.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-should-detect-changes-in-non-root-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-should-detect-non-existing-code-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-should-detect-removed-code-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-should-return-all-files-if-a-global-file-changed-shape.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-should-return-cascaded-affected-file-list.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-should-work-fine-for-files-with-circular-references.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-when---outFile-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-when-adding-new-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/with-noGetErrOnBackgroundUpdate-and-when-both-options-are-not-set.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-project-is-at-root-level.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-project-is-not-at-root-level.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-should-always-return-the-file-itself-if---isolatedModules-is-specified.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-should-always-return-the-file-itself-if---out-or---outFile-is-specified.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-should-be-up-to-date-with-deleted-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-should-be-up-to-date-with-newly-created-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-should-be-up-to-date-with-the-reference-map-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-should-contains-only-itself.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-should-detect-changes-in-non-root-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-should-detect-non-existing-code-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-should-detect-removed-code-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-should-return-all-files-if-a-global-file-changed-shape.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-should-return-cascaded-affected-file-list.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-should-work-fine-for-files-with-circular-references.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-when---outFile-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-when-adding-new-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/projectUpdatedInBackground/without-noGetErrOnBackgroundUpdate-and-when-both-options-are-not-set.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/watchEvents/canUseWatchEvents-on-windows.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/watchEvents/canUseWatchEvents-without-canUseEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/events/watchEvents/canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/caches-auto-imports-in-the-same-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/does-not-invalidate-the-cache-when-package.json-is-changed-inconsequentially.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/does-not-invalidate-the-cache-when-referenced-project-changes-inconsequentially-referencedInProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/does-not-invalidate-the-cache-when-referenced-project-changes-inconsequentially.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/does-not-store-transient-symbols-through-program-updates.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/invalidates-the-cache-when-a-file-is-opened-with-different-contents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/invalidates-the-cache-when-files-are-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/invalidates-the-cache-when-new-files-are-added.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/invalidates-the-cache-when-package.json-change-results-in-AutoImportProvider-change.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/invalidates-the-cache-when-referenced-project-changes-signatures-referencedInProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/exportMapCache/invalidates-the-cache-when-referenced-project-changes-signatures.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/extends/configDir-template.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/extends/resolves-the-symlink-path.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/can-correctly-update-external-project-when-set-of-root-files-has-changed.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/can-handle-tsconfig-file-name-with-difference-casing-with-lazyConfiguredProjectsFromExternalProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/can-handle-tsconfig-file-name-with-difference-casing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/can-update-external-project-when-set-of-root-files-was-not-changed.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/correctly-handles-changes-in-lib-section-of-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/correctly-handling-add-or-remove-tsconfig---1-with-lazyConfiguredProjectsFromExternalProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/correctly-handling-add-or-remove-tsconfig---1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/correctly-handling-add-or-remove-tsconfig---2-with-lazyConfiguredProjectsFromExternalProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/correctly-handling-add-or-remove-tsconfig---2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/deleting-config-file-opened-from-the-external-project-works-with-lazyConfiguredProjectsFromExternalProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/deleting-config-file-opened-from-the-external-project-works.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/does-not-crash-if-external-file-does-not-exist.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/external-project-for-dynamic-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/external-project-that-included-config-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/external-project-with-included-config-file-opened-after-configured-project-and-then-closed.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/external-project-with-included-config-file-opened-after-configured-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/handles-creation-of-external-project-with-jsconfig-before-jsconfig-creation-watcher-is-invoked.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/handles-loads-existing-configured-projects-of-external-projects-when-lazyConfiguredProjectsFromExternalProject-is-disabled.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/language-service-disabled-state-is-updated-in-external-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/load-global-plugins.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/remove-not-listed-external-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/should-handle-non-existing-directories-in-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/should-not-close-external-project-with-no-open-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/externalProjects/when-file-name-starts-with-caret.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/findAllReferences/does-not-try-to-open-a-file-in-a-project-that-was-updated-and-no-longer-has-the-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-both-directory-symlink-target-and-import-match-disk-with-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-both-directory-symlink-target-and-import-match-disk-with-target-and-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-both-directory-symlink-target-and-import-match-disk-with-target-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-both-directory-symlink-target-and-import-match-disk.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-both-file-symlink-target-and-import-match-disk-with-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-both-file-symlink-target-and-import-match-disk-with-target-and-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-both-file-symlink-target-and-import-match-disk-with-target-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-both-file-symlink-target-and-import-match-disk.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-changing-module-name-with-different-casing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-directory-symlink-target-matches-disk-but-import-does-not-with-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-directory-symlink-target-matches-disk-but-import-does-not-with-target-and-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-directory-symlink-target-matches-disk-but-import-does-not-with-target-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-directory-symlink-target-matches-disk-but-import-does-not.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-file-is-included-from-multiple-places-with-different-casing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-file-symlink-target-matches-disk-but-import-does-not-with-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-file-symlink-target-matches-disk-but-import-does-not-with-target-and-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-file-symlink-target-matches-disk-but-import-does-not-with-target-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-file-symlink-target-matches-disk-but-import-does-not.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import,-directory-symlink-target,-and-disk-are-all-different-with-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import,-directory-symlink-target,-and-disk-are-all-different-with-target-and-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import,-directory-symlink-target,-and-disk-are-all-different-with-target-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import,-directory-symlink-target,-and-disk-are-all-different.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import,-file-symlink-target,-and-disk-are-all-different-with-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import,-file-symlink-target,-and-disk-are-all-different-with-target-and-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import,-file-symlink-target,-and-disk-are-all-different-with-target-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import,-file-symlink-target,-and-disk-are-all-different.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import-and-directory-symlink-target-agree-but-do-not-match-disk-with-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import-and-directory-symlink-target-agree-but-do-not-match-disk-with-target-and-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import-and-directory-symlink-target-agree-but-do-not-match-disk-with-target-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import-and-directory-symlink-target-agree-but-do-not-match-disk.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import-and-file-symlink-target-agree-but-do-not-match-disk-with-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import-and-file-symlink-target-agree-but-do-not-match-disk-with-target-and-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import-and-file-symlink-target-agree-but-do-not-match-disk-with-target-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import-and-file-symlink-target-agree-but-do-not-match-disk.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import-matches-disk-but-directory-symlink-target-does-not-with-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import-matches-disk-but-directory-symlink-target-does-not-with-target-and-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import-matches-disk-but-directory-symlink-target-does-not-with-target-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import-matches-disk-but-directory-symlink-target-does-not.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import-matches-disk-but-file-symlink-target-does-not-with-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import-matches-disk-but-file-symlink-target-does-not-with-target-and-link-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import-matches-disk-but-file-symlink-target-does-not-with-target-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/when-import-matches-disk-but-file-symlink-target-does-not.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/works-when-extends-is-specified-with-a-case-insensitive-file-system.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/works-when-renaming-file-with-different-casing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/formatSettings/works-when-extends-is-specified-with-a-case-insensitive-file-system.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getApplicableRefactors/returns-the-affected-range-of-text-for-'move-to-file'-and-'move-to-new-file'-refactors.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getApplicableRefactors/returns-the-affected-range-of-text-for-extract-symbol-refactor.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getApplicableRefactors/returns-the-affected-range-of-text-for-extract-type-refactor.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getApplicableRefactors/works-when-taking-position.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getEditsForFileRename/works-when-moving-file-to-and-from-folder-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getEditsForFileRename/works-when-moving-file-to-and-from-folder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getEditsForFileRename/works-with-file-moved-to-inferred-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getEditsForFileRename/works-with-multiple-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getEditsForFileRename/works-with-when-file-is-opened-after-seeing-file-existance-on-the-disk-with-updateOpen.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getEditsForFileRename/works-with-when-file-is-opened-after-seeing-file-existance-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getEditsForFileRename/works-with-when-file-is-opened-before-seeing-file-existance-on-the-disk-closed-before-change-with-updateOpen.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getEditsForFileRename/works-with-when-file-is-opened-before-seeing-file-existance-on-the-disk-closed-before-change.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getEditsForFileRename/works-with-when-file-is-opened-before-seeing-file-existance-on-the-disk-with-updateOpen.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getEditsForFileRename/works-with-when-file-is-opened-before-seeing-file-existance-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getExportReferences/array-destructuring-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getExportReferences/const-variable-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getExportReferences/nested-object-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getExportReferences/object-declaration-references-that-renames-destructured-property.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getExportReferences/object-destructuring-declaration.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getFileReferences/should-get-file-references.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getFileReferences/should-skip-lineText-from-file-references.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getMoveToRefactoringFileSuggestions/should-show-js-files-when-moving-non-jsx-content-from-jsx-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getMoveToRefactoringFileSuggestions/should-show-ts-files-when-moving-non-tsx-content-from-tsx-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getMoveToRefactoringFileSuggestions/skips-lib.d.ts-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getMoveToRefactoringFileSuggestions/suggests-only-.js-file-for-a-.js-filepath.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getMoveToRefactoringFileSuggestions/suggests-only-.ts-file-for-a-.ts-filepath.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/getMoveToRefactoringFileSuggestions/works-for-suggesting-a-list-of-files,-excluding-node_modules-within-a-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/goToDefinition/does-not-issue-errors-on-jsdoc-in-TS.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/goToDefinition/does-not-issue-errors-on-jsdoc-in-TS2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/importHelpers/import-helpers-successfully.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/importHelpers/should-not-crash-in-tsserver.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/inconsistentErrorInEditor/should-not-error-2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/inconsistentErrorInEditor/should-not-error.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/inferredProjects/Setting-compiler-options-for-inferred-projects-when-there-are-no-open-files-should-not-schedule-any-refresh.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/inferredProjects/closing-file-with-shared-resolutions.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/inferredProjects/create-inferred-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/inferredProjects/disable-inferred-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/inferredProjects/inferred-projects-per-project-root-with-case-insensitive-system.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/inferredProjects/inferred-projects-per-project-root-with-case-sensitive-system.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/inferredProjects/inferred-projects-per-project-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/inferredProjects/project-settings-for-inferred-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/inferredProjects/regression-test---should-infer-typeAcquisition-for-inferred-projects-when-set-undefined.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/inferredProjects/should-still-retain-configured-project-created-while-opening-the-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/inferredProjects/should-support-files-without-extensions.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/inferredProjects/should-use-only-one-inferred-project-if-useOneInferredProject-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/inferredProjects/when-existing-inferred-project-has-no-root-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/inlayHints/with-updateOpen-request-does-not-corrupt-documents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/jsdocTag/for-completions,-should-provide-a-string-for-a-working-link-in-a-comment.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/jsdocTag/for-completions,-should-provide-display-parts-for-a-working-link-in-a-comment.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/jsdocTag/for-completions-full,-should-provide-a-string-for-a-working-link-in-a-comment.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/jsdocTag/for-completions-full,-should-provide-display-parts-for-a-working-link-in-a-comment.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/jsdocTag/for-quickinfo,-should-provide-a-string-for-a-working-link-in-a-comment.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/jsdocTag/for-quickinfo,-should-provide-a-string-for-a-working-link-in-a-tag.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/jsdocTag/for-quickinfo,-should-provide-display-parts-for-a-working-link-in-a-comment.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/jsdocTag/for-quickinfo,-should-provide-display-parts-plus-a-span-for-a-working-link-in-a-tag.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/jsdocTag/for-quickinfo-full,-should-provide-a-string-for-a-working-link-in-a-comment.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/jsdocTag/for-quickinfo-full,-should-provide-a-string-for-a-working-link-in-a-tag.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/jsdocTag/for-quickinfo-full,-should-provide-display-parts-plus-a-span-for-a-working-link-in-a-comment.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/jsdocTag/for-quickinfo-full,-should-provide-display-parts-plus-a-span-for-a-working-link-in-a-tag.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/jsdocTag/for-signature-help,-should-provide-a-string-for-a-working-link-in-a-comment.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/jsdocTag/for-signature-help,-should-provide-display-parts-for-a-working-link-in-a-comment.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/jsdocTag/for-signature-help-full,-should-provide-a-string-for-a-working-link-in-a-comment.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/jsdocTag/for-signature-help-full,-should-provide-display-parts-for-a-working-link-in-a-comment.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/languageService/should-support-multiple-projects-with-the-same-file-under-differing-paths-settings.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/languageService/should-work-correctly-on-case-sensitive-file-systems.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/libraryResolution/with-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/libraryResolution/with-config.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/maxNodeModuleJsDepth/handles-resolutions-when-currentNodeModulesDepth-changes-when-referencing-file-from-another-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/maxNodeModuleJsDepth/should-be-set-to-2-if-the-project-has-js-root-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/maxNodeModuleJsDepth/should-return-to-normal-state-when-all-js-root-files-are-removed-from-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/metadataInResponse/can-pass-through-metadata-when-the-command-returns-array.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/metadataInResponse/can-pass-through-metadata-when-the-command-returns-object.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/metadataInResponse/returns-undefined-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleResolution/alternateResult.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleResolution/package-json-file-is-edited-when-package-json-with-type-module-exists.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleResolution/package-json-file-is-edited.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleResolution/using-referenced-project-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleResolution/using-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleSpecifierCache/caches-importability-within-a-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleSpecifierCache/caches-module-specifiers-within-a-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleSpecifierCache/does-not-invalidate-the-cache-when-new-files-are-added.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleSpecifierCache/invalidates-module-specifiers-when-changes-happen-in-contained-node_modules-directories.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleSpecifierCache/invalidates-the-cache-when-local-packageJson-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleSpecifierCache/invalidates-the-cache-when-module-resolution-settings-change.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleSpecifierCache/invalidates-the-cache-when-symlinks-are-added-or-removed.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleSpecifierCache/invalidates-the-cache-when-user-preferences-change.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/navTo/should-de-duplicate-symbols-when-searching-all-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/navTo/should-de-duplicate-symbols.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/navTo/should-not-include-type-symbols.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/navTo/should-work-with-Deprecated.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/occurences/should-be-marked-if-only-on-string-values.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/openfile/can-open-same-file-again.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/openfile/different-content-refreshes-sourceFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/openfile/does-not-refresh-sourceFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/openfile/edits-on-file-and-then-close-does-not-refresh-sourceFile-if-contents-match.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/openfile/edits-on-file-and-then-close-refreshes-sourceFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/openfile/project-root-is-used-with-case-insensitive-system.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/openfile/project-root-is-used-with-case-sensitive-system.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/openfile/realoaded-with-empty-content.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/openfile/uses-existing-project-even-if-project-refresh-is-pending.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/openfile/when-file-makes-edits-to-add/remove-comment-directives,-they-are-handled-correcrly.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/packageJsonInfo/detects-new-package.json-files-that-are-added,-caches-them,-and-watches-them.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/packageJsonInfo/finds-multiple-package.json-files-when-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/packageJsonInfo/finds-package.json-on-demand,-watches-for-deletion,-and-removes-them-from-cache.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/packageJsonInfo/handles-empty-package.json.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/packageJsonInfo/handles-errors-in-json-parsing-of-package.json.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/partialSemanticServer/files-are-added-to-inferred-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/partialSemanticServer/should-not-crash-when-external-module-name-resolution-is-reused.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/partialSemanticServer/should-not-create-autoImportProvider-or-handle-package-jsons.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/partialSemanticServer/should-not-include-auto-type-reference-directives.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/partialSemanticServer/should-not-include-referenced-files-from-unopened-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/partialSemanticServer/should-support-go-to-definition-on-module-specifiers.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/partialSemanticServer/syntactic-diagnostics-are-returned-with-no-error.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/partialSemanticServer/throws-unsupported-commands.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/pasteEdits/adds-paste-edits.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/pasteEdits/should-not-error.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/plugins/With-global-plugins.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/plugins/With-local-plugins.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/plugins/With-session-and-custom-protocol-message.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/plugins/getSupportedCodeFixes-can-be-proxied.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/plugins/gets-external-files-with-config-file-reload.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/plugins/new-files-with-non-ts-extensions-with-wildcard-matching.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/plugins/when-plugins-use-LS-to-get-program-and-update-is-pending.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/plugins/when-scriptKind-changes-for-the-external-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/pluginsAsync/adds-external-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/pluginsAsync/plugins-are-not-loaded-immediately.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/pluginsAsync/plugins-evaluation-in-correct-order-even-if-imports-resolve-out-of-order.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/pluginsAsync/project-is-closed-before-plugins-are-loaded.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/pluginsAsync/project-is-deferred-closed-before-plugins-are-loaded.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/pluginsAsync/sends-projectsUpdatedInBackground-event.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/configFileDiagnostic-events-are-generated-when-the-config-file-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/configFileDiagnostic-events-are-generated-when-the-config-file-doesnt-have-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/configFileDiagnostic-events-are-generated-when-the-config-file-has-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/configFileDiagnostic-events-are-not-generated-when-the-config-file-does-not-include-file-opened-and-config-file-has-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/configFileDiagnostic-events-are-not-generated-when-the-config-file-does-not-include-file-opened-and-doesnt-contain-any-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/configFileDiagnostic-events-are-not-generated-when-the-config-file-has-errors-but-suppressDiagnosticEvents-is-true.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/configFileDiagnostic-events-contains-the-project-reference-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/configured-projects---diagnostics-for-corrupted-config-1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/configured-projects---diagnostics-for-corrupted-config-2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/configured-projects---diagnostics-for-missing-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/correct-errors-when-resolution-resolves-to-file-that-has-same-ambient-module-and-is-also-module.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/diagnostics-after-noUnusedLabels-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/document-is-not-contained-in-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/dts-errors-when-files-dont-belong-to-common-root-with-declarationDir.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/dts-errors-when-files-dont-belong-to-common-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/external-project---diagnostics-for-missing-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/file-rename-on-wsl2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/folder-rename-updates-project-structure-and-reports-no-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/for-external-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/for-inferred-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/getting-errors-before-opening-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/npm-install-when-timeout-occurs-after-installation.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/npm-install-when-timeout-occurs-inbetween-installation.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/reports-errors-correctly-when-file-referenced-by-inferred-project-root,-is-opened-right-after-closing-the-root-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/should-not-report-incorrect-error-when-json-is-root-file-found-by-tsconfig.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/should-report-error-when-json-is-not-root-file-found-by-tsconfig.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/when-opening-new-file-that-doesnt-exist-on-disk-yet-with-projectRoot.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/when-opening-new-file-that-doesnt-exist-on-disk-yet-without-projectRoot.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/when-options-change.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/when-semantic-error-returns-includes-global-error-gerErr-with-sync-commands.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/when-semantic-error-returns-includes-global-error-getErr.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/when-semantic-error-returns-includes-global-error-geterrForProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/compile-on-save-emits-same-output-as-project-build-with-external-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-dependency-and-change-to-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-dependency-and-change-to-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-dependency-and-local-change-to-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-dependency-and-local-change-to-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-dependency-with-project-and-change-to-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-dependency-with-project-and-change-to-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-dependency-with-project-and-local-change-to-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-dependency-with-project-and-local-change-to-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-dependency-with-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-dependency-with-usage-project-and-change-to-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-dependency-with-usage-project-and-change-to-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-dependency-with-usage-project-and-local-change-to-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-dependency-with-usage-project-and-local-change-to-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-dependency-with-usage-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-usage-and-change-to-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-usage-and-change-to-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-usage-and-local-change-to-dependency-with-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-usage-and-local-change-to-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-usage-and-local-change-to-usage-with-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-usage-and-local-change-to-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-usage-with-project-and-change-to-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-usage-with-project-and-change-to-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-usage-with-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/save-on-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-dependency-and-change-to-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-dependency-and-change-to-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-dependency-and-local-change-to-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-dependency-and-local-change-to-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-dependency-with-project-and-change-to-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-dependency-with-project-and-change-to-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-dependency-with-project-and-local-change-to-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-dependency-with-project-and-local-change-to-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-dependency-with-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-usage-and-change-to-depenedency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-usage-and-change-to-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-usage-and-local-change-to-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-usage-and-local-change-to-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-usage-with-project-and-change-to-depenedency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-usage-with-project-and-change-to-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-usage-with-project-and-local-change-to-dependency.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-usage-with-project-and-local-change-to-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-usage-with-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceCompileOnSave/when-dependency-project-is-not-open-and-save-on-usage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceErrors/when-options-for-dependency-project-are-different-from-usage-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceErrors/with-module-scenario-when-dependency-project-is-not-open-gerErr-with-sync-commands.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceErrors/with-module-scenario-when-dependency-project-is-not-open-getErr.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceErrors/with-module-scenario-when-dependency-project-is-not-open-geterrForProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceErrors/with-module-scenario-when-the-depedency-file-is-open-gerErr-with-sync-commands.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceErrors/with-module-scenario-when-the-depedency-file-is-open-getErr.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceErrors/with-module-scenario-when-the-depedency-file-is-open-geterrForProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceErrors/with-non-module-when-dependency-project-is-not-open-gerErr-with-sync-commands.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceErrors/with-non-module-when-dependency-project-is-not-open-getErr.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceErrors/with-non-module-when-dependency-project-is-not-open-geterrForProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceErrors/with-non-module-when-the-depedency-file-is-open-gerErr-with-sync-commands.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceErrors/with-non-module-when-the-depedency-file-is-open-getErr.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferenceErrors/with-non-module-when-the-depedency-file-is-open-geterrForProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/ancestor-and-project-ref-management.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/auto-import-with-referenced-project-when-built-with-disableSourceOfProjectReferenceRedirect.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/auto-import-with-referenced-project-when-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/auto-import-with-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/can-successfully-find-references-with-out-option.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/disables-looking-into-the-child-project-if-disableReferencedProjectLoad-is-set-in-first-indirect-project-but-not-in-another-one.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/disables-looking-into-the-child-project-if-disableReferencedProjectLoad-is-set-in-indirect-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/disables-looking-into-the-child-project-if-disableReferencedProjectLoad-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/does-not-error-on-container-only-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/find-refs-to-decl-in-other-proj-when-proj-is-loaded-and-refd-proj-loading-is-disabled-and-proj-ref-redirects-are-disabled-and-a-decl-map-is-missing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/find-refs-to-decl-in-other-proj-when-proj-is-loaded-and-refd-proj-loading-is-disabled-and-proj-ref-redirects-are-disabled-and-a-decl-map-is-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/find-refs-to-decl-in-other-proj-when-proj-is-loaded-and-refd-proj-loading-is-disabled-and-proj-ref-redirects-are-enabled-and-a-decl-map-is-missing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/find-refs-to-decl-in-other-proj-when-proj-is-loaded-and-refd-proj-loading-is-disabled-and-proj-ref-redirects-are-enabled-and-a-decl-map-is-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/find-refs-to-decl-in-other-proj-when-proj-is-loaded-and-refd-proj-loading-is-enabled-and-proj-ref-redirects-are-disabled-and-a-decl-map-is-missing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/find-refs-to-decl-in-other-proj-when-proj-is-loaded-and-refd-proj-loading-is-enabled-and-proj-ref-redirects-are-disabled-and-a-decl-map-is-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/find-refs-to-decl-in-other-proj-when-proj-is-loaded-and-refd-proj-loading-is-enabled-and-proj-ref-redirects-are-enabled-and-a-decl-map-is-missing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/find-refs-to-decl-in-other-proj-when-proj-is-loaded-and-refd-proj-loading-is-enabled-and-proj-ref-redirects-are-enabled-and-a-decl-map-is-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/find-refs-to-decl-in-other-proj-when-proj-is-not-loaded-and-refd-proj-loading-is-disabled-and-proj-ref-redirects-are-disabled-and-a-decl-map-is-missing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/find-refs-to-decl-in-other-proj-when-proj-is-not-loaded-and-refd-proj-loading-is-disabled-and-proj-ref-redirects-are-disabled-and-a-decl-map-is-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/find-refs-to-decl-in-other-proj-when-proj-is-not-loaded-and-refd-proj-loading-is-disabled-and-proj-ref-redirects-are-enabled-and-a-decl-map-is-missing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/find-refs-to-decl-in-other-proj-when-proj-is-not-loaded-and-refd-proj-loading-is-disabled-and-proj-ref-redirects-are-enabled-and-a-decl-map-is-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/find-refs-to-decl-in-other-proj-when-proj-is-not-loaded-and-refd-proj-loading-is-enabled-and-proj-ref-redirects-are-disabled-and-a-decl-map-is-missing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/find-refs-to-decl-in-other-proj-when-proj-is-not-loaded-and-refd-proj-loading-is-enabled-and-proj-ref-redirects-are-disabled-and-a-decl-map-is-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/find-refs-to-decl-in-other-proj-when-proj-is-not-loaded-and-refd-proj-loading-is-enabled-and-proj-ref-redirects-are-enabled-and-a-decl-map-is-missing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/find-refs-to-decl-in-other-proj-when-proj-is-not-loaded-and-refd-proj-loading-is-enabled-and-proj-ref-redirects-are-enabled-and-a-decl-map-is-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/finding-local-reference-doesnt-load-ancestor-sibling-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/finding-references-in-overlapping-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-packageJson-has-types-field-and-has-index.ts-and-solution-is-built-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-packageJson-has-types-field-and-has-index.ts-and-solution-is-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-packageJson-has-types-field-and-has-index.ts-and-solution-is-not-built-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-packageJson-has-types-field-and-has-index.ts-and-solution-is-not-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-packageJson-has-types-field-and-has-index.ts-with-scoped-package-and-solution-is-built-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-packageJson-has-types-field-and-has-index.ts-with-scoped-package-and-solution-is-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-packageJson-has-types-field-and-has-index.ts-with-scoped-package-and-solution-is-not-built-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-packageJson-has-types-field-and-has-index.ts-with-scoped-package-and-solution-is-not-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-referencing-file-from-subFolder-and-solution-is-built-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-referencing-file-from-subFolder-and-solution-is-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-referencing-file-from-subFolder-and-solution-is-not-built-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-referencing-file-from-subFolder-and-solution-is-not-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-referencing-file-from-subFolder-with-scoped-package-and-solution-is-built-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-referencing-file-from-subFolder-with-scoped-package-and-solution-is-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-referencing-file-from-subFolder-with-scoped-package-and-solution-is-not-built-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/monorepo-like-with-symlinks-when-referencing-file-from-subFolder-with-scoped-package-and-solution-is-not-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/new-file-is-added-to-the-referenced-project-when-referenced-project-is-not-open-with-disableSourceOfProjectReferenceRedirect.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/new-file-is-added-to-the-referenced-project-when-referenced-project-is-not-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/new-file-is-added-to-the-referenced-project-when-referenced-project-is-open-with-disableSourceOfProjectReferenceRedirect.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/new-file-is-added-to-the-referenced-project-when-referenced-project-is-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/project-is-directly-referenced-by-solution.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/project-is-indirectly-referenced-by-solution.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/referencing-const-enum-from-referenced-project-with-preserveConstEnums.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/reusing-d.ts-files-from-composite-and-non-composite-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/root-file-is-file-from-referenced-project-and-using-declaration-maps.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/root-file-is-file-from-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/solution-with-its-own-files-and-disables-looking-into-the-child-project-if-disableReferencedProjectLoad-is-set-in-first-indirect-project-but-not-in-another-one.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/solution-with-its-own-files-and-disables-looking-into-the-child-project-if-disableReferencedProjectLoad-is-set-in-indirect-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/solution-with-its-own-files-and-disables-looking-into-the-child-project-if-disableReferencedProjectLoad-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/solution-with-its-own-files-and-project-found-is-not-solution-but-references-open-file-through-project-reference.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/solution-with-its-own-files-and-project-is-indirectly-referenced-by-solution.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/special-handling-of-localness-when-using-arrow-function-as-object-literal-property-types.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/special-handling-of-localness-when-using-arrow-function-as-object-literal-property.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/special-handling-of-localness-when-using-arrow-function-assignment.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/special-handling-of-localness-when-using-method-of-class-expression.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/special-handling-of-localness-when-using-object-literal-property.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-file-is-not-part-of-first-config-tree-found-appConfig-not-composite-with-file-open-before-revert.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-file-is-not-part-of-first-config-tree-found-appConfig-not-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-file-is-not-part-of-first-config-tree-found-demoConfig-change-with-file-open-before-revert.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-file-is-not-part-of-first-config-tree-found-demoConfig-change.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-file-is-not-part-of-first-config-tree-found-finds-default-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-file-is-not-part-of-first-config-tree-found-reload-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-file-is-not-part-of-first-config-tree-found-solutionConfig-delete-with-file-open-before-revert.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-file-is-not-part-of-first-config-tree-found-solutionConfig-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-file-is-not-part-of-first-config-tree-found-solutionConfig-without-reference-to-demo-with-file-open-before-revert.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-file-is-not-part-of-first-config-tree-found-solutionConfig-without-reference-to-demo.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-files-from-two-projects-are-open-and-one-project-references.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/when-the-referenced-projects-have-allowJs-and-emitDeclarationOnly.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/with-disableSolutionSearching-solution-and-siblings-are-not-loaded.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/with-dts-file-next-to-ts-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dts-change-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dts-change-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dts-change-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dts-change-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dts-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dts-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dts-created.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dts-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dts-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dts-rewrite-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dts-rewrite-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dts-rewrite-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dts-rewrite-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dtsMap-change-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dtsMap-change-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dtsMap-change-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dtsMap-change-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dtsMap-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dtsMap-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dtsMap-created.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dtsMap-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dtsMap-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dtsMap-rewrite-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dtsMap-rewrite-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dtsMap-rewrite-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/dependency-dtsMap-rewrite-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/rename-locations.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/usage-file-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configHasNoReference/usage-file-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dts-change-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dts-change-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dts-change-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dts-change-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dts-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dts-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dts-created.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dts-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dts-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dts-rewrite-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dts-rewrite-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dts-rewrite-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dts-rewrite-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dtsMap-change-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dtsMap-change-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dtsMap-change-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dtsMap-change-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dtsMap-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dtsMap-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dtsMap-created.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dtsMap-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dtsMap-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dtsMap-rewrite-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dtsMap-rewrite-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dtsMap-rewrite-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-dtsMap-rewrite-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-source-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/dependency-source-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/rename-locations.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/usage-file-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/usage-file-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/configWithReference/when-projects-are-not-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dts-change-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dts-change-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dts-change-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dts-change-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dts-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dts-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dts-created.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dts-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dts-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dts-rewrite-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dts-rewrite-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dts-rewrite-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dts-rewrite-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dtsMap-change-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dtsMap-change-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dtsMap-change-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dtsMap-change-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dtsMap-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dtsMap-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dtsMap-created.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dtsMap-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dtsMap-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dtsMap-rewrite-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dtsMap-rewrite-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dtsMap-rewrite-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/dependency-dtsMap-rewrite-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/rename-locations.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/usage-file-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependency/disabledSourceRef/usage-file-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dts-change-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dts-change-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dts-change-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dts-change-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dts-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dts-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dts-created.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dts-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dts-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dts-rewrite-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dts-rewrite-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dts-rewrite-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dts-rewrite-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dtsMap-change-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dtsMap-change-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dtsMap-change-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dtsMap-change-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dtsMap-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dtsMap-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dtsMap-created.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dtsMap-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dtsMap-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dtsMap-rewrite-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dtsMap-rewrite-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dtsMap-rewrite-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/dependency-dtsMap-rewrite-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/goToDef-and-rename-locations-and-deleting-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/goToDef-and-rename-locations.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/usage-file-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configHasNoReference/usage-file-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dts-change-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dts-change-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dts-change-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dts-change-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dts-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dts-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dts-created.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dts-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dts-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dts-rewrite-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dts-rewrite-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dts-rewrite-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dts-rewrite-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dtsMap-change-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dtsMap-change-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dtsMap-change-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dtsMap-change-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dtsMap-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dtsMap-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dtsMap-created.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dtsMap-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dtsMap-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dtsMap-rewrite-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dtsMap-rewrite-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dtsMap-rewrite-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-dtsMap-rewrite-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-source-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/dependency-source-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/goToDef-and-rename-locations-and-deleting-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/goToDef-and-rename-locations.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/usage-file-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/usage-file-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/configWithReference/when-projects-are-not-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dts-change-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dts-change-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dts-change-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dts-change-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dts-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dts-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dts-created.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dts-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dts-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dts-rewrite-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dts-rewrite-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dts-rewrite-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dts-rewrite-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dtsMap-change-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dtsMap-change-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dtsMap-change-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dtsMap-change-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dtsMap-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dtsMap-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dtsMap-created.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dtsMap-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dtsMap-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dtsMap-rewrite-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dtsMap-rewrite-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dtsMap-rewrite-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/dependency-dtsMap-rewrite-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/goToDef-and-rename-locations-and-deleting-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/goToDef-and-rename-locations.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/usage-file-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/dependencyAndUsage/disabledSourceRef/usage-file-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/can-go-to-definition-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dts-change-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dts-change-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dts-change-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dts-change-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dts-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dts-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dts-created.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dts-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dts-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dts-rewrite-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dts-rewrite-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dts-rewrite-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dts-rewrite-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dtsMap-change-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dtsMap-change-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dtsMap-change-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dtsMap-change-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dtsMap-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dtsMap-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dtsMap-created.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dtsMap-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dtsMap-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dtsMap-rewrite-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dtsMap-rewrite-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dtsMap-rewrite-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/dependency-dtsMap-rewrite-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/usage-file-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configHasNoReference/usage-file-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/can-go-to-definition-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dts-change-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dts-change-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dts-change-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dts-change-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dts-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dts-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dts-created.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dts-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dts-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dts-rewrite-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dts-rewrite-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dts-rewrite-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dts-rewrite-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dtsMap-change-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dtsMap-change-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dtsMap-change-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dtsMap-change-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dtsMap-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dtsMap-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dtsMap-created.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dtsMap-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dtsMap-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dtsMap-rewrite-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dtsMap-rewrite-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dtsMap-rewrite-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-dtsMap-rewrite-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-source-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/dependency-source-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/usage-file-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/usage-file-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/configWithReference/when-projects-are-not-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/can-go-to-definition-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dts-change-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dts-change-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dts-change-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dts-change-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dts-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dts-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dts-created.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dts-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dts-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dts-rewrite-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dts-rewrite-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dts-rewrite-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dts-rewrite-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dtsMap-change-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dtsMap-change-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dtsMap-change-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dtsMap-change-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dtsMap-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dtsMap-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dtsMap-created.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dtsMap-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dtsMap-not-present.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dtsMap-rewrite-as-rename-action-before-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dtsMap-rewrite-as-rename-no-timeout.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dtsMap-rewrite-as-rename-timeout-after-delete.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/dependency-dtsMap-rewrite-as-rename-timeout-after-write.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/usage-file-changes-with-timeout-before-request.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferencesSourcemap/usageProject/disabledSourceRef/usage-file-changes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectRootFiles/when-root-file-is-from-referenced-project-and-shared-is-first.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectRootFiles/when-root-file-is-from-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/File-in-multiple-projects-at-opened-and-closed-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/Orphan-source-files-are-handled-correctly-on-watch-trigger.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/Properly-handle-Windows-style-outDir.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/assert-when-removing-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/changes-in-closed-files-are-reflected-in-project-structure.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/clear-mixed-content-file-after-closing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/config-file-is-deleted.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/correctly-migrate-files-between-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/deferred-files-in-the-project-context-with-lazyConfiguredProjectsFromExternalProject.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/deferred-files-in-the-project-context.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/deleted-files-affect-project-structure.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/does-not-look-beyond-node_modules-folders-for-default-configured-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/external-project-including-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/file-opened-is-in-configured-project-that-will-be-removed.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/file-with-name-constructor.js-doesnt-cause-issue-with-typeAcquisition-when-safe-type-list.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/files-opened-and-closed-affecting-multiple-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/files-with-mixed-content-are-handled-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/getting-errors-from-closed-script-info-does-not-throw-exception-because-of-getting-project-from-orphan-script-info.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/handles-delayed-directory-watch-invoke-on-file-creation.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/handles-the-missing-files-added-with-tripleslash-ref.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/ignores-files-excluded-by-a-custom-safe-type-list.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/ignores-files-excluded-by-a-legacy-safe-type-list.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/ignores-files-excluded-by-the-default-type-list.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/js-file-opened-is-in-configured-project-that-will-be-removed.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/loading-files-with-correct-priority.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/loose-file-included-in-config-file-(applyCodeChanges).js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/loose-file-included-in-config-file-(openClientFile).js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/no-project-structure-update-on-directory-watch-invoke-on-open-file-save.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/no-tsconfig-script-block-diagnostic-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/project-structure-update-is-deferred-if-files-are-not-added-or-removed.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/references-on-file-opened-is-in-configured-project-that-will-be-removed.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/regression-test-for-crash-in-acquireOrUpdateDocument.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/reload-regular-file-after-closing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/requests-are-done-on-file-on-pendingReload-but-has-svc-for-previous-version.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/should-create-new-inferred-projects-for-files-excluded-from-a-configured-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/should-disable-features-when-the-files-are-too-large.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/should-not-crash-when-opening-a-file-in-a-project-with-a-disabled-language-service.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/snapshot-from-different-caches-are-incompatible.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/synchronizeProjectList-provides-redirect-info-when-requested.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/synchronizeProjectList-provides-updates-to-redirect-info-when-requested.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/synchronizeProjectList-returns-correct-information-when-base-configuration-file-cannot-be-resolved-and-redirect-info-is-requested.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/synchronizeProjectList-returns-correct-information-when-base-configuration-file-cannot-be-resolved.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/syntax-tree-cache-handles-changes-in-project-settings.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projects/tsconfig-script-block-support.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/sample-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/transitive-references-with-deleting-referenced-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/transitive-references-with-deleting-transitively-referenced-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/transitive-references-with-edit-in-referenced-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/transitive-references-with-edit-on-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/transitive-references-with-non-local-edit.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/trasitive-references-without-files-with-deleting-referenced-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/trasitive-references-without-files-with-deleting-transitively-referenced-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/trasitive-references-without-files-with-edit-in-referenced-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/trasitive-references-without-files-with-edit-on-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/trasitive-references-without-files-with-non-local-edit.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/refactors/handles-canonicalization-of-tsconfig-path.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/refactors/handles-moving-statement-to-an-existing-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/refactors/handles-moving-statements-to-a-TS-file-that-is-not-included-in-the-TS-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/refactors/handles-moving-statements-to-a-non-TS-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/refactors/handles-text-changes-in-tsconfig.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/refactors/use-formatting-options.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/regionDiagnostics/diagnostics-for-select-nodes-and-whole-file-for-multiple-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/regionDiagnostics/diagnostics-for-select-nodes-in-a-single-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/regionDiagnostics/region-diagnostics-is-skipped-for-@ts-nocheck-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/regionDiagnostics/region-diagnostics-is-skipped-for-small-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/regionDiagnostics/region-does-not-have-suggestion.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/regionDiagnostics/region-has-suggestion.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/reload/should-work-when-script-info-doesnt-have-any-project-open.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/reload/should-work-with-temp-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/reloadProjects/configured-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/reloadProjects/external-project-with-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/reloadProjects/external-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/reloadProjects/inferred-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/rename/export-default-anonymous-function-works-with-prefixText-and-suffixText-when-disabled.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/rename/rename-TS-file-with-js-extension.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/rename/rename-behavior-is-based-on-file-of-rename-initiation.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/rename/with-symlinks-and-case-difference.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/rename/works-with-fileToRename.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/rename/works-with-prefixText-and-suffixText-when-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/avoid-unnecessary-lookup-invalidation-on-save.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/can-load-typings-that-are-proper-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/disable-suggestion-diagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/non-relative-module-name-from-files-in-different-folders.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/non-relative-module-name-from-files-in-same-folder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/non-relative-module-name-from-inferred-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/not-sharing-across-references.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/npm-install-@types-works.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/relative-module-name-from-files-in-different-folders.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/relative-module-name-from-files-in-same-folder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/renaming-module-should-restore-the-states-for-configured-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/renaming-module-should-restore-the-states-for-inferred-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/sharing-across-references.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/should-property-handle-missing-config-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/should-remove-the-module-not-found-error.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/suggestion-diagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/suppressed-diagnostic-events.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/types-should-load-from-config-file-path-if-config-exists.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/types-should-not-load-from-config-file-path-if-config-exists-but-does-not-specifies-typeRoots.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolves-to-ambient-module.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-watching-node_modules-as-part-of-wild-card-directories-in-config-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-watching-node_modules-in-inferred-project-for-failed-lookup-closed-script-infos.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/works-correctly-when-typings-are-added-or-removed.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/skipLibCheck/jsonly-external-project-with-skipLibCheck-as-false.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/skipLibCheck/jsonly-external-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/skipLibCheck/jsonly-inferred-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/skipLibCheck/reports-semantic-error-in-configured-js-project-with-tscheck.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/skipLibCheck/reports-semantic-error-in-configured-project-with-tscheck.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/skipLibCheck/reports-semantic-error-with-tscheck.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/skipLibCheck/should-not-report-bind-errors-for-declaration-files-with-skipLibCheck=true.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/smartSelection/works-for-simple-JavaScript.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/module-resolution-when-project-compiles-from-sources.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/module-resolution-when-project-has-node_modules-setup-but-doesnt-have-modules-in-typings-folder-and-then-recompiles.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/module-resolution-when-project-recompiles-after-deleting-generated-folders.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/module-resolution-with-path-mapping-when-project-compiles-from-sources.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/module-resolution-with-path-mapping-when-project-has-node_modules-setup-but-doesnt-have-modules-in-typings-folder-and-then-recompiles.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/module-resolution-with-path-mapping-when-project-recompiles-after-deleting-generated-folders.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Windows-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Windows.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Windows-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Windows.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/rename-in-common-file-renames-all-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/when-not-symlink-but-differs-in-casing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symlinkCache/contains-symlinks-discovered-by-project-references-resolution-after-program-creation.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/syntacticServer/files-go-to-inferred-project-and-semantic-operations-fail.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/syntacticServer/should-not-include-auto-type-reference-directives.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/syntacticServer/should-not-include-referenced-files-from-unopened-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/syntacticServer/throws-on-unsupported-commands.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/syntaxOperations/file-is-removed-and-added-with-different-content.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/counts-files-by-extension.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/detects-whether-language-service-was-disabled.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/does-not-expose-paths.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/does-nothing-for-inferred-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/even-for-project-with-ts-check-in-config.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/not-for-ts-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/only-sends-an-event-once.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/sends-event-for-inferred-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/sends-telemetry-for-extends,-files,-include,-exclude,-and-compileOnSave.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/sends-telemetry-for-file-sizes.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/sends-telemetry-for-typeAcquisition-settings.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/works-with-external-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/textStorage/should-be-able-to-return-the-file-size-when-a-JS-file-is-too-large-to-load-into-text.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typeAquisition/does-not-depend-on-extension.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typeAquisition/prefer-typings-in-second-pass.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typeOnlyImportChains/exportDefault-typeOnlyImportDefault-exportDefault-importDefault.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typeOnlyImportChains/namedExport-exportNamespaceFrom-typeOnlyNamedImport-namedExport-namedImport.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typeOnlyImportChains/namedExport-typeOnlyExportFrom-exportStarFrom-namedImport.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typeOnlyImportChains/namedExport-typeOnlyNamedImport-namedExport-namedImport.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typeOnlyImportChains/namedExport-typeOnlyNamespaceImport-exportDefault-importDefault.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typeOnlyImportChains/namedExport-typeOnlyNamespaceImport-exportEquals-importEquals.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typeOnlyImportChains/namedExport-typeOnlyNamespaceImport-namedExport-namedImport.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typeOnlyImportChains/namedExport-typeonlyExportFrom-exportNamespaceFrom-namedImport.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typeReferenceDirectives/when-typeReferenceDirective-contains-UpperCasePackage.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typeReferenceDirectives/when-typeReferenceDirective-is-relative-path-and-in-a-sibling-folder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/cached-unresolved-typings-are-not-recomputed-if-program-structure-did-not-change.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/configured-projects-discover-from-bower_components.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/configured-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/discover-from-bower.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/discover-from-node_modules-empty-types-has-import.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/discover-from-node_modules-empty-types.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/discover-from-node_modules-explicit-types.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/discover-from-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/discover-typings-prerelease-typings-are-properly-handled.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/discover-typings-should-gracefully-handle-packages-that-have-been-removed-from-the-types-registry.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/discover-typings-should-install-expired-typings-with-prerelease-version-of-tsserver.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/discover-typings-should-install-expired-typings.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/discover-typings-should-return-node-for-core-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/discover-typings-should-search-only-2-levels-deep.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/discover-typings-should-support-scoped-packages.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/discover-typings-should-use-cached-locations.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/discover-typings-should-use-mappings-from-safe-list.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/expired-cache-entry-lockFile3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/expired-cache-entry.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/external-projects-autoDiscovery.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/external-projects-duplicate-package.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/external-projects-no-auto-typings.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/external-projects-no-type-acquisition-with-enable-false.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/external-projects-no-type-acquisition-with-js-ts-files.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/external-projects-no-type-acquisition.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/external-projects-type-acquisition-with-disableFilenameBasedTypeAcquisition.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/external-projects-type-acquisition.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/external-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/inferred-projects-with-disableFilenameBasedTypeAcquisition.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/inferred-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/install-typings-for-unresolved-imports.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/invalidate-the-resolutions-with-trimmed-names.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/invalidate-the-resolutions.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/local-module-should-not-be-picked-up.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/malformed-packagejson.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/multiple-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/non-expired-cache-entry-lockFile3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/non-expired-cache-entry.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/pick-typing-names-from-nonrelative-unresolved-imports.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/progress-notification-for-error.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/progress-notification.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/projectRootPath-is-provided-for-inferred-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/redo-resolutions-pointing-to-js-on-typing-install.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/scoped-name-discovery.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/should-handle-node-core-modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/should-not-initialize-invaalid-package-names.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/telemetry-events.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/throttle-delayed-run-install-requests.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/throttle-delayed-typings-to-install.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/throttle-scheduled-run-install-requests-with-defer-refreshed.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/throttle-scheduled-run-install-requests-with-defer-while-queuing-again.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/throttle-scheduled-run-install-requests-with-defer.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/throttle-scheduled-run-install-requests-without-reaching-limit.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/external-project-watch-options-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/external-project-watch-options-in-host-configuration.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/external-project-watch-options.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/files-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/files-at-windows-style-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/files-not-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/files-not-at-windows-style-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/inferred-project-watch-options-errors.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/inferred-project-watch-options-in-host-configuration.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/inferred-project-watch-options.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/perVolumeCasing-and-new-file-addition.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/project-with-ascii-file-names-with-i.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/project-with-ascii-file-names.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/project-with-unicode-file-names.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/recursive-directory-does-not-watch-files-starting-with-dot-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-dynamic-polling-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-non-recursive-watchDirectory-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-watchFile-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/watching-files-with-network-style-paths.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/watching-npm-install-in-codespaces-where-workspaces-folder-is-hosted-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/when-watchFile-is-single-watcher-per-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/with-excludeDirectories-option-in-configFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/with-excludeDirectories-option-in-configuration.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/with-fallbackPolling-option-as-host-configuration.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/with-fallbackPolling-option-in-configFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/with-watchDirectory-option-as-host-configuration.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/with-watchDirectory-option-in-configFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/with-watchFile-option-as-host-configuration.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/with-watchFile-option-in-configFile.js"
          },
          {
            "path": "tests/baselines/reference/tsxResolveExternalModuleExportsTypes.types"
          },
          {
            "path": "tests/cases/compiler/declarationEmitBundlePreservesHasNoDefaultLibDirective.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitPreservesHasNoDefaultLibDirective.ts"
          },
          {
            "path": "tests/cases/compiler/noDefaultLib.ts"
          },
          {
            "path": "tests/cases/compiler/thisInTupleTypeParameterConstraints.ts"
          },
          {
            "path": "tests/cases/conformance/decorators/1.0lib-noErrors.ts"
          },
          {
            "path": "tests/cases/fourslash/findAllRefsImportMeta.ts"
          },
          {
            "path": "tests/cases/fourslash/getJavaScriptCompletions14.ts"
          },
          {
            "path": "tests/cases/fourslash/goToDefinitionImportMeta.ts"
          },
          {
            "path": "tests/cases/fourslash/goToTypeDefinitionImportMeta.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFix_tripleSlashOrdering.ts"
          },
          {
            "path": "tests/cases/fourslash/quickInfoImportMeta.ts"
          },
          {
            "path": "tests/cases/fourslash/renameNoDefaultLib.ts"
          },
          {
            "path": "tests/cases/project/noDefaultLib.json"
          },
          {
            "path": "tests/cases/projects/No-default-lib/test.ts"
          },
          {
            "path": "tests/lib/lib.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6qYnrt",
      "title": "Disable conditional exports fallbacks on `null` values",
      "url": "https://github.com/microsoft/TypeScript/pull/62483",
      "mergedAt": "2025-09-25T16:16:51Z",
      "updatedAt": "2025-09-25T16:17:02Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6f6efb419acd6b42d38552634f5a7096061f6322"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/moduleNameResolver.ts"
          },
          {
            "path": "tests/baselines/reference/conditionalExportsResolutionFallbackNull(moduleresolution=bundler).errors.txt"
          },
          {
            "path": "tests/baselines/reference/conditionalExportsResolutionFallbackNull(moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/conditionalExportsResolutionFallbackNull(moduleresolution=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/conditionalExportsResolutionFallbackNull(moduleresolution=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/conditionalExportsResolutionFallbackNull(moduleresolution=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/conditionalExportsResolutionFallbackNull(moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/cases/conformance/moduleResolution/conditionalExportsResolutionFallbackNull.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6npgRL",
      "title": "Revert PR 61928",
      "url": "https://github.com/microsoft/TypeScript/pull/62423",
      "mergedAt": "2025-09-25T17:22:27Z",
      "updatedAt": "2025-09-25T17:22:27Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "5f183ad73dc1500209619cf52e174c45d73f8617"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/services/completions.ts"
          },
          {
            "path": "src/services/services.ts"
          },
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/cases/fourslash/syntacticClassificationsJsx1.ts"
          },
          {
            "path": "tests/cases/fourslash/syntacticClassificationsJsx2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6q8rxG",
      "title": "Port https://github.com/microsoft/typescript-go/pull/1759",
      "url": "https://github.com/microsoft/TypeScript/pull/62502",
      "mergedAt": "2025-09-28T20:55:30Z",
      "updatedAt": "2025-09-29T02:15:46Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "1cd5309f7dec081960e992b47f238286537c3f50"
      },
      "author": {
        "login": "ahejlsberg"
      },
      "assignees": {
        "nodes": [
          {
            "login": "ahejlsberg"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/jsDeclarationsFunctionClassesCjsExportAssignment.js"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6q79eW",
      "title": "Port microsoft/typescript-go#1757",
      "url": "https://github.com/microsoft/TypeScript/pull/62501",
      "mergedAt": "2025-09-29T21:42:30Z",
      "updatedAt": "2025-09-29T21:42:31Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "97610a8a63b87092ff4c41cecb5b2b8b8fa12193"
      },
      "author": {
        "login": "ahejlsberg"
      },
      "assignees": {
        "nodes": [
          {
            "login": "ahejlsberg"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/missingDiscriminants2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/missingDiscriminants2.symbols"
          },
          {
            "path": "tests/baselines/reference/missingDiscriminants2.types"
          },
          {
            "path": "tests/cases/compiler/missingDiscriminants2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6rLgbC",
      "title": "Port microsoft/typescript-go#1764",
      "url": "https://github.com/microsoft/TypeScript/pull/62510",
      "mergedAt": "2025-09-29T21:47:59Z",
      "updatedAt": "2025-09-29T21:48:01Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e350126ab989f463aac638555e430dcd55421d0b"
      },
      "author": {
        "login": "ahejlsberg"
      },
      "assignees": {
        "nodes": [
          {
            "login": "ahejlsberg"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6q-1q3",
      "title": "Bump the github-actions group across 1 directory with 2 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/62507",
      "mergedAt": "2025-09-30T17:33:45Z",
      "updatedAt": "2025-09-30T17:33:47Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "83ff20281ef62e287d44bc6e5ba97530668472d0"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6htIdX",
      "title": "Enhance type argument completions",
      "url": "https://github.com/microsoft/TypeScript/pull/62170",
      "mergedAt": "2025-09-30T20:00:20Z",
      "updatedAt": "2025-09-30T21:51:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d4b15eb56d85c9e901c2b6426f8583632887103a"
      },
      "author": {
        "login": "mkantor"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "mkantor"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "mkantor"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "mkantor"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/services/completions.ts"
          },
          {
            "path": "src/services/stringCompletions.ts"
          },
          {
            "path": "tests/cases/fourslash/completionListInTypeLiteralInTypeParameter10.ts"
          },
          {
            "path": "tests/cases/fourslash/completionListInTypeLiteralInTypeParameter11.ts"
          },
          {
            "path": "tests/cases/fourslash/completionListInTypeLiteralInTypeParameter12.ts"
          },
          {
            "path": "tests/cases/fourslash/completionListInTypeLiteralInTypeParameter13.ts"
          },
          {
            "path": "tests/cases/fourslash/completionListInTypeLiteralInTypeParameter14.ts"
          },
          {
            "path": "tests/cases/fourslash/completionListInTypeLiteralInTypeParameter15.ts"
          },
          {
            "path": "tests/cases/fourslash/completionListInTypeLiteralInTypeParameter16.ts"
          },
          {
            "path": "tests/cases/fourslash/completionListInTypeLiteralInTypeParameter17.ts"
          },
          {
            "path": "tests/cases/fourslash/completionListInTypeLiteralInTypeParameter18.ts"
          },
          {
            "path": "tests/cases/fourslash/completionListInTypeLiteralInTypeParameter19.ts"
          },
          {
            "path": "tests/cases/fourslash/completionListInTypeLiteralInTypeParameter20.ts"
          },
          {
            "path": "tests/cases/fourslash/completionListInTypeLiteralInTypeParameter21.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6VpDRe",
      "title": "Don't compare \"missing\" to `undefined` in `compareProperties` under `exactOptionalPropertyTypes`",
      "url": "https://github.com/microsoft/TypeScript/pull/61683",
      "mergedAt": "2025-09-30T20:15:38Z",
      "updatedAt": "2025-10-01T18:51:37Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "31a0ead46d37e2a2618e2bdd5092c49dc6e58d80"
      },
      "author": {
        "login": "HansBrende"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/exactOptionalPropertyTypesIdentical.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exactOptionalPropertyTypesIdentical.js"
          },
          {
            "path": "tests/baselines/reference/exactOptionalPropertyTypesIdentical.symbols"
          },
          {
            "path": "tests/baselines/reference/exactOptionalPropertyTypesIdentical.types"
          },
          {
            "path": "tests/cases/compiler/exactOptionalPropertyTypesIdentical.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6rJbiJ",
      "title": "Deprecate baseUrl",
      "url": "https://github.com/microsoft/TypeScript/pull/62509",
      "mergedAt": "2025-09-30T21:03:17Z",
      "updatedAt": "2025-09-30T21:03:22Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "eef6a0cbcf13fc0ef9fc5bb4b310fb7faf63d239"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sheetalkamat"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/program.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/amdModuleConstEnumUsage.errors.txt"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/declarationEmitMonorepoBaseUrl.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationEmitPathMappingMonorepo.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationEmitPathMappingMonorepo2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationEmitPrefersPathKindBasedOnBundling.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationEmitPrefersPathKindBasedOnBundling.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitPrefersPathKindBasedOnBundling2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationEmitPrefersPathKindBasedOnBundling2.types"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionPackageIdWithRelativeAndAbsolutePath.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithExtensions_withPaths.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_empty.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_notSpecified.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_oneBlank.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_oneNotFound.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_dirModuleWithIndex.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_externalModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_externalModulePath.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_externalModule_withPaths.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_externalTSModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_jsModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_one_jsonModule.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_threeLastIsBlank1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_threeLastIsBlank2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_threeLastIsBlank3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithSuffixes_threeLastIsBlank4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/node10AlternateResult_noResolution.errors.txt"
          },
          {
            "path": "tests/baselines/reference/node10Alternateresult_noTypes.errors.txt"
          },
          {
            "path": "tests/baselines/reference/node10IsNode_node.errors.txt"
          },
          {
            "path": "tests/baselines/reference/packageJsonImportsExportsOptionCompat(moduleresolution=node).errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution2_classic.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution2_node.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution3_classic.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution3_classic.types"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution3_node.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution3_node.types"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution4_classic.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution4_classic.types"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution4_node.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution4_node.types"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution5_classic.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution5_classic.types"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution5_node.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution5_node.types"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution7_classic.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution7_classic.types"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution7_node.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution7_node.types"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution8_classic.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution8_node.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_rootImport_aliasWithRoot.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_rootImport_aliasWithRoot_differentRootTypes.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_rootImport_aliasWithRoot_multipleAliases.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_rootImport_aliasWithRoot_realRootFile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_rootImport_noAliasWithRoot.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_rootImport_noAliasWithRoot_realRootFile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_withExtension.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_withExtensionInName.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_withExtension_MapedToNodeModules.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingBasedModuleResolution_withExtension_failedLookup.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathMappingInheritedBaseUrl.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathsValidation1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathsValidation2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathsValidation3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/pathsValidation4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/project/nodeModulesImportHigher/amd/nodeModulesImportHigher.errors.txt"
          },
          {
            "path": "tests/baselines/reference/project/nodeModulesImportHigher/node/nodeModulesImportHigher.errors.txt"
          },
          {
            "path": "tests/baselines/reference/project/nodeModulesMaxDepthExceeded/amd/nodeModulesMaxDepthExceeded.errors.txt"
          },
          {
            "path": "tests/baselines/reference/project/nodeModulesMaxDepthExceeded/node/nodeModulesMaxDepthExceeded.errors.txt"
          },
          {
            "path": "tests/baselines/reference/project/nodeModulesMaxDepthIncreased/amd/nodeModulesMaxDepthIncreased.errors.txt"
          },
          {
            "path": "tests/baselines/reference/project/nodeModulesMaxDepthIncreased/node/nodeModulesMaxDepthIncreased.errors.txt"
          },
          {
            "path": "tests/baselines/reference/requireOfJsonFileWithoutResolveJsonModuleAndPathMapping.errors.txt"
          },
          {
            "path": "tests/baselines/reference/requireOfJsonFile_PathMapping.errors.txt"
          },
          {
            "path": "tests/baselines/reference/resolutionModeTripleSlash4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/resolutionModeTripleSlash5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Correctly serialize metadata when transpile with CommonJS option (verbatimModuleSyntax=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Correctly serialize metadata when transpile with CommonJS option (verbatimModuleSyntax=true).oldTranspile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Correctly serialize metadata when transpile with CommonJS option.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Correctly serialize metadata when transpile with CommonJS option.oldTranspile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Correctly serialize metadata when transpile with System option.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Correctly serialize metadata when transpile with System option.oldTranspile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Supports setting baseUrl (verbatimModuleSyntax=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Supports setting baseUrl (verbatimModuleSyntax=true).oldTranspile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Supports setting baseUrl.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Supports setting baseUrl.oldTranspile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Supports setting moduleResolution (verbatimModuleSyntax=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Supports setting moduleResolution (verbatimModuleSyntax=true).oldTranspile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Supports setting moduleResolution.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Supports setting moduleResolution.oldTranspile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/tsbuild/declarationEmit/when-declaration-file-used-inferred-type-from-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/extends/configDir-template.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleResolution/resolves-specifier-in-output-declaration-file-from-referenced-project-correctly-with-preserveSymlinks.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleResolution/resolves-specifier-in-output-declaration-file-from-referenced-project-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/files-containing-json-file-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/files-containing-json-file.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-and-files-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-and-files.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-of-json-along-with-other-include-and-file-name-matches-ts-file-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-of-json-along-with-other-include-and-file-name-matches-ts-file.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-of-json-along-with-other-include-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-of-json-along-with-other-include.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-with-json-not-in-rootDir-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-with-json-not-in-rootDir.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-with-json-without-rootDir-but-outside-configDirectory-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-with-json-without-rootDir-but-outside-configDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-without-outDir-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only-without-outDir.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/include-only.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/sourcemap-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/sourcemap.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/without-outDir-non-composite.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/resolveJsonModule/without-outDir.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/roots/when-root-file-is-from-referenced-project-and-shared-is-first.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/roots/when-root-file-is-from-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/transitiveReferences/builds-correctly-when-the-referenced-project-uses-different-module-resolution.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/transitiveReferences/builds-correctly.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/transitiveReferences/reports-error-about-module-not-found-with-node-resolution-with-external-module-name.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/extends/configDir-template.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/moduleResolution/build-mode-watches-for-changes-to-package-json-main-fields.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/roots/when-root-file-is-from-referenced-project-and-shared-is-first.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/roots/when-root-file-is-from-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsc/declarationEmit/when-using-Windows-paths-and-uppercase-letters.js"
          },
          {
            "path": "tests/baselines/reference/tsc/extends/configDir-template-with-commandline.js"
          },
          {
            "path": "tests/baselines/reference/tsc/extends/configDir-template.js"
          },
          {
            "path": "tests/baselines/reference/tsc/moduleResolution/pnpm-style-layout.js"
          },
          {
            "path": "tests/baselines/reference/tsc/projectReferencesConfig/issues-a-nice-error-when-the-input-file-is-missing-when-module-reference-is-not-relative.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependencies/transitive-exports/no-circular-import/export-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependencies/transitive-exports/no-circular-import/export.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependencies/transitive-exports/yes-circular-import/exports-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependencies/transitive-exports/yes-circular-import/exports.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependenciesAndD/transitive-exports/no-circular-import/export-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependenciesAndD/transitive-exports/no-circular-import/export.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependenciesAndD/transitive-exports/yes-circular-import/exports-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependenciesAndD/transitive-exports/yes-circular-import/exports.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/default/transitive-exports/no-circular-import/export-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/default/transitive-exports/no-circular-import/export.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/default/transitive-exports/yes-circular-import/exports-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/default/transitive-exports/yes-circular-import/exports.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/defaultAndD/transitive-exports/no-circular-import/export-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/defaultAndD/transitive-exports/no-circular-import/export.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/defaultAndD/transitive-exports/yes-circular-import/exports-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/defaultAndD/transitive-exports/yes-circular-import/exports.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModules/transitive-exports/no-circular-import/export-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModules/transitive-exports/no-circular-import/export.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModules/transitive-exports/yes-circular-import/exports-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModules/transitive-exports/yes-circular-import/exports.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModulesAndD/transitive-exports/no-circular-import/export-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModulesAndD/transitive-exports/no-circular-import/export.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModulesAndD/transitive-exports/yes-circular-import/exports-with-incremental.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModulesAndD/transitive-exports/yes-circular-import/exports.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/extends/configDir-template.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/should-properly-handle-module-resolution-changes-in-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/updates-moduleResolution-when-resolveJsonModule-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/programUpdates/when-creating-new-file-in-symlinked-folder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/on-transitive-references-in-different-folders-with-no-files-clause.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/on-transitive-references-in-different-folders.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/on-transitive-references-with-nodenext.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/on-transitive-references.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/when-referenced-project-uses-different-module-resolution.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/with-modules-linked-to-sibling-folder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/resolutionCache/works-when-reusing-program-with-files-from-external-library.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/watchDirectories-for-config-file-with-case-insensitive-file-system.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/watchDirectories-for-config-file-with-case-sensitive-file-system.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/when-calling-goto-definition-of-module.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/cachingFileSystemInformation/when-creating-new-file-in-symlinked-folder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completionsIncomplete/ambient-module-specifier-resolutions-do-not-count-against-the-resolution-limit.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completionsIncomplete/resolves-more-when-available-from-module-specifier-cache-(1).js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completionsIncomplete/resolves-more-when-available-from-module-specifier-cache-(2).js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completionsIncomplete/works-for-transient-symbols-between-requests.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completionsIncomplete/works-with-PackageJsonAutoImportProvider.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/completionsIncomplete/works.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/configuredProjects/should-properly-handle-module-resolution-changes-in-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/extends/configDir-template.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/forceConsistentCasingInFileNames/works-when-extends-is-specified-with-a-case-insensitive-file-system.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_baseUrl_toDist.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_paths_sharedOutDir.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_paths_stripSrc.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_paths_toDist.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_paths_toDist2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_paths_toSrc.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_symlinks_stripSrc.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_symlinks_toDist.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportCrossProject_symlinks_toSrc.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider_exportMap2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleResolution/using-referenced-project-built.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/moduleResolution/using-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/disables-looking-into-the-child-project-if-disableReferencedProjectLoad-is-set-in-first-indirect-project-but-not-in-another-one.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/project-is-directly-referenced-by-solution.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/project-is-indirectly-referenced-by-solution.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/reusing-d.ts-files-from-composite-and-non-composite-projects.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/root-file-is-file-from-referenced-project-and-using-declaration-maps.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/root-file-is-file-from-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/solution-with-its-own-files-and-disables-looking-into-the-child-project-if-disableReferencedProjectLoad-is-set-in-first-indirect-project-but-not-in-another-one.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/solution-with-its-own-files-and-disables-looking-into-the-child-project-if-disableReferencedProjectLoad-is-set-in-indirect-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/solution-with-its-own-files-and-disables-looking-into-the-child-project-if-disableReferencedProjectLoad-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/solution-with-its-own-files-and-project-found-is-not-solution-but-references-open-file-through-project-reference.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectReferences/solution-with-its-own-files-and-project-is-indirectly-referenced-by-solution.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectRootFiles/when-root-file-is-from-referenced-project-and-shared-is-first.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectRootFiles/when-root-file-is-from-referenced-project.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/transitive-references-with-deleting-referenced-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/transitive-references-with-deleting-transitively-referenced-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/transitive-references-with-edit-in-referenced-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/transitive-references-with-edit-on-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/transitive-references-with-non-local-edit.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/trasitive-references-without-files-with-deleting-referenced-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/trasitive-references-without-files-with-deleting-transitively-referenced-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/trasitive-references-without-files-with-edit-in-referenced-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/trasitive-references-without-files-with-edit-on-config-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectsWithReferences/trasitive-references-without-files-with-non-local-edit.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolves-to-ambient-module.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/module-resolution-with-path-mapping-when-project-compiles-from-sources.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/module-resolution-with-path-mapping-when-project-has-node_modules-setup-but-doesnt-have-modules-in-typings-folder-and-then-recompiles.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/module-resolution-with-path-mapping-when-project-recompiles-after-deleting-generated-folders.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symlinkCache/contains-symlinks-discovered-by-project-references-resolution-after-program-creation.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/does-not-expose-paths.js"
          },
          {
            "path": "tests/baselines/reference/typesVersions.emptyTypes.errors.txt"
          },
          {
            "path": "tests/baselines/reference/typesVersions.justIndex.errors.txt"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6rcZUA",
      "title": "Fix incorrect test options",
      "url": "https://github.com/microsoft/TypeScript/pull/62515",
      "mergedAt": "2025-10-01T00:17:28Z",
      "updatedAt": "2025-10-01T00:17:28Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "968d5deb8b5fd4af3ce85433872bdefc1eb17f10"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "tests/cases/conformance/classes/propertyMemberDeclarations/accessorsOverrideProperty10.ts"
          },
          {
            "path": "tests/cases/conformance/classes/propertyMemberDeclarations/propertyOverridesAccessors6.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6roGLb",
      "title": "Fix releaser tag creation",
      "url": "https://github.com/microsoft/TypeScript/pull/62522",
      "mergedAt": "2025-10-01T20:41:42Z",
      "updatedAt": "2025-10-01T20:41:46Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "837e3a1df996b505e1d376fa46166740b7ed5450"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "azure-pipelines.release-publish.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6qzvVq",
      "title": "Update DOM types",
      "url": "https://github.com/microsoft/TypeScript/pull/62496",
      "mergedAt": "2025-10-02T17:42:43Z",
      "updatedAt": "2025-10-02T17:42:47Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "9c4c37704452997d1198ce98c3025d75745d6213"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "saschanaz"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "saschanaz"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/dom.generated.d.ts"
          },
          {
            "path": "src/lib/dom.iterable.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.iterable.generated.d.ts"
          },
          {
            "path": "tests/baselines/reference/callsOnComplexSignatures.types"
          },
          {
            "path": "tests/baselines/reference/checkJsxChildrenCanBeTupleType.types"
          },
          {
            "path": "tests/baselines/reference/checkJsxChildrenProperty16.types"
          },
          {
            "path": "tests/baselines/reference/checkJsxUnionSFXContextualTypeInferredCorrectly.types"
          },
          {
            "path": "tests/baselines/reference/contextuallyTypedJsxChildren.types"
          },
          {
            "path": "tests/baselines/reference/controlFlowOptionalChain3.types"
          },
          {
            "path": "tests/baselines/reference/divergentAccessorsTypes6.symbols"
          },
          {
            "path": "tests/baselines/reference/duplicateNumericIndexers.types"
          },
          {
            "path": "tests/baselines/reference/errorInfoForRelatedIndexTypesNoConstraintElaboration.types"
          },
          {
            "path": "tests/baselines/reference/globalThisBlockscopedProperties.types"
          },
          {
            "path": "tests/baselines/reference/ignoredJsxAttributes.types"
          },
          {
            "path": "tests/baselines/reference/intersectionsOfLargeUnions.types"
          },
          {
            "path": "tests/baselines/reference/intersectionsOfLargeUnions2.types"
          },
          {
            "path": "tests/baselines/reference/intraExpressionInferencesJsx.types"
          },
          {
            "path": "tests/baselines/reference/jsDeclarationsNonIdentifierInferredNames.types"
          },
          {
            "path": "tests/baselines/reference/jsDeclarationsReactComponents.types"
          },
          {
            "path": "tests/baselines/reference/jsxCallElaborationCheckNoCrash1.types"
          },
          {
            "path": "tests/baselines/reference/jsxChildrenIndividualErrorElaborations.types"
          },
          {
            "path": "tests/baselines/reference/jsxDeclarationsWithEsModuleInteropNoCrash.types"
          },
          {
            "path": "tests/baselines/reference/jsxElementType.types"
          },
          {
            "path": "tests/baselines/reference/jsxElementTypeLiteral.types"
          },
          {
            "path": "tests/baselines/reference/jsxElementTypeLiteralWithGeneric.types"
          },
          {
            "path": "tests/baselines/reference/jsxEmptyExpressionNotCountedAsChild(jsx=react).types"
          },
          {
            "path": "tests/baselines/reference/jsxEmptyExpressionNotCountedAsChild(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxEmptyExpressionNotCountedAsChild(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxExcessPropsAndAssignability.types"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentFactoryNoUnusedLocals.types"
          },
          {
            "path": "tests/baselines/reference/jsxGenericComponentWithSpreadingResultOfGenericFunction.types"
          },
          {
            "path": "tests/baselines/reference/jsxImportForSideEffectsNonExtantNoError.types"
          },
          {
            "path": "tests/baselines/reference/jsxInferenceProducesLiteralAsExpected.types"
          },
          {
            "path": "tests/baselines/reference/jsxIntrinsicElementsTypeArgumentErrors.types"
          },
          {
            "path": "tests/baselines/reference/jsxIntrinsicUnions.types"
          },
          {
            "path": "tests/baselines/reference/jsxIssuesErrorWhenTagExpectsTooManyArguments.types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformChildren(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformChildren(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImport(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImport(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImportPragma(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImportPragma(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformKeyProp(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformKeyProp(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformKeyPropCustomImport(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformKeyPropCustomImport(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformKeyPropCustomImportPragma(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformKeyPropCustomImportPragma(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformNestedSelfClosingChild(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformNestedSelfClosingChild(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformSubstitutesNames(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformSubstitutesNames(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformSubstitutesNamesFragment(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformSubstitutesNamesFragment(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxNamespacedNameNotComparedToNonMatchingIndexSignature.types"
          },
          {
            "path": "tests/baselines/reference/jsxPartialSpread.types"
          },
          {
            "path": "tests/baselines/reference/jsxRuntimePragma(jsx=preserve).types"
          },
          {
            "path": "tests/baselines/reference/jsxRuntimePragma(jsx=react).types"
          },
          {
            "path": "tests/baselines/reference/jsxRuntimePragma(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxRuntimePragma(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/libCompileChecks.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.errors.txt"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.types"
          },
          {
            "path": "tests/baselines/reference/mixinAccessors1.types"
          },
          {
            "path": "tests/baselines/reference/multiline.types"
          },
          {
            "path": "tests/baselines/reference/nonnullAssertionPropegatesContextualType.types"
          },
          {
            "path": "tests/baselines/reference/objectTypeHidingMembersOfExtendedObject.types"
          },
          {
            "path": "tests/baselines/reference/objectTypeWithStringIndexerHidingObjectIndexer.types"
          },
          {
            "path": "tests/baselines/reference/parserStrictMode8.types"
          },
          {
            "path": "tests/baselines/reference/reactDefaultPropsInferenceSuccess.types"
          },
          {
            "path": "tests/baselines/reference/reactHOCSpreadprops.types"
          },
          {
            "path": "tests/baselines/reference/reactReadonlyHOCAssignabilityReal.types"
          },
          {
            "path": "tests/baselines/reference/reactSFCAndFunctionResolvable.types"
          },
          {
            "path": "tests/baselines/reference/reactTagNameComponentWithPropsNoOOM.types"
          },
          {
            "path": "tests/baselines/reference/returnTypePredicateIsInstantiateInContextOfTarget.types"
          },
          {
            "path": "tests/baselines/reference/spellingSuggestionJSXAttribute.types"
          },
          {
            "path": "tests/baselines/reference/tailRecursiveConditionalTypes.types"
          },
          {
            "path": "tests/baselines/reference/tsxInvokeComponentType.types"
          },
          {
            "path": "tests/baselines/reference/tsxNotUsingApparentTypeOfSFC.types"
          },
          {
            "path": "tests/baselines/reference/tsxReactEmit8(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/tsxReactEmit8(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/tsxReactEmitSpreadAttribute(target=es2015).types"
          },
          {
            "path": "tests/baselines/reference/tsxReactEmitSpreadAttribute(target=es2018).types"
          },
          {
            "path": "tests/baselines/reference/tsxReactEmitSpreadAttribute(target=esnext).types"
          },
          {
            "path": "tests/baselines/reference/tsxReactPropsInferenceSucceedsOnIntersections.types"
          },
          {
            "path": "tests/baselines/reference/tsxResolveExternalModuleExportsTypes.types"
          },
          {
            "path": "tests/baselines/reference/tsxStatelessComponentDefaultProps.types"
          },
          {
            "path": "tests/baselines/reference/tsxUnionMemberChecksFilterDataProps.types"
          },
          {
            "path": "tests/baselines/reference/typeInferenceWithExcessPropertiesJsx.types"
          },
          {
            "path": "tests/baselines/reference/variableDeclarationInStrictMode1.types"
          },
          {
            "path": "tests/baselines/reference/verifyDefaultLib_dom.types"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6gTic6",
      "title": "Move Iterable/AsyncIterable into main DOM/WebWorker libs",
      "url": "https://github.com/microsoft/TypeScript/pull/62111",
      "mergedAt": "2025-10-02T22:52:50Z",
      "updatedAt": "2025-10-02T22:53:02Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ced90d94b5873a642cb1c64eb62ef06660a489fd"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/dom.asynciterable.generated.d.ts"
          },
          {
            "path": "src/lib/dom.generated.d.ts"
          },
          {
            "path": "src/lib/dom.iterable.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.asynciterable.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.iterable.generated.d.ts"
          },
          {
            "path": "tests/baselines/reference/ES5For-ofTypeCheck10.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ES5For-ofTypeCheck10.symbols"
          },
          {
            "path": "tests/baselines/reference/ES5For-ofTypeCheck10.types"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty1.symbols"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty2.symbols"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty2.types"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty3.symbols"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty3.types"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty4.symbols"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty4.types"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty5.symbols"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty5.types"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty6.symbols"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty6.types"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty7.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty7.symbols"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty7.types"
          },
          {
            "path": "tests/baselines/reference/ExportVariableOfGenericTypeWithInaccessibleTypeAsTypeArgument.symbols"
          },
          {
            "path": "tests/baselines/reference/TypeGuardWithArrayUnion.symbols"
          },
          {
            "path": "tests/baselines/reference/ambientConstLiterals.symbols"
          },
          {
            "path": "tests/baselines/reference/anonClassDeclarationEmitIsAnon.symbols"
          },
          {
            "path": "tests/baselines/reference/anyAssignabilityInInheritance.symbols"
          },
          {
            "path": "tests/baselines/reference/anyAssignableToEveryType.symbols"
          },
          {
            "path": "tests/baselines/reference/anyAssignableToEveryType2.symbols"
          },
          {
            "path": "tests/baselines/reference/apparentTypeSubtyping.symbols"
          },
          {
            "path": "tests/baselines/reference/apparentTypeSupertype.symbols"
          },
          {
            "path": "tests/baselines/reference/argumentsAsPropertyName.symbols"
          },
          {
            "path": "tests/baselines/reference/argumentsObjectIterator01_ES5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/argumentsObjectIterator02_ES5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/argumentsObjectIterator02_ES5.symbols"
          },
          {
            "path": "tests/baselines/reference/argumentsObjectIterator02_ES5.types"
          },
          {
            "path": "tests/baselines/reference/argumentsObjectIterator03_ES5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/argumentsSpreadRestIterables(target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/argumentsSpreadRestIterables(target=es5).symbols"
          },
          {
            "path": "tests/baselines/reference/argumentsSpreadRestIterables(target=es5).types"
          },
          {
            "path": "tests/baselines/reference/argumentsUsedInClassFieldInitializerOrStaticInitializationBlock.errors.txt"
          },
          {
            "path": "tests/baselines/reference/argumentsUsedInClassFieldInitializerOrStaticInitializationBlock.symbols"
          },
          {
            "path": "tests/baselines/reference/argumentsUsedInClassFieldInitializerOrStaticInitializationBlock.types"
          },
          {
            "path": "tests/baselines/reference/arityAndOrderCompatibility01.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayAssignmentTest1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/arrayAssignmentTest2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/arrayAssignmentTest3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/arrayAssignmentTest4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/arrayAugment.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayBufferIsViewNarrowsType.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayConcat2.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayConcat3.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayConstructors1.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayDestructuringInSwitch1.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayLiteral.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayLiteralAndArrayConstructorEquivalence1.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayLiterals.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayLiterals2ES5.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayLiterals3.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayOfSubtypeIsAssignableToReadonlyArray.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayReferenceWithoutTypeArgs.symbols"
          },
          {
            "path": "tests/baselines/reference/arraySigChecking.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayToLocaleStringES5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/arrayToLocaleStringES5.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayToLocaleStringES5.types"
          },
          {
            "path": "tests/baselines/reference/arrayTypeOfFunctionTypes.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayTypeOfFunctionTypes2.symbols"
          },
          {
            "path": "tests/baselines/reference/arrayTypeOfTypeOf.symbols"
          },
          {
            "path": "tests/baselines/reference/asOperator1.symbols"
          },
          {
            "path": "tests/baselines/reference/assignFromStringInterface.symbols"
          },
          {
            "path": "tests/baselines/reference/assignFromStringInterface2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignFromStringInterface2.symbols"
          },
          {
            "path": "tests/baselines/reference/assignLambdaToNominalSubtypeOfFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/assigningFromObjectToAnythingElse.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assigningFromObjectToAnythingElse.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatBug3.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithCallSignatures3.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithCallSignatures4.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithConstructSignatures3.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentCompatWithConstructSignatures4.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentToObjectAndFunction.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignmentToObjectAndFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentTypeNarrowing.symbols"
          },
          {
            "path": "tests/baselines/reference/asyncFunctionNoReturnType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/asyncFunctionReturnExpressionErrorSpans.errors.txt"
          },
          {
            "path": "tests/baselines/reference/asyncFunctionReturnExpressionErrorSpans.symbols"
          },
          {
            "path": "tests/baselines/reference/augmentArray.symbols"
          },
          {
            "path": "tests/baselines/reference/augmentExportEquals5.symbols"
          },
          {
            "path": "tests/baselines/reference/augmentedTypeAssignmentCompatIndexSignature.symbols"
          },
          {
            "path": "tests/baselines/reference/augmentedTypeBracketAccessIndexSignature.symbols"
          },
          {
            "path": "tests/baselines/reference/augmentedTypeBracketNamedPropertyAccess.symbols"
          },
          {
            "path": "tests/baselines/reference/autolift4.symbols"
          },
          {
            "path": "tests/baselines/reference/bestChoiceType.symbols"
          },
          {
            "path": "tests/baselines/reference/bestChoiceType.types"
          },
          {
            "path": "tests/baselines/reference/bigintWithoutLib.symbols"
          },
          {
            "path": "tests/baselines/reference/bivariantInferences.symbols"
          },
          {
            "path": "tests/baselines/reference/bluebirdStaticThis.symbols"
          },
          {
            "path": "tests/baselines/reference/booleanFilterAnyArray.symbols"
          },
          {
            "path": "tests/baselines/reference/booleanLiteralsContextuallyTypedFromUnion.symbols"
          },
          {
            "path": "tests/baselines/reference/bundlerSyntaxRestrictions(module=esnext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/bundlerSyntaxRestrictions(module=preserve).errors.txt"
          },
          {
            "path": "tests/baselines/reference/callOfConditionalTypeWithConcreteBranches.symbols"
          },
          {
            "path": "tests/baselines/reference/callOverload.symbols"
          },
          {
            "path": "tests/baselines/reference/callOverloads2.symbols"
          },
          {
            "path": "tests/baselines/reference/callSignatureAssignabilityInInheritance2.symbols"
          },
          {
            "path": "tests/baselines/reference/callSignatureAssignabilityInInheritance3.symbols"
          },
          {
            "path": "tests/baselines/reference/callSignatureAssignabilityInInheritance5.symbols"
          },
          {
            "path": "tests/baselines/reference/callWithSpread.symbols"
          },
          {
            "path": "tests/baselines/reference/canFollowGetSetKeyword.errors.txt"
          },
          {
            "path": "tests/baselines/reference/castOfYield.errors.txt"
          },
          {
            "path": "tests/baselines/reference/castOfYield.types"
          },
          {
            "path": "tests/baselines/reference/chainedAssignment2.symbols"
          },
          {
            "path": "tests/baselines/reference/checkForObjectTooStrict.symbols"
          },
          {
            "path": "tests/baselines/reference/checkJsObjectLiteralIndexSignatures.symbols"
          },
          {
            "path": "tests/baselines/reference/checkSwitchStatementIfCaseTypeIsString.symbols"
          },
          {
            "path": "tests/baselines/reference/circularTypeArgumentsLocalAndOuterNoCrash1.symbols"
          },
          {
            "path": "tests/baselines/reference/classExtendingBuiltinType.symbols"
          },
          {
            "path": "tests/baselines/reference/classReferencedInContextualParameterWithinItsOwnBaseExpression.symbols"
          },
          {
            "path": "tests/baselines/reference/classStaticBlock7.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classStaticBlock7.types"
          },
          {
            "path": "tests/baselines/reference/classUpdateTests.symbols"
          },
          {
            "path": "tests/baselines/reference/classWithoutExplicitConstructor.symbols"
          },
          {
            "path": "tests/baselines/reference/coAndContraVariantInferences2.symbols"
          },
          {
            "path": "tests/baselines/reference/coAndContraVariantInferences5.symbols"
          },
          {
            "path": "tests/baselines/reference/collectionPatternNoError.symbols"
          },
          {
            "path": "tests/baselines/reference/commaOperatorLeftSideUnused.symbols"
          },
          {
            "path": "tests/baselines/reference/commaOperatorWithSecondOperandObjectType.symbols"
          },
          {
            "path": "tests/baselines/reference/commaOperatorWithSecondOperandStringType.symbols"
          },
          {
            "path": "tests/baselines/reference/commonSourceDir5.symbols"
          },
          {
            "path": "tests/baselines/reference/commonSourceDir6.symbols"
          },
          {
            "path": "tests/baselines/reference/comparisonOperatorWithNumberOperand.symbols"
          },
          {
            "path": "tests/baselines/reference/complexNarrowingWithAny.symbols"
          },
          {
            "path": "tests/baselines/reference/compositeContextualSignature.symbols"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames3_ES5.symbols"
          },
          {
            "path": "tests/baselines/reference/conditionalEqualityTestingNullability.symbols"
          },
          {
            "path": "tests/baselines/reference/conditionalExportsResolutionFallback(moduleresolution=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/conditionalExportsResolutionFallback(moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/conditionalExportsResolutionFallbackNull(moduleresolution=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/conditionalExportsResolutionFallbackNull(moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/conditionalOperatorConditionIsObjectType.symbols"
          },
          {
            "path": "tests/baselines/reference/conditionalTypeAssignabilityWhenDeferred.symbols"
          },
          {
            "path": "tests/baselines/reference/conditionalTypes1.symbols"
          },
          {
            "path": "tests/baselines/reference/conditionalTypes2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/conditionalTypes2.symbols"
          },
          {
            "path": "tests/baselines/reference/conflictingDeclarationsImportFromNamespace1.symbols"
          },
          {
            "path": "tests/baselines/reference/conflictingDeclarationsImportFromNamespace2.symbols"
          },
          {
            "path": "tests/baselines/reference/constDeclarationShadowedByVarDeclaration3.symbols"
          },
          {
            "path": "tests/baselines/reference/constEnum2.symbols"
          },
          {
            "path": "tests/baselines/reference/constraintSatisfactionWithAny.symbols"
          },
          {
            "path": "tests/baselines/reference/constructSignatureAssignabilityInInheritance2.symbols"
          },
          {
            "path": "tests/baselines/reference/constructSignatureAssignabilityInInheritance3.symbols"
          },
          {
            "path": "tests/baselines/reference/constructSignatureAssignabilityInInheritance5.symbols"
          },
          {
            "path": "tests/baselines/reference/constructorImplementationWithDefaultValues.symbols"
          },
          {
            "path": "tests/baselines/reference/constructorImplementationWithDefaultValues2.symbols"
          },
          {
            "path": "tests/baselines/reference/constructorOverloads5.symbols"
          },
          {
            "path": "tests/baselines/reference/contextualTupleTypeParameterReadonly.symbols"
          },
          {
            "path": "tests/baselines/reference/contextualTypeBasedOnIntersectionWithAnyInTheMix3.types"
          },
          {
            "path": "tests/baselines/reference/contextualTypeBasedOnIntersectionWithAnyInTheMix5.symbols"
          },
          {
            "path": "tests/baselines/reference/contextualTypeWithUnionTypeMembers.symbols"
          },
          {
            "path": "tests/baselines/reference/contextualTypingOfArrayLiterals1.symbols"
          },
          {
            "path": "tests/baselines/reference/contextualTypingOfGenericFunctionTypedArguments1.symbols"
          },
          {
            "path": "tests/baselines/reference/contextuallyTypedParametersWithInitializers1.symbols"
          },
          {
            "path": "tests/baselines/reference/controlFlowCaching.symbols"
          },
          {
            "path": "tests/baselines/reference/controlFlowDoWhileStatement.symbols"
          },
          {
            "path": "tests/baselines/reference/controlFlowFinallyNoCatchAssignments.symbols"
          },
          {
            "path": "tests/baselines/reference/controlFlowForInStatement.symbols"
          },
          {
            "path": "tests/baselines/reference/controlFlowForOfStatement.symbols"
          },
          {
            "path": "tests/baselines/reference/controlFlowForStatement.symbols"
          },
          {
            "path": "tests/baselines/reference/controlFlowIfStatement.symbols"
          },
          {
            "path": "tests/baselines/reference/controlFlowInstanceOfGuardPrimitives.symbols"
          },
          {
            "path": "tests/baselines/reference/controlFlowInstanceofExtendsFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/controlFlowOptionalChain.symbols"
          },
          {
            "path": "tests/baselines/reference/controlFlowPropertyDeclarations.symbols"
          },
          {
            "path": "tests/baselines/reference/controlFlowPropertyDeclarations.types"
          },
          {
            "path": "tests/baselines/reference/controlFlowSelfReferentialLoop.symbols"
          },
          {
            "path": "tests/baselines/reference/controlFlowUnionContainingTypeParameter1.symbols"
          },
          {
            "path": "tests/baselines/reference/controlFlowWhileStatement.symbols"
          },
          {
            "path": "tests/baselines/reference/correlatedUnions.symbols"
          },
          {
            "path": "tests/baselines/reference/dataViewConstructor.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dataViewConstructor.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileEnums.symbols"
          },
          {
            "path": "tests/baselines/reference/declFileGenericType.symbols"
          },
          {
            "path": "tests/baselines/reference/declFilePrivateMethodOverloads.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitArrayTypesFromGenericArrayUsage.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitComputedNamesInaccessible.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitSimpleComputedNames1.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationFiles.symbols"
          },
          {
            "path": "tests/baselines/reference/declareExternalModuleWithExportAssignedFundule.symbols"
          },
          {
            "path": "tests/baselines/reference/decoratorOnClass8.symbols"
          },
          {
            "path": "tests/baselines/reference/decoratorOnClassConstructorParameter1.symbols"
          },
          {
            "path": "tests/baselines/reference/decoratorOnClassConstructorParameter4.symbols"
          },
          {
            "path": "tests/baselines/reference/decoratorOnClassMethod10.errors.txt"
          },
          {
            "path": "tests/baselines/reference/decoratorOnClassMethod10.symbols"
          },
          {
            "path": "tests/baselines/reference/decoratorOnClassProperty6.symbols"
          },
          {
            "path": "tests/baselines/reference/decoratorOnClassProperty7.symbols"
          },
          {
            "path": "tests/baselines/reference/deleteReadonlyInStrictNullChecks.symbols"
          },
          {
            "path": "tests/baselines/reference/derivedClassConstructorWithExplicitReturns01.symbols"
          },
          {
            "path": "tests/baselines/reference/derivedClassIncludesInheritedMembers.symbols"
          },
          {
            "path": "tests/baselines/reference/derivedClassSuperStatementPosition.symbols"
          },
          {
            "path": "tests/baselines/reference/derivedClassWithoutExplicitConstructor.symbols"
          },
          {
            "path": "tests/baselines/reference/derivedClassWithoutExplicitConstructor2.symbols"
          },
          {
            "path": "tests/baselines/reference/derivedClassWithoutExplicitConstructor3.symbols"
          },
          {
            "path": "tests/baselines/reference/destructureOfVariableSameAsShorthand.symbols"
          },
          {
            "path": "tests/baselines/reference/destructureTupleWithVariableElement.symbols"
          },
          {
            "path": "tests/baselines/reference/destructuringArrayBindingPatternAndAssignment2.symbols"
          },
          {
            "path": "tests/baselines/reference/destructuringControlFlowNoCrash.errors.txt"
          },
          {
            "path": "tests/baselines/reference/destructuringInitializerContextualTypeFromContext.symbols"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration3ES5iterable.symbols"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration4.symbols"
          },
          {
            "path": "tests/baselines/reference/didYouMeanElaborationsForExpressionsWhichCouldBeCalled.errors.txt"
          },
          {
            "path": "tests/baselines/reference/didYouMeanElaborationsForExpressionsWhichCouldBeCalled.symbols"
          },
          {
            "path": "tests/baselines/reference/discriminateWithMissingProperty.symbols"
          },
          {
            "path": "tests/baselines/reference/discriminatedUnionTypes1.symbols"
          },
          {
            "path": "tests/baselines/reference/distributiveConditionalTypeConstraints.symbols"
          },
          {
            "path": "tests/baselines/reference/divergentAccessorsTypes6.symbols"
          },
          {
            "path": "tests/baselines/reference/divergentAccessorsTypes8.symbols"
          },
          {
            "path": "tests/baselines/reference/divideAndConquerIntersections.symbols"
          },
          {
            "path": "tests/baselines/reference/doNotInferUnrelatedTypes.symbols"
          },
          {
            "path": "tests/baselines/reference/doYouNeedToChangeYourTargetLibraryES2015.errors.txt"
          },
          {
            "path": "tests/baselines/reference/doYouNeedToChangeYourTargetLibraryES2015.symbols"
          },
          {
            "path": "tests/baselines/reference/doYouNeedToChangeYourTargetLibraryES2015.types"
          },
          {
            "path": "tests/baselines/reference/duplicateLocalVariable1.symbols"
          },
          {
            "path": "tests/baselines/reference/duplicateNumericIndexers.symbols"
          },
          {
            "path": "tests/baselines/reference/duplicateOverloadInTypeAugmentation1.symbols"
          },
          {
            "path": "tests/baselines/reference/duplicatePropertyNames.symbols"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDeferInvalidStandalone.symbols"
          },
          {
            "path": "tests/baselines/reference/elementAccessExpressionInternalComments.symbols"
          },
          {
            "path": "tests/baselines/reference/emitArrowFunctionWhenUsingArguments14.symbols"
          },
          {
            "path": "tests/baselines/reference/emitArrowFunctionWhenUsingArguments15.symbols"
          },
          {
            "path": "tests/baselines/reference/emitArrowFunctionWhenUsingArguments16.symbols"
          },
          {
            "path": "tests/baselines/reference/emitArrowFunctionWhenUsingArguments17.symbols"
          },
          {
            "path": "tests/baselines/reference/emitArrowFunctionWhenUsingArguments18.symbols"
          },
          {
            "path": "tests/baselines/reference/emitCompoundExponentiationAssignmentWithIndexingOnLHS4.symbols"
          },
          {
            "path": "tests/baselines/reference/enumAssignability.symbols"
          },
          {
            "path": "tests/baselines/reference/enumAssignabilityInInheritance.symbols"
          },
          {
            "path": "tests/baselines/reference/enumClassification.symbols"
          },
          {
            "path": "tests/baselines/reference/enumErrors.symbols"
          },
          {
            "path": "tests/baselines/reference/enumIsNotASubtypeOfAnythingButNumber.symbols"
          },
          {
            "path": "tests/baselines/reference/enumNumbering1.symbols"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.errors.txt"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.types"
          },
          {
            "path": "tests/baselines/reference/errorConstructorSubtypes.symbols"
          },
          {
            "path": "tests/baselines/reference/errorHandlingInInstanceOf.symbols"
          },
          {
            "path": "tests/baselines/reference/errorOnFunctionReturnType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/errorOnUnionVsObjectShouldDeeplyDisambiguate.errors.txt"
          },
          {
            "path": "tests/baselines/reference/errorOnUnionVsObjectShouldDeeplyDisambiguate.symbols"
          },
          {
            "path": "tests/baselines/reference/errorOnUnionVsObjectShouldDeeplyDisambiguate2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/errorOnUnionVsObjectShouldDeeplyDisambiguate2.symbols"
          },
          {
            "path": "tests/baselines/reference/eventEmitterPatternWithRecordOfFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/everyTypeAssignableToAny.symbols"
          },
          {
            "path": "tests/baselines/reference/everyTypeWithAnnotationAndInitializer.symbols"
          },
          {
            "path": "tests/baselines/reference/everyTypeWithAnnotationAndInvalidInitializer.symbols"
          },
          {
            "path": "tests/baselines/reference/everyTypeWithInitializer.symbols"
          },
          {
            "path": "tests/baselines/reference/excessPropertyCheckWithNestedArrayIntersection.symbols"
          },
          {
            "path": "tests/baselines/reference/exhaustiveSwitchStatements1.symbols"
          },
          {
            "path": "tests/baselines/reference/expandoFunctionBlockShadowing.symbols"
          },
          {
            "path": "tests/baselines/reference/exportAssignNonIdentifier.symbols"
          },
          {
            "path": "tests/baselines/reference/exportAssignTypes.symbols"
          },
          {
            "path": "tests/baselines/reference/exportAssignValueAndType.symbols"
          },
          {
            "path": "tests/baselines/reference/exportAssignedTypeAsTypeAnnotation.symbols"
          },
          {
            "path": "tests/baselines/reference/exportDeclarationsInAmbientNamespaces.symbols"
          },
          {
            "path": "tests/baselines/reference/exportEqualErrorType.symbols"
          },
          {
            "path": "tests/baselines/reference/exportEqualMemberMissing.symbols"
          },
          {
            "path": "tests/baselines/reference/exportEqualNamespaces.symbols"
          },
          {
            "path": "tests/baselines/reference/expressionTypeNodeShouldError.symbols"
          },
          {
            "path": "tests/baselines/reference/extendArray.symbols"
          },
          {
            "path": "tests/baselines/reference/extendGenericArray.symbols"
          },
          {
            "path": "tests/baselines/reference/extendGenericArray2.symbols"
          },
          {
            "path": "tests/baselines/reference/extendGlobalThis.symbols"
          },
          {
            "path": "tests/baselines/reference/extendGlobalThis.types"
          },
          {
            "path": "tests/baselines/reference/extendStringInterface.symbols"
          },
          {
            "path": "tests/baselines/reference/fatarrowfunctionsOptionalArgs.symbols"
          },
          {
            "path": "tests/baselines/reference/firstMatchRegExpMatchArray.symbols"
          },
          {
            "path": "tests/baselines/reference/firstMatchRegExpMatchArray.types"
          },
          {
            "path": "tests/baselines/reference/fixSignatureCaching.symbols"
          },
          {
            "path": "tests/baselines/reference/for-inStatements.symbols"
          },
          {
            "path": "tests/baselines/reference/for-inStatementsArray.symbols"
          },
          {
            "path": "tests/baselines/reference/for-inStatementsArrayErrors.symbols"
          },
          {
            "path": "tests/baselines/reference/for-inStatementsDestructuring.errors.txt"
          },
          {
            "path": "tests/baselines/reference/for-inStatementsInvalid.symbols"
          },
          {
            "path": "tests/baselines/reference/forStatements.symbols"
          },
          {
            "path": "tests/baselines/reference/forStatementsMultipleInvalidDecl.symbols"
          },
          {
            "path": "tests/baselines/reference/forStatementsMultipleValidDecl.symbols"
          },
          {
            "path": "tests/baselines/reference/functionAssignment.symbols"
          },
          {
            "path": "tests/baselines/reference/functionCalls.symbols"
          },
          {
            "path": "tests/baselines/reference/functionConstraintSatisfaction.symbols"
          },
          {
            "path": "tests/baselines/reference/functionConstraintSatisfaction2.symbols"
          },
          {
            "path": "tests/baselines/reference/functionExpressionAndLambdaMatchesFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/functionOverloadErrors.symbols"
          },
          {
            "path": "tests/baselines/reference/functionOverloadsOnGenericArity2.symbols"
          },
          {
            "path": "tests/baselines/reference/functionType.symbols"
          },
          {
            "path": "tests/baselines/reference/functionsWithImplicitReturnTypeAssignableToUndefined(strictnullchecks=false).symbols"
          },
          {
            "path": "tests/baselines/reference/functionsWithImplicitReturnTypeAssignableToUndefined(strictnullchecks=true).symbols"
          },
          {
            "path": "tests/baselines/reference/generatedContextualTyping.symbols"
          },
          {
            "path": "tests/baselines/reference/genericArrayAssignmentCompatErrors.symbols"
          },
          {
            "path": "tests/baselines/reference/genericArrayExtenstions.errors.txt"
          },
          {
            "path": "tests/baselines/reference/genericArrayExtenstions.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallInferenceUsingThisTypeNoInvalidCacheReuseAfterMappedTypeApplication1.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallWithConstraintsTypeArgumentInference2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallWithGenericSignatureArguments.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallWithGenericSignatureArguments2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallWithObjectTypeArgsAndIndexers.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallWithObjectTypeArgsAndIndexersErrors.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallWithObjectTypeArgsAndNumericIndexer.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCallWithObjectTypeArgsAndStringIndexer.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCloneReturnTypes2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericCombinators2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericConstructorFunction1.symbols"
          },
          {
            "path": "tests/baselines/reference/genericFunctionCallSignatureReturnTypeMismatch.symbols"
          },
          {
            "path": "tests/baselines/reference/genericFunctionParameters.symbols"
          },
          {
            "path": "tests/baselines/reference/genericFunctionSpecializations1.symbols"
          },
          {
            "path": "tests/baselines/reference/genericFunctionsWithOptionalParameters1.symbols"
          },
          {
            "path": "tests/baselines/reference/genericFunctionsWithOptionalParameters2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericFunctionsWithOptionalParameters3.symbols"
          },
          {
            "path": "tests/baselines/reference/genericIndexedAccessMethodIntersectionCanBeAccessed.symbols"
          },
          {
            "path": "tests/baselines/reference/genericIndexedAccessMethodIntersectionCanBeAccessed.types"
          },
          {
            "path": "tests/baselines/reference/genericRestParameters1.symbols"
          },
          {
            "path": "tests/baselines/reference/genericRestParameters1.types"
          },
          {
            "path": "tests/baselines/reference/genericRestParameters2.symbols"
          },
          {
            "path": "tests/baselines/reference/genericRestParameters3.symbols"
          },
          {
            "path": "tests/baselines/reference/genericRestParameters3.types"
          },
          {
            "path": "tests/baselines/reference/genericSignatureIdentity.symbols"
          },
          {
            "path": "tests/baselines/reference/genericTemplateOverloadResolution.symbols"
          },
          {
            "path": "tests/baselines/reference/genericTypeAssertions6.symbols"
          },
          {
            "path": "tests/baselines/reference/getAccessorWithImpliedReturnTypeAndFunctionClassMerge.symbols"
          },
          {
            "path": "tests/baselines/reference/getParameterNameAtPosition.symbols"
          },
          {
            "path": "tests/baselines/reference/getterControlFlowStrictNull.symbols"
          },
          {
            "path": "tests/baselines/reference/globalFunctionAugmentationOverload.symbols"
          },
          {
            "path": "tests/baselines/reference/globalThis.symbols"
          },
          {
            "path": "tests/baselines/reference/globalThisBlockscopedProperties.symbols"
          },
          {
            "path": "tests/baselines/reference/globalThisBlockscopedProperties.types"
          },
          {
            "path": "tests/baselines/reference/homomorphicMappedTypeNesting.symbols"
          },
          {
            "path": "tests/baselines/reference/identicalGenericConditionalsWithInferRelated.symbols"
          },
          {
            "path": "tests/baselines/reference/implementArrayInterface.symbols"
          },
          {
            "path": "tests/baselines/reference/implicitAnyFromCircularInference.symbols"
          },
          {
            "path": "tests/baselines/reference/importHelpers.symbols"
          },
          {
            "path": "tests/baselines/reference/importHelpersAmd.symbols"
          },
          {
            "path": "tests/baselines/reference/importHelpersInAmbientContext.symbols"
          },
          {
            "path": "tests/baselines/reference/importHelpersInIsolatedModules.symbols"
          },
          {
            "path": "tests/baselines/reference/importHelpersInTsx.symbols"
          },
          {
            "path": "tests/baselines/reference/importHelpersOutFile.symbols"
          },
          {
            "path": "tests/baselines/reference/importHelpersSystem.symbols"
          },
          {
            "path": "tests/baselines/reference/importMeta(module=commonjs,target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importMeta(module=commonjs,target=esnext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importMeta(module=es2020,target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importMeta(module=es2020,target=esnext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importMeta(module=esnext,target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importMeta(module=esnext,target=esnext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importMeta(module=system,target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importMeta(module=system,target=esnext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importedAliasedConditionalTypeInstantiation.symbols"
          },
          {
            "path": "tests/baselines/reference/incompatibleExports1.symbols"
          },
          {
            "path": "tests/baselines/reference/incompatibleExports2.symbols"
          },
          {
            "path": "tests/baselines/reference/indexIntoArraySubclass.symbols"
          },
          {
            "path": "tests/baselines/reference/indexSignatureTypeInference.symbols"
          },
          {
            "path": "tests/baselines/reference/indexer3.symbols"
          },
          {
            "path": "tests/baselines/reference/indexersInClassType.symbols"
          },
          {
            "path": "tests/baselines/reference/inferSecondaryParameter.symbols"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.errors.txt"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.symbols"
          },
          {
            "path": "tests/baselines/reference/inferTypes1.symbols"
          },
          {
            "path": "tests/baselines/reference/inferTypes1.types"
          },
          {
            "path": "tests/baselines/reference/inferTypesWithExtends1.symbols"
          },
          {
            "path": "tests/baselines/reference/inferenceDoesNotAddUndefinedOrNull.symbols"
          },
          {
            "path": "tests/baselines/reference/inferenceUnionOfObjectsMappedContextualType.symbols"
          },
          {
            "path": "tests/baselines/reference/inferringClassMembersFromAssignments.symbols"
          },
          {
            "path": "tests/baselines/reference/infiniteConstraints.types"
          },
          {
            "path": "tests/baselines/reference/infinitelyExpandingOverloads.symbols"
          },
          {
            "path": "tests/baselines/reference/inheritanceOfGenericConstructorMethod1.symbols"
          },
          {
            "path": "tests/baselines/reference/inheritedFunctionAssignmentCompatibility.symbols"
          },
          {
            "path": "tests/baselines/reference/inheritedGenericCallSignature.symbols"
          },
          {
            "path": "tests/baselines/reference/initializedDestructuringAssignmentTypes.errors.txt"
          },
          {
            "path": "tests/baselines/reference/initializedDestructuringAssignmentTypes.symbols"
          },
          {
            "path": "tests/baselines/reference/initializedDestructuringAssignmentTypes.types"
          },
          {
            "path": "tests/baselines/reference/innerBoundLambdaEmit.symbols"
          },
          {
            "path": "tests/baselines/reference/innerTypeArgumentInference.symbols"
          },
          {
            "path": "tests/baselines/reference/innerTypeArgumentInference.types"
          },
          {
            "path": "tests/baselines/reference/innerTypeParameterShadowingOuterOne.symbols"
          },
          {
            "path": "tests/baselines/reference/innerTypeParameterShadowingOuterOne2.symbols"
          },
          {
            "path": "tests/baselines/reference/instanceAndStaticDeclarations1.symbols"
          },
          {
            "path": "tests/baselines/reference/instanceOfAssignability.symbols"
          },
          {
            "path": "tests/baselines/reference/instanceofNarrowReadonlyArray.symbols"
          },
          {
            "path": "tests/baselines/reference/instanceofOperatorWithLHSIsObject.symbols"
          },
          {
            "path": "tests/baselines/reference/instanceofOperatorWithRHSIsSubtypeOfFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/instantiationExpressions.symbols"
          },
          {
            "path": "tests/baselines/reference/instantiationExpressions.types"
          },
          {
            "path": "tests/baselines/reference/interfaceDoesNotDependOnBaseTypes.symbols"
          },
          {
            "path": "tests/baselines/reference/intersectionWithUnionConstraint.symbols"
          },
          {
            "path": "tests/baselines/reference/intraExpressionInferences.symbols"
          },
          {
            "path": "tests/baselines/reference/invalidMultipleVariableDeclarations.symbols"
          },
          {
            "path": "tests/baselines/reference/invalidReturnStatements.symbols"
          },
          {
            "path": "tests/baselines/reference/invalidSymbolInTypeParameter1.symbols"
          },
          {
            "path": "tests/baselines/reference/isArray.symbols"
          },
          {
            "path": "tests/baselines/reference/isDeclarationVisibleNodeKinds.symbols"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationsAddUndefined2.symbols"
          },
          {
            "path": "tests/baselines/reference/javascriptThisAssignmentInStaticBlock.symbols"
          },
          {
            "path": "tests/baselines/reference/jsDeclarationsClassImplementsGenericsSerialization.symbols"
          },
          {
            "path": "tests/baselines/reference/jsDeclarationsFunctionLikeClasses.symbols"
          },
          {
            "path": "tests/baselines/reference/jsDeclarationsFunctionLikeClasses2.symbols"
          },
          {
            "path": "tests/baselines/reference/jsEnumTagOnObjectFrozen.symbols"
          },
          {
            "path": "tests/baselines/reference/jsExportMemberMergedWithModuleAugmentation2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsdocDisallowedInTypescript.symbols"
          },
          {
            "path": "tests/baselines/reference/jsdocParseDotDotDotInJSDocFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/json.stringify.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxChildrenArrayWrongType.types"
          },
          {
            "path": "tests/baselines/reference/jsxComplexSignatureHasApplicabilityError.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxComponentTypeErrors.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxElementType.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxInferenceProducesLiteralAsExpected.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxIntrinsicUnions.symbols"
          },
          {
            "path": "tests/baselines/reference/keyofAndIndexedAccess.symbols"
          },
          {
            "path": "tests/baselines/reference/keyofAndIndexedAccess.types"
          },
          {
            "path": "tests/baselines/reference/keyofAndIndexedAccessErrors.types"
          },
          {
            "path": "tests/baselines/reference/keyofGenericExtendingClassDoubleLayer.symbols"
          },
          {
            "path": "tests/baselines/reference/keywordExpressionInternalComments.symbols"
          },
          {
            "path": "tests/baselines/reference/largeTupleTypes.symbols"
          },
          {
            "path": "tests/baselines/reference/libMembers.errors.txt"
          },
          {
            "path": "tests/baselines/reference/libMembers.symbols"
          },
          {
            "path": "tests/baselines/reference/library_ArraySlice.symbols"
          },
          {
            "path": "tests/baselines/reference/library_DatePrototypeProperties.symbols"
          },
          {
            "path": "tests/baselines/reference/library_StringSlice.symbols"
          },
          {
            "path": "tests/baselines/reference/literalFreshnessPropagationOnNarrowing.symbols"
          },
          {
            "path": "tests/baselines/reference/literalTypeWidening.symbols"
          },
          {
            "path": "tests/baselines/reference/literalTypeWidening.types"
          },
          {
            "path": "tests/baselines/reference/literals.symbols"
          },
          {
            "path": "tests/baselines/reference/localTypeParameterInferencePriority.symbols"
          },
          {
            "path": "tests/baselines/reference/localTypes5.symbols"
          },
          {
            "path": "tests/baselines/reference/malformedTags.symbols"
          },
          {
            "path": "tests/baselines/reference/mappedTypeAsClauseRelationships.symbols"
          },
          {
            "path": "tests/baselines/reference/mappedTypeAsClauses.symbols"
          },
          {
            "path": "tests/baselines/reference/mappedTypeErrors.symbols"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.errors.txt"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeWithAny.errors.txt"
          },
          {
            "path": "tests/baselines/reference/mappedTypes1.symbols"
          },
          {
            "path": "tests/baselines/reference/mappedTypes2.symbols"
          },
          {
            "path": "tests/baselines/reference/mappedTypesArraysTuples.symbols"
          },
          {
            "path": "tests/baselines/reference/mergedInterfaceFromMultipleFiles1.symbols"
          },
          {
            "path": "tests/baselines/reference/mergedInterfacesWithMultipleBases3.symbols"
          },
          {
            "path": "tests/baselines/reference/mixinClassesAnonymous.symbols"
          },
          {
            "path": "tests/baselines/reference/modularizeLibrary_Worker.iterable.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleAugmentationGlobal1.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleAugmentationGlobal2.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleAugmentationGlobal3.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleAugmentationInAmbientModule5.symbols"
          },
          {
            "path": "tests/baselines/reference/moduleExportsAliasLoop1.symbols"
          },
          {
            "path": "tests/baselines/reference/multiSignatureTypeInference.symbols"
          },
          {
            "path": "tests/baselines/reference/namespaceMergedWithFunctionWithOverloadsUsage.symbols"
          },
          {
            "path": "tests/baselines/reference/namespaceNotMergedWithFunctionDefaultExport.symbols"
          },
          {
            "path": "tests/baselines/reference/narrowByBooleanComparison.symbols"
          },
          {
            "path": "tests/baselines/reference/narrowByClauseExpressionInSwitchTrue1.symbols"
          },
          {
            "path": "tests/baselines/reference/narrowByClauseExpressionInSwitchTrue3.symbols"
          },
          {
            "path": "tests/baselines/reference/narrowByInstanceof.symbols"
          },
          {
            "path": "tests/baselines/reference/narrowBySwitchDiscriminantUndefinedCase1(exactoptionalpropertytypes=false,nouncheckedindexedaccess=false).symbols"
          },
          {
            "path": "tests/baselines/reference/narrowBySwitchDiscriminantUndefinedCase1(exactoptionalpropertytypes=false,nouncheckedindexedaccess=true).symbols"
          },
          {
            "path": "tests/baselines/reference/narrowBySwitchDiscriminantUndefinedCase1(exactoptionalpropertytypes=true,nouncheckedindexedaccess=false).symbols"
          },
          {
            "path": "tests/baselines/reference/narrowBySwitchDiscriminantUndefinedCase1(exactoptionalpropertytypes=true,nouncheckedindexedaccess=true).symbols"
          },
          {
            "path": "tests/baselines/reference/narrowFromAnyWithInstanceof.symbols"
          },
          {
            "path": "tests/baselines/reference/narrowFromAnyWithTypePredicate.symbols"
          },
          {
            "path": "tests/baselines/reference/narrowingAssignmentReadonlyRespectsAssertion.symbols"
          },
          {
            "path": "tests/baselines/reference/narrowingByTypeofInSwitch.symbols"
          },
          {
            "path": "tests/baselines/reference/narrowingMutualSubtypes.symbols"
          },
          {
            "path": "tests/baselines/reference/narrowingTypeofUndefined2.symbols"
          },
          {
            "path": "tests/baselines/reference/narrowingWithNonNullExpression.symbols"
          },
          {
            "path": "tests/baselines/reference/narrowingWithNonNullExpression.types"
          },
          {
            "path": "tests/baselines/reference/nativeToBoxedTypes.symbols"
          },
          {
            "path": "tests/baselines/reference/nestedLoops.symbols"
          },
          {
            "path": "tests/baselines/reference/nestedPackageJsonRedirect(moduleresolution=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/nestedPackageJsonRedirect(moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nestedRecursiveArraysOrObjectsError01.symbols"
          },
          {
            "path": "tests/baselines/reference/neverTypeErrors1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/neverTypeErrors2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/newArrays.symbols"
          },
          {
            "path": "tests/baselines/reference/newNamesInGlobalAugmentations1.symbols"
          },
          {
            "path": "tests/baselines/reference/newOperator.symbols"
          },
          {
            "path": "tests/baselines/reference/noCrashOnThisTypeUsage.symbols"
          },
          {
            "path": "tests/baselines/reference/noImplicitAnyInContextuallyTypesFunctionParamter.symbols"
          },
          {
            "path": "tests/baselines/reference/noImplicitAnyInContextuallyTypesFunctionParamter.types"
          },
          {
            "path": "tests/baselines/reference/noUnusedLocals_destructuringAssignment.symbols"
          },
          {
            "path": "tests/baselines/reference/noUnusedLocals_potentialPredicateUnusedParam.symbols"
          },
          {
            "path": "tests/baselines/reference/noUnusedLocals_writeOnly.symbols"
          },
          {
            "path": "tests/baselines/reference/nodeNextModuleResolution1.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeNextModuleResolution2.trace.json"
          },
          {
            "path": "tests/baselines/reference/nonIdenticalTypeConstraints.symbols"
          },
          {
            "path": "tests/baselines/reference/nonInferrableTypePropagation2.symbols"
          },
          {
            "path": "tests/baselines/reference/nonPrimitiveAssignError.symbols"
          },
          {
            "path": "tests/baselines/reference/nonPrimitiveInGeneric.symbols"
          },
          {
            "path": "tests/baselines/reference/nonPrimitiveStrictNull.symbols"
          },
          {
            "path": "tests/baselines/reference/nonexistentPropertyOnUnion.symbols"
          },
          {
            "path": "tests/baselines/reference/nonexistentPropertyUnavailableOnPromisedType.symbols"
          },
          {
            "path": "tests/baselines/reference/nongenericConditionalNotPartiallyComputed.symbols"
          },
          {
            "path": "tests/baselines/reference/nullAssignableToEveryType.symbols"
          },
          {
            "path": "tests/baselines/reference/nullIsSubtypeOfEverythingButUndefined.symbols"
          },
          {
            "path": "tests/baselines/reference/numericIndexerConstraint.symbols"
          },
          {
            "path": "tests/baselines/reference/numericIndexerConstraint5.symbols"
          },
          {
            "path": "tests/baselines/reference/numericIndexerTyping1.symbols"
          },
          {
            "path": "tests/baselines/reference/numericIndexerTyping2.symbols"
          },
          {
            "path": "tests/baselines/reference/objectAssignLikeNonUnionResult.symbols"
          },
          {
            "path": "tests/baselines/reference/objectFromEntries.symbols"
          },
          {
            "path": "tests/baselines/reference/objectLitPropertyScoping.symbols"
          },
          {
            "path": "tests/baselines/reference/objectLiteralGettersAndSetters.symbols"
          },
          {
            "path": "tests/baselines/reference/objectTypeWithCallSignatureHidingMembersOfExtendedFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/objectTypeWithConstructSignatureHidingMembersOfExtendedFunction.symbols"
          },
          {
            "path": "tests/baselines/reference/objectTypeWithStringNamedNumericProperty.symbols"
          },
          {
            "path": "tests/baselines/reference/objectTypesIdentity2.symbols"
          },
          {
            "path": "tests/baselines/reference/objectTypesIdentityWithCallSignatures2.symbols"
          },
          {
            "path": "tests/baselines/reference/objectTypesIdentityWithConstructSignatures2.symbols"
          },
          {
            "path": "tests/baselines/reference/objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.symbols"
          },
          {
            "path": "tests/baselines/reference/objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints2.symbols"
          },
          {
            "path": "tests/baselines/reference/objectTypesIdentityWithGenericCallSignaturesDifferingByReturnType.symbols"
          },
          {
            "path": "tests/baselines/reference/objectTypesIdentityWithGenericCallSignaturesDifferingByReturnType2.symbols"
          },
          {
            "path": "tests/baselines/reference/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.symbols"
          },
          {
            "path": "tests/baselines/reference/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts2.symbols"
          },
          {
            "path": "tests/baselines/reference/objectTypesIdentityWithGenericConstructSignaturesDifferingByConstraints.symbols"
          },
          {
            "path": "tests/baselines/reference/objectTypesIdentityWithGenericConstructSignaturesDifferingByConstraints2.symbols"
          },
          {
            "path": "tests/baselines/reference/objectTypesIdentityWithGenericConstructSignaturesDifferingByReturnType.symbols"
          },
          {
            "path": "tests/baselines/reference/objectTypesIdentityWithGenericConstructSignaturesDifferingByReturnType2.symbols"
          },
          {
            "path": "tests/baselines/reference/objectTypesIdentityWithGenericConstructSignaturesDifferingTypeParameterCounts.symbols"
          },
          {
            "path": "tests/baselines/reference/operationsAvailableOnPromisedType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/operationsAvailableOnPromisedType.symbols"
          },
          {
            "path": "tests/baselines/reference/optionalFunctionArgAssignability.symbols"
          },
          {
            "path": "tests/baselines/reference/overloadOnGenericArity.symbols"
          },
          {
            "path": "tests/baselines/reference/overloadResolution.errors.txt"
          },
          {
            "path": "tests/baselines/reference/overloadResolution.symbols"
          },
          {
            "path": "tests/baselines/reference/overloadResolutionClassConstructors.errors.txt"
          },
          {
            "path": "tests/baselines/reference/overloadResolutionClassConstructors.symbols"
          },
          {
            "path": "tests/baselines/reference/overloadResolutionConstructors.errors.txt"
          },
          {
            "path": "tests/baselines/reference/overloadResolutionConstructors.symbols"
          },
          {
            "path": "tests/baselines/reference/overloadResolutionOverNonCTLambdas.symbols"
          },
          {
            "path": "tests/baselines/reference/overloadResolutionOverNonCTLambdas.types"
          },
          {
            "path": "tests/baselines/reference/overloadResolutionWithAny.symbols"
          },
          {
            "path": "tests/baselines/reference/overloadsWithConstraints.symbols"
          },
          {
            "path": "tests/baselines/reference/parenthesizedContexualTyping1.symbols"
          },
          {
            "path": "tests/baselines/reference/parenthesizedContexualTyping2.symbols"
          },
          {
            "path": "tests/baselines/reference/parenthesizedTypes.symbols"
          },
          {
            "path": "tests/baselines/reference/parser15.4.4.14-9-2.symbols"
          },
          {
            "path": "tests/baselines/reference/parser630933.symbols"
          },
          {
            "path": "tests/baselines/reference/parser630933.types"
          },
          {
            "path": "tests/baselines/reference/parserArgumentList1.symbols"
          },
          {
            "path": "tests/baselines/reference/parserArgumentList1.types"
          },
          {
            "path": "tests/baselines/reference/parserConstructorAmbiguity1.symbols"
          },
          {
            "path": "tests/baselines/reference/parserConstructorAmbiguity2.symbols"
          },
          {
            "path": "tests/baselines/reference/parserConstructorAmbiguity3.symbols"
          },
          {
            "path": "tests/baselines/reference/parserConstructorAmbiguity4.symbols"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty1.symbols"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty1.types"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty2.symbols"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty2.types"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty3.symbols"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty3.types"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty4.symbols"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty4.types"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty5.symbols"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty5.types"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty6.symbols"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty6.types"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty7.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty7.symbols"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty7.types"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty8.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty8.symbols"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty8.types"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty9.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty9.symbols"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty9.types"
          },
          {
            "path": "tests/baselines/reference/parserErrorRecovery_IncompleteMemberVariable1.symbols"
          },
          {
            "path": "tests/baselines/reference/parserErrorRecovery_IncompleteMemberVariable2.symbols"
          },
          {
            "path": "tests/baselines/reference/parserForInStatement8.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserIndexSignature8.symbols"
          },
          {
            "path": "tests/baselines/reference/parserMissingLambdaOpenBrace1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserMissingLambdaOpenBrace1.symbols"
          },
          {
            "path": "tests/baselines/reference/parserMissingLambdaOpenBrace1.types"
          },
          {
            "path": "tests/baselines/reference/parserObjectCreation1.symbols"
          },
          {
            "path": "tests/baselines/reference/parserRealSource1.symbols"
          },
          {
            "path": "tests/baselines/reference/parserRealSource11.symbols"
          },
          {
            "path": "tests/baselines/reference/parserRealSource11.types"
          },
          {
            "path": "tests/baselines/reference/parserRealSource6.symbols"
          },
          {
            "path": "tests/baselines/reference/parserRealSource7.symbols"
          },
          {
            "path": "tests/baselines/reference/parserRealSource8.symbols"
          },
          {
            "path": "tests/baselines/reference/parserRealSource9.symbols"
          },
          {
            "path": "tests/baselines/reference/parserRegularExpressionDivideAmbiguity5.symbols"
          },
          {
            "path": "tests/baselines/reference/parserUnterminatedGeneric1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserUnterminatedGeneric2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/partiallyDiscriminantedUnions.symbols"
          },
          {
            "path": "tests/baselines/reference/potentiallyUnassignedVariableInCatch.symbols"
          },
          {
            "path": "tests/baselines/reference/primitiveMembers.symbols"
          },
          {
            "path": "tests/baselines/reference/privateNamesIncompatibleModifiers.errors.txt"
          },
          {
            "path": "tests/baselines/reference/privateNamesIncompatibleModifiers.types"
          },
          {
            "path": "tests/baselines/reference/promiseChaining1.symbols"
          },
          {
            "path": "tests/baselines/reference/promiseChaining2.symbols"
          },
          {
            "path": "tests/baselines/reference/promiseDefinitionTest.errors.txt"
          },
          {
            "path": "tests/baselines/reference/promiseDefinitionTest.symbols"
          },
          {
            "path": "tests/baselines/reference/promisePermutations.errors.txt"
          },
          {
            "path": "tests/baselines/reference/promisePermutations.symbols"
          },
          {
            "path": "tests/baselines/reference/promisePermutations2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/promisePermutations2.symbols"
          },
          {
            "path": "tests/baselines/reference/promisePermutations3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/promisePermutations3.symbols"
          },
          {
            "path": "tests/baselines/reference/promiseTest.symbols"
          },
          {
            "path": "tests/baselines/reference/promises.symbols"
          },
          {
            "path": "tests/baselines/reference/promisesWithConstraints.symbols"
          },
          {
            "path": "tests/baselines/reference/propertyAccessExpressionInnerComments.symbols"
          },
          {
            "path": "tests/baselines/reference/propertyAccessOnTypeParameterWithConstraints.symbols"
          },
          {
            "path": "tests/baselines/reference/propertyAccessOnTypeParameterWithConstraints4.symbols"
          },
          {
            "path": "tests/baselines/reference/prototypePropertyAssignmentMergeWithInterfaceMethod.errors.txt"
          },
          {
            "path": "tests/baselines/reference/prototypePropertyAssignmentMergeWithInterfaceMethod.symbols"
          },
          {
            "path": "tests/baselines/reference/qualify.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ramdaToolsNoInfinite2.symbols"
          },
          {
            "path": "tests/baselines/reference/reactReduxLikeDeferredInferenceAllowsAssignment.symbols"
          },
          {
            "path": "tests/baselines/reference/readonlyArraysAndTuples.symbols"
          },
          {
            "path": "tests/baselines/reference/readonlyArraysAndTuples2.symbols"
          },
          {
            "path": "tests/baselines/reference/readonlyFloat32ArrayAssignableWithFloat32Array.symbols"
          },
          {
            "path": "tests/baselines/reference/readonlyTupleAndArrayElaboration.symbols"
          },
          {
            "path": "tests/baselines/reference/recursiveComplicatedClasses.errors.txt"
          },
          {
            "path": "tests/baselines/reference/recursiveComplicatedClasses.symbols"
          },
          {
            "path": "tests/baselines/reference/recursiveComplicatedClasses.types"
          },
          {
            "path": "tests/baselines/reference/recursiveConditionalCrash3.symbols"
          },
          {
            "path": "tests/baselines/reference/recursiveGenericMethodCall.symbols"
          },
          {
            "path": "tests/baselines/reference/recursiveGenericMethodCall.types"
          },
          {
            "path": "tests/baselines/reference/recursiveResolveTypeMembers.symbols"
          },
          {
            "path": "tests/baselines/reference/recursiveTypeAliasWithSpreadConditionalReturnNotCircular.symbols"
          },
          {
            "path": "tests/baselines/reference/recursiveTypeReferences1.symbols"
          },
          {
            "path": "tests/baselines/reference/recursiveTypeReferences1.types"
          },
          {
            "path": "tests/baselines/reference/recursiveTypeRelations.symbols"
          },
          {
            "path": "tests/baselines/reference/recursiveTypeRelations.types"
          },
          {
            "path": "tests/baselines/reference/recursiveTypesWithTypeof.symbols"
          },
          {
            "path": "tests/baselines/reference/redefineArray.errors.txt"
          },
          {
            "path": "tests/baselines/reference/redefineArray.symbols"
          },
          {
            "path": "tests/baselines/reference/regExpWithOpenBracketInCharClass(target=es5).symbols"
          },
          {
            "path": "tests/baselines/reference/regExpWithSlashInCharClass.symbols"
          },
          {
            "path": "tests/baselines/reference/regExpWithSlashInCharClass.types"
          },
          {
            "path": "tests/baselines/reference/regularExpressionScanning(target=es5).symbols"
          },
          {
            "path": "tests/baselines/reference/resolvesWithoutExportsDiagnostic1(moduleresolution=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/restElementWithNumberPropertyName.types"
          },
          {
            "path": "tests/baselines/reference/restInvalidArgumentType.types"
          },
          {
            "path": "tests/baselines/reference/restParameterWithBindingPattern3.types"
          },
          {
            "path": "tests/baselines/reference/restParametersOfNonArrayTypes.symbols"
          },
          {
            "path": "tests/baselines/reference/restParametersOfNonArrayTypes2.symbols"
          },
          {
            "path": "tests/baselines/reference/restParametersWithArrayTypeAnnotations.symbols"
          },
          {
            "path": "tests/baselines/reference/restPropertyWithBindingPattern.types"
          },
          {
            "path": "tests/baselines/reference/returnStatements.symbols"
          },
          {
            "path": "tests/baselines/reference/returnTypeParameterWithModules.symbols"
          },
          {
            "path": "tests/baselines/reference/reverseMappedIntersectionInference2.types"
          },
          {
            "path": "tests/baselines/reference/reverseMappedTypeIntersectionConstraint.errors.txt"
          },
          {
            "path": "tests/baselines/reference/reverseMappedTypeIntersectionConstraint.symbols"
          },
          {
            "path": "tests/baselines/reference/reverseMappedTypeIntersectionConstraint.types"
          },
          {
            "path": "tests/baselines/reference/scopeResolutionIdentifiers.symbols"
          },
          {
            "path": "tests/baselines/reference/sourceMap-FileWithComments.symbols"
          },
          {
            "path": "tests/baselines/reference/sourceMapValidationDecorators.symbols"
          },
          {
            "path": "tests/baselines/reference/sourceMapValidationForIn.symbols"
          },
          {
            "path": "tests/baselines/reference/sourceMapWithMultipleFilesWithFileEndingWithInterface.symbols"
          },
          {
            "path": "tests/baselines/reference/specedNoStackBlown.symbols"
          },
          {
            "path": "tests/baselines/reference/specializationError.symbols"
          },
          {
            "path": "tests/baselines/reference/specializedSignatureIsNotSubtypeOfNonSpecializedSignature.symbols"
          },
          {
            "path": "tests/baselines/reference/specializedSignatureIsSubtypeOfNonSpecializedSignature.symbols"
          },
          {
            "path": "tests/baselines/reference/spellingUncheckedJS.symbols"
          },
          {
            "path": "tests/baselines/reference/spreadBooleanRespectsFreshness.symbols"
          },
          {
            "path": "tests/baselines/reference/spreadInvalidArgumentType.types"
          },
          {
            "path": "tests/baselines/reference/spreadOfParamsFromGeneratorMakesRequiredParams.errors.txt"
          },
          {
            "path": "tests/baselines/reference/spreadOfParamsFromGeneratorMakesRequiredParams.types"
          },
          {
            "path": "tests/baselines/reference/spyComparisonChecking.symbols"
          },
          {
            "path": "tests/baselines/reference/staticAnonymousTypeNotReferencingTypeParameter.symbols"
          },
          {
            "path": "tests/baselines/reference/staticAnonymousTypeNotReferencingTypeParameter.types"
          },
          {
            "path": "tests/baselines/reference/staticMembersUsingClassTypeParameter.symbols"
          },
          {
            "path": "tests/baselines/reference/strictFunctionTypes1.symbols"
          },
          {
            "path": "tests/baselines/reference/strictNullEmptyDestructuring.symbols"
          },
          {
            "path": "tests/baselines/reference/strictNullLogicalAndOr.symbols"
          },
          {
            "path": "tests/baselines/reference/strictSubtypeAndNarrowing.symbols"
          },
          {
            "path": "tests/baselines/reference/stringIndexerConstrainsPropertyDeclarations.symbols"
          },
          {
            "path": "tests/baselines/reference/stringLiteralTypeIsSubtypeOfString.errors.txt"
          },
          {
            "path": "tests/baselines/reference/stringLiteralTypeIsSubtypeOfString.symbols"
          },
          {
            "path": "tests/baselines/reference/stringLiteralTypeIsSubtypeOfString.types"
          },
          {
            "path": "tests/baselines/reference/subtypesOfAny.symbols"
          },
          {
            "path": "tests/baselines/reference/subtypesOfTypeParameter.symbols"
          },
          {
            "path": "tests/baselines/reference/subtypesOfTypeParameterWithConstraints.symbols"
          },
          {
            "path": "tests/baselines/reference/subtypesOfTypeParameterWithConstraints2.symbols"
          },
          {
            "path": "tests/baselines/reference/subtypesOfUnion.symbols"
          },
          {
            "path": "tests/baselines/reference/subtypingWithCallSignatures2.symbols"
          },
          {
            "path": "tests/baselines/reference/subtypingWithCallSignatures3.symbols"
          },
          {
            "path": "tests/baselines/reference/subtypingWithConstructSignatures2.symbols"
          },
          {
            "path": "tests/baselines/reference/subtypingWithConstructSignatures3.symbols"
          },
          {
            "path": "tests/baselines/reference/subtypingWithConstructSignatures5.symbols"
          },
          {
            "path": "tests/baselines/reference/superCallFromClassThatDerivesFromGenericTypeButWithIncorrectNumberOfTypeArguments1.symbols"
          },
          {
            "path": "tests/baselines/reference/superCallFromClassThatDerivesFromGenericTypeButWithNoTypeArguments1.symbols"
          },
          {
            "path": "tests/baselines/reference/superCallFromClassThatDerivesNonGenericTypeButWithTypeArguments1.symbols"
          },
          {
            "path": "tests/baselines/reference/superCallFromClassThatHasNoBaseType1.symbols"
          },
          {
            "path": "tests/baselines/reference/superCallFromClassThatHasNoBaseTypeButWithSameSymbolInterface.symbols"
          },
          {
            "path": "tests/baselines/reference/superCallFromFunction1.symbols"
          },
          {
            "path": "tests/baselines/reference/superCallParameterContextualTyping1.symbols"
          },
          {
            "path": "tests/baselines/reference/superCallParameterContextualTyping2.symbols"
          },
          {
            "path": "tests/baselines/reference/superNewCall1.symbols"
          },
          {
            "path": "tests/baselines/reference/switchStatements.symbols"
          },
          {
            "path": "tests/baselines/reference/symbolObserverMismatchingPolyfillsWorkTogether.symbols"
          },
          {
            "path": "tests/baselines/reference/symbolProperty55.symbols"
          },
          {
            "path": "tests/baselines/reference/symbolProperty58.symbols"
          },
          {
            "path": "tests/baselines/reference/symbolProperty61.symbols"
          },
          {
            "path": "tests/baselines/reference/systemDefaultImportCallable.symbols"
          },
          {
            "path": "tests/baselines/reference/taggedTemplateStringsTypeArgumentInference.symbols"
          },
          {
            "path": "tests/baselines/reference/taggedTemplateStringsWithOverloadResolution3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/taggedTemplateStringsWithOverloadResolution3.symbols"
          },
          {
            "path": "tests/baselines/reference/taggedTemplateUntypedTagCall01.symbols"
          },
          {
            "path": "tests/baselines/reference/templateLiteralTypes1.types"
          },
          {
            "path": "tests/baselines/reference/templateLiteralTypes2.symbols"
          },
          {
            "path": "tests/baselines/reference/templateStringInInstanceOf.symbols"
          },
          {
            "path": "tests/baselines/reference/templateStringWithEmbeddedInstanceOf.symbols"
          },
          {
            "path": "tests/baselines/reference/templateStringWithEmbeddedNewOperator.symbols"
          },
          {
            "path": "tests/baselines/reference/templateStringWithEmbeddedYieldKeyword.errors.txt"
          },
          {
            "path": "tests/baselines/reference/templateStringWithEmbeddedYieldKeyword.types"
          },
          {
            "path": "tests/baselines/reference/templateStringsArrayTypeDefinedInES5Mode.errors.txt"
          },
          {
            "path": "tests/baselines/reference/templateStringsArrayTypeNotDefinedES5Mode.errors.txt"
          },
          {
            "path": "tests/baselines/reference/thisInPropertyBoundDeclarations.symbols"
          },
          {
            "path": "tests/baselines/reference/thisInTupleTypeParameterConstraints.symbols"
          },
          {
            "path": "tests/baselines/reference/thisTypeInClasses.symbols"
          },
          {
            "path": "tests/baselines/reference/thisTypeInInterfaces.symbols"
          },
          {
            "path": "tests/baselines/reference/thisTypeInTuples.symbols"
          },
          {
            "path": "tests/baselines/reference/throwStatements.symbols"
          },
          {
            "path": "tests/baselines/reference/tooManyTypeParameters1.symbols"
          },
          {
            "path": "tests/baselines/reference/topLevelBlockExpando.symbols"
          },
          {
            "path": "tests/baselines/reference/truthinessCallExpressionCoercion.symbols"
          },
          {
            "path": "tests/baselines/reference/truthinessCallExpressionCoercion1.symbols"
          },
          {
            "path": "tests/baselines/reference/tsxAttributesHasInferrableIndex.symbols"
          },
          {
            "path": "tests/baselines/reference/twoGenericInterfacesWithDifferentConstraints.symbols"
          },
          {
            "path": "tests/baselines/reference/twoMergedInterfacesWithDifferingOverloads.symbols"
          },
          {
            "path": "tests/baselines/reference/typeAliasDoesntMakeModuleInstantiated.symbols"
          },
          {
            "path": "tests/baselines/reference/typeArgumentConstraintResolution1.symbols"
          },
          {
            "path": "tests/baselines/reference/typeArgumentInference.symbols"
          },
          {
            "path": "tests/baselines/reference/typeArgumentInferenceTransitiveConstraints.symbols"
          },
          {
            "path": "tests/baselines/reference/typeGuardConstructorClassAndNumber.symbols"
          },
          {
            "path": "tests/baselines/reference/typeGuardConstructorNarrowPrimitivesInUnion.symbols"
          },
          {
            "path": "tests/baselines/reference/typeGuardNarrowsIndexedAccessOfKnownProperty1.symbols"
          },
          {
            "path": "tests/baselines/reference/typeGuardOfFromPropNameInUnionType.symbols"
          },
          {
            "path": "tests/baselines/reference/typeGuardsWithInstanceOf.symbols"
          },
          {
            "path": "tests/baselines/reference/typeGuardsWithInstanceOfByConstructorSignature.symbols"
          },
          {
            "path": "tests/baselines/reference/typeInferenceLiteralUnion.symbols"
          },
          {
            "path": "tests/baselines/reference/typeOfThisInMemberFunctions.symbols"
          },
          {
            "path": "tests/baselines/reference/typeParameterAssignability2.symbols"
          },
          {
            "path": "tests/baselines/reference/typeParameterConstraints1.symbols"
          },
          {
            "path": "tests/baselines/reference/typeParameterUsedAsConstraint.symbols"
          },
          {
            "path": "tests/baselines/reference/typeParametersAreIdenticalToThemselves.symbols"
          },
          {
            "path": "tests/baselines/reference/typeParametersShouldNotBeEqual2.symbols"
          },
          {
            "path": "tests/baselines/reference/typePredicateFreshLiteralWidening.symbols"
          },
          {
            "path": "tests/baselines/reference/typeSatisfaction_contextualTyping3.symbols"
          },
          {
            "path": "tests/baselines/reference/typedArrays-es5.symbols"
          },
          {
            "path": "tests/baselines/reference/typedArrays-es6.symbols"
          },
          {
            "path": "tests/baselines/reference/typedArraysSubarray.symbols"
          },
          {
            "path": "tests/baselines/reference/undefinedAssignableToEveryType.symbols"
          },
          {
            "path": "tests/baselines/reference/undefinedIsSubtypeOfEverything.symbols"
          },
          {
            "path": "tests/baselines/reference/undefinedTypeArgument1.symbols"
          },
          {
            "path": "tests/baselines/reference/underscoreTest1.symbols"
          },
          {
            "path": "tests/baselines/reference/underscoreTest1.types"
          },
          {
            "path": "tests/baselines/reference/unicodeEscapesInNames02(target=es5).symbols"
          },
          {
            "path": "tests/baselines/reference/unionOfClassCalls.symbols"
          },
          {
            "path": "tests/baselines/reference/unionOfFunctionAndSignatureIsCallable.symbols"
          },
          {
            "path": "tests/baselines/reference/unionPropertyOfProtectedAndIntersectionProperty.symbols"
          },
          {
            "path": "tests/baselines/reference/unionSubtypeIfEveryConstituentTypeIsSubtype.symbols"
          },
          {
            "path": "tests/baselines/reference/unionTypeCallSignatures.symbols"
          },
          {
            "path": "tests/baselines/reference/unionTypeCallSignatures2.symbols"
          },
          {
            "path": "tests/baselines/reference/unionTypeConstructSignatures.symbols"
          },
          {
            "path": "tests/baselines/reference/unionTypeIndexSignature.symbols"
          },
          {
            "path": "tests/baselines/reference/unionTypeLiterals.symbols"
          },
          {
            "path": "tests/baselines/reference/unionWithIndexSignature.symbols"
          },
          {
            "path": "tests/baselines/reference/unionWithIndexSignature.types"
          },
          {
            "path": "tests/baselines/reference/unknownControlFlow.symbols"
          },
          {
            "path": "tests/baselines/reference/unknownControlFlow.types"
          },
          {
            "path": "tests/baselines/reference/unknownSymbolInGenericReturnType.symbols"
          },
          {
            "path": "tests/baselines/reference/unknownType1.symbols"
          },
          {
            "path": "tests/baselines/reference/untypedFunctionCallsWithTypeParameters1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/untypedFunctionCallsWithTypeParameters1.symbols"
          },
          {
            "path": "tests/baselines/reference/unusedLocalsAndParametersTypeAliases.symbols"
          },
          {
            "path": "tests/baselines/reference/validMultipleVariableDeclarations.symbols"
          },
          {
            "path": "tests/baselines/reference/validStringAssignments.symbols"
          },
          {
            "path": "tests/baselines/reference/variadicTuples1.types"
          },
          {
            "path": "tests/baselines/reference/variadicTuples2.symbols"
          },
          {
            "path": "tests/baselines/reference/verifyDefaultLib_webworker.types"
          },
          {
            "path": "tests/baselines/reference/webworkerIterable.symbols"
          },
          {
            "path": "tests/baselines/reference/wrappedAndRecursiveConstraints.symbols"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6V7DFb",
      "title": "Add type definitions for `Uint8Array` to/from base64 methods",
      "url": "https://github.com/microsoft/TypeScript/pull/61696",
      "mergedAt": "2025-10-03T21:01:58Z",
      "updatedAt": "2025-10-03T21:01:58Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3a68348fcbb5916228a722c433017cc5af75a0fe"
      },
      "author": {
        "login": "dontwanttothink"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Renegade334"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dontwanttothink"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/lib/esnext.d.ts"
          },
          {
            "path": "src/lib/esnext.typedarrays.d.ts"
          },
          {
            "path": "src/lib/libs.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse --lib option with extra comma.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse --lib option with trailing white-space.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse invalid option of library flags.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs array to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs array to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert trailing-whitespace string option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert trailing-whitespace string option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/findLast(target=esnext).symbols"
          },
          {
            "path": "tests/baselines/reference/indexAt(target=esnext).symbols"
          },
          {
            "path": "tests/baselines/reference/libReplacement(libreplacement=true).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNext.trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNextEsm.trace.json"
          },
          {
            "path": "tests/baselines/reference/subclassUint8Array.symbols"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/does-not-add-color-when-NO_COLOR-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped-when-host-can't-provide-terminal-width.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true-useFsEventsOnParentDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-event-ends-with-tilde.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-occurs-when-file-is-still-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-dynamic-polling-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-watchDirectory-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-watchFile-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders-with-synchronousWatchDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-renaming-a-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-with-outDir-and-declaration-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-fallbackPolling-option.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-watchDirectory-option.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/file-rename-on-wsl2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/does-not-expose-paths.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/recursive-directory-does-not-watch-files-starting-with-dot-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-dynamic-polling-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-non-recursive-watchDirectory-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-watchFile-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/watching-npm-install-in-codespaces-where-workspaces-folder-is-hosted-at-root.js"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6sCwE9",
      "title": "Update DOM types for FileSystemDirectoryHandle changes",
      "url": "https://github.com/microsoft/TypeScript/pull/62538",
      "mergedAt": "2025-10-03T23:36:43Z",
      "updatedAt": "2025-10-03T23:36:45Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d0d675a363bf25d435857766757d97b9ad508909"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/dom.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.generated.d.ts"
          },
          {
            "path": "tests/baselines/reference/modularizeLibrary_Dom.asynciterable.symbols"
          },
          {
            "path": "tests/baselines/reference/modularizeLibrary_Dom.asynciterable.types"
          },
          {
            "path": "tests/baselines/reference/modularizeLibrary_Worker.asynciterable.symbols"
          },
          {
            "path": "tests/baselines/reference/modularizeLibrary_Worker.asynciterable.types"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6sKZ9R",
      "title": "Consistently resolve to the `errorType` on `arguments` with error",
      "url": "https://github.com/microsoft/TypeScript/pull/62549",
      "mergedAt": "2025-10-05T22:40:28Z",
      "updatedAt": "2025-10-05T22:40:28Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6ba7d3560fe625e02c819c02cad84d36dfe7ca60"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/argumentsUsedInClassFieldInitializerOrStaticInitializationBlock.types"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6sKtv9",
      "title": "Bump the github-actions group with 2 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/62551",
      "mergedAt": "2025-10-06T07:07:14Z",
      "updatedAt": "2025-10-06T07:07:15Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "fe592f16279e23aed618e503077c890d51a891cd"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    }
  ]
}