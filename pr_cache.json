{
  "version": 3,
  "timestamp": "2025-06-09T19:13:57.286Z",
  "prs": [
    {
      "id": "PR_kwDOAT9aAc58m0UV",
      "title": "Adding preparePasteEdits method to check if smart copy/paste should be applied",
      "url": "https://github.com/microsoft/TypeScript/pull/60053",
      "mergedAt": "2024-09-26T18:50:24Z",
      "updatedAt": "2024-09-26T18:50:24Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "8499803ae02cb657c3219aa193648968c9805851"
      },
      "author": {
        "login": "navya9singh"
      },
      "assignees": {
        "nodes": [
          {
            "login": "navya9singh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "navya9singh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "mjbvz"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sheetalkamat"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/harness/client.ts"
          },
          {
            "path": "src/harness/fourslashImpl.ts"
          },
          {
            "path": "src/harness/fourslashInterfaceImpl.ts"
          },
          {
            "path": "src/server/protocol.ts"
          },
          {
            "path": "src/server/session.ts"
          },
          {
            "path": "src/services/_namespaces/ts.preparePasteEdits.ts"
          },
          {
            "path": "src/services/_namespaces/ts.ts"
          },
          {
            "path": "src/services/preparePasteEdits.ts"
          },
          {
            "path": "src/services/refactors/moveToFile.ts"
          },
          {
            "path": "src/services/services.ts"
          },
          {
            "path": "src/services/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/cases/fourslash/fourslash.ts"
          },
          {
            "path": "tests/cases/fourslash/preparePasteEdits_multipleLocations.ts"
          },
          {
            "path": "tests/cases/fourslash/preparePasteEdits_resolvedIdentifiers.ts"
          },
          {
            "path": "tests/cases/fourslash/preparePasteEdits_resolvedTypeParameters.ts"
          },
          {
            "path": "tests/cases/fourslash/preparePasteEdits_returnFalse.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc581GOR",
      "title": "Unexport NodeTypingsInstaller in typingsInstaller.js",
      "url": "https://github.com/microsoft/TypeScript/pull/60075",
      "mergedAt": "2024-09-26T19:08:29Z",
      "updatedAt": "2024-09-26T19:08:31Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "825826fd66306201d20db806cf8438937a9960d0"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "sheetalkamat"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/typingsInstaller/nodeTypingsInstaller.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc54neE0",
      "title": "Report implict any error when widening null/undefined in presence of â€¦",
      "url": "https://github.com/microsoft/TypeScript/pull/59661",
      "mergedAt": "2024-09-26T21:06:57Z",
      "updatedAt": "2024-12-18T22:25:20Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "25ab551a123fb90ea27b877afc15d0689c5cf0a3"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/generatorReturnTypeInferenceNonStrict.errors.txt"
          },
          {
            "path": "tests/baselines/reference/generatorTypeCheck62.errors.txt"
          },
          {
            "path": "tests/baselines/reference/implicitAnyGenericTypeInference.errors.txt"
          },
          {
            "path": "tests/baselines/reference/implicitAnyGenericTypeInference.js"
          },
          {
            "path": "tests/baselines/reference/implicitAnyGenericTypeInference.symbols"
          },
          {
            "path": "tests/baselines/reference/implicitAnyGenericTypeInference.types"
          },
          {
            "path": "tests/cases/compiler/implicitAnyGenericTypeInference.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc55J_8d",
      "title": "Enable Node.js/v8 compile caching via entrypoint shims",
      "url": "https://github.com/microsoft/TypeScript/pull/59720",
      "mergedAt": "2024-09-26T21:53:31Z",
      "updatedAt": "2024-09-27T12:38:02Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "5119230083cea72066a8ec13d88f288b5be31eb1"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "anishkumar127"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "Herebyfile.mjs"
          },
          {
            "path": "scripts/produceLKG.mjs"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc51U7r3",
      "title": "Simplify statSync",
      "url": "https://github.com/microsoft/TypeScript/pull/59276",
      "mergedAt": "2024-09-26T22:28:29Z",
      "updatedAt": "2024-09-26T22:28:30Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "20746579b76b58059107f15dd9fd37920aa0ebfa"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sheetalkamat"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/sys.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc582f3f",
      "title": "Make noCheck non-internal on CompilerOptions",
      "url": "https://github.com/microsoft/TypeScript/pull/60078",
      "mergedAt": "2024-09-26T22:28:42Z",
      "updatedAt": "2024-09-26T22:28:43Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "da1fb07db09274c6435d3175249265c1b8c8d12c"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "sheetalkamat"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc57fCI1",
      "title": "Add CopilotRelated command",
      "url": "https://github.com/microsoft/TypeScript/pull/59963",
      "mergedAt": "2024-09-26T23:10:41Z",
      "updatedAt": "2024-09-27T14:08:46Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "52c59dbcbee274e523ef39e6c8be1bd5e110c2f1"
      },
      "author": {
        "login": "sandersn"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "sheetalkamat"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sheetalkamat"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/harness/client.ts"
          },
          {
            "path": "src/harness/fourslashImpl.ts"
          },
          {
            "path": "src/harness/fourslashInterfaceImpl.ts"
          },
          {
            "path": "src/server/protocol.ts"
          },
          {
            "path": "src/server/session.ts"
          },
          {
            "path": "src/services/services.ts"
          },
          {
            "path": "src/services/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/cases/fourslash/fourslash.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsDuplicate.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsDynamic.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsJSXFactory.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsNone.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsOne.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsOneJs.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsReexport.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsTslib.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5v44Ni",
      "title": "Introduce ES2024 target and fix some types",
      "url": "https://github.com/microsoft/TypeScript/pull/58573",
      "mergedAt": "2024-09-27T18:58:17Z",
      "updatedAt": "2024-09-27T21:32:23Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "9d98874739893b00d8a93f8890f7c8f73b1f11d1"
      },
      "author": {
        "login": "petamoriken"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "petamoriken"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "petamoriken"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "petamoriken"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "petamoriken"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/transformers/esnext.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/lib/es2016.intl.d.ts"
          },
          {
            "path": "src/lib/es2017.arraybuffer.d.ts"
          },
          {
            "path": "src/lib/es2017.d.ts"
          },
          {
            "path": "src/lib/es2017.sharedmemory.d.ts"
          },
          {
            "path": "src/lib/es2020.bigint.d.ts"
          },
          {
            "path": "src/lib/es2020.intl.d.ts"
          },
          {
            "path": "src/lib/es2020.sharedmemory.d.ts"
          },
          {
            "path": "src/lib/es2020.string.d.ts"
          },
          {
            "path": "src/lib/es2021.intl.d.ts"
          },
          {
            "path": "src/lib/es2021.weakref.d.ts"
          },
          {
            "path": "src/lib/es2022.d.ts"
          },
          {
            "path": "src/lib/es2022.error.d.ts"
          },
          {
            "path": "src/lib/es2022.intl.d.ts"
          },
          {
            "path": "src/lib/es2024.arraybuffer.d.ts"
          },
          {
            "path": "src/lib/es2024.collection.d.ts"
          },
          {
            "path": "src/lib/es2024.d.ts"
          },
          {
            "path": "src/lib/es2024.full.d.ts"
          },
          {
            "path": "src/lib/es2024.object.d.ts"
          },
          {
            "path": "src/lib/es2024.promise.d.ts"
          },
          {
            "path": "src/lib/es2024.regexp.d.ts"
          },
          {
            "path": "src/lib/es2024.sharedmemory.d.ts"
          },
          {
            "path": "src/lib/es2024.string.d.ts"
          },
          {
            "path": "src/lib/es5.d.ts"
          },
          {
            "path": "src/lib/esnext.collection.d.ts"
          },
          {
            "path": "src/lib/esnext.d.ts"
          },
          {
            "path": "src/lib/libs.json"
          },
          {
            "path": "src/server/protocol.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/callChainWithSuper(target=es2024).js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse --lib option with extra comma.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse --lib option with trailing white-space.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse empty options of --target.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse invalid option of library flags.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs array to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs array to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of target to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of target to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert trailing-whitespace string option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert trailing-whitespace string option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert tsconfig options when there are multiple invalid strings with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/es2024SharedMemory.errors.txt"
          },
          {
            "path": "tests/baselines/reference/es2024SharedMemory.symbols"
          },
          {
            "path": "tests/baselines/reference/es2024SharedMemory.types"
          },
          {
            "path": "tests/baselines/reference/mapGroupBy.symbols"
          },
          {
            "path": "tests/baselines/reference/modulePreserve2.trace.json"
          },
          {
            "path": "tests/baselines/reference/modulePreserve3.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAtTypesPriority.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/objectGroupBy.errors.txt"
          },
          {
            "path": "tests/baselines/reference/objectGroupBy.symbols"
          },
          {
            "path": "tests/baselines/reference/promiseWithResolvers.symbols"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNext.trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNextEsm.trace.json"
          },
          {
            "path": "tests/baselines/reference/regExpWithOpenBracketInCharClass(target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/regExpWithOpenBracketInCharClass(target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/regularExpressionScanning(target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/regularExpressionScanning(target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/resizableArrayBuffer.symbols"
          },
          {
            "path": "tests/baselines/reference/resizableArrayBuffer.types"
          },
          {
            "path": "tests/baselines/reference/sharedMemory.symbols"
          },
          {
            "path": "tests/baselines/reference/sharedMemory.types"
          },
          {
            "path": "tests/baselines/reference/transferableArrayBuffer.symbols"
          },
          {
            "path": "tests/baselines/reference/transferableArrayBuffer.types"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/does-not-add-color-when-NO_COLOR-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped-when-host-can't-provide-terminal-width.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true-useFsEventsOnParentDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-event-ends-with-tilde.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-occurs-when-file-is-still-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-dynamic-polling-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-watchDirectory-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-watchFile-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders-with-synchronousWatchDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-renaming-a-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-with-outDir-and-declaration-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-fallbackPolling-option.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-watchDirectory-option.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/autoImportProvider6.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/file-rename-on-wsl2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/does-not-expose-paths.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/recursive-directory-does-not-watch-files-starting-with-dot-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-dynamic-polling-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-non-recursive-watchDirectory-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-watchFile-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/watching-npm-install-in-codespaces-where-workspaces-folder-is-hosted-at-root.js"
          },
          {
            "path": "tests/baselines/reference/typesVersions.ambientModules.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.emptyTypes.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.justIndex.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.ambient.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToSelf.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToUnmapped.trace.json"
          },
          {
            "path": "tests/baselines/reference/useSharedArrayBuffer1.types"
          },
          {
            "path": "tests/baselines/reference/useSharedArrayBuffer4.types"
          },
          {
            "path": "tests/cases/conformance/es2022/es2024SharedMemory.ts"
          },
          {
            "path": "tests/cases/conformance/es2024/resizableArrayBuffer.ts"
          },
          {
            "path": "tests/cases/conformance/es2024/sharedMemory.ts"
          },
          {
            "path": "tests/cases/conformance/es2024/transferableArrayBuffer.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc55f-Ot",
      "title": "Rewrite relative import extensions with flag",
      "url": "https://github.com/microsoft/TypeScript/pull/59767",
      "mergedAt": "2024-09-27T19:27:16Z",
      "updatedAt": "2025-03-23T12:47:52Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "bd3d70058c30253209199cc9dfeb85e72330d79b"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/factory/emitHelpers.ts"
          },
          {
            "path": "src/compiler/moduleNameResolver.ts"
          },
          {
            "path": "src/compiler/program.ts"
          },
          {
            "path": "src/compiler/transformers/module/esnextAnd2015.ts"
          },
          {
            "path": "src/compiler/transformers/module/module.ts"
          },
          {
            "path": "src/compiler/transformers/ts.ts"
          },
          {
            "path": "src/compiler/transformers/utilities.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/compiler/utilitiesPublic.ts"
          },
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/cjsErrors.errors.txt"
          },
          {
            "path": "tests/baselines/reference/cjsErrors.js"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Default initialized TSConfig/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with --help/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with --watch/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with advanced options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with boolean value compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with enum value compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with files options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with incorrect compiler option value/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with incorrect compiler option/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with list compiler options with enum value/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with list compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/showConfig/Shows tsconfig for single option/rewriteRelativeImportExtensions/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/emit(jsx=preserve).errors.txt"
          },
          {
            "path": "tests/baselines/reference/emit(jsx=preserve).js"
          },
          {
            "path": "tests/baselines/reference/emit(jsx=react).errors.txt"
          },
          {
            "path": "tests/baselines/reference/emit(jsx=react).js"
          },
          {
            "path": "tests/baselines/reference/emitModuleCommonJS(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/emitModuleCommonJS(module=commonjs).js"
          },
          {
            "path": "tests/baselines/reference/emitModuleCommonJS(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/emitModuleCommonJS(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/packageJsonImportsErrors.errors.txt"
          },
          {
            "path": "tests/baselines/reference/packageJsonImportsErrors.js"
          },
          {
            "path": "tests/baselines/reference/rewriteRelativeImportExtensionsProjectReferences1.baseline"
          },
          {
            "path": "tests/baselines/reference/rewriteRelativeImportExtensionsProjectReferences2.baseline"
          },
          {
            "path": "tests/baselines/reference/rewriteRelativeImportExtensionsProjectReferences3.baseline"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/rewriteRelativeImportExtensionsProjectReferences1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/rewriteRelativeImportExtensionsProjectReferences2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/rewriteRelativeImportExtensionsProjectReferences3.js"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/cjsErrors.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/emit.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/emitModuleCommonJS.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/nodeModulesTsFiles.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/packageJsonImportsErrors.ts"
          },
          {
            "path": "tests/cases/fourslash/server/rewriteRelativeImportExtensionsProjectReferences1.ts"
          },
          {
            "path": "tests/cases/fourslash/server/rewriteRelativeImportExtensionsProjectReferences2.ts"
          },
          {
            "path": "tests/cases/fourslash/server/rewriteRelativeImportExtensionsProjectReferences3.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc57Clvp",
      "title": "add jsx fragments to callLikeExpression",
      "url": "https://github.com/microsoft/TypeScript/pull/59933",
      "mergedAt": "2024-09-27T22:16:29Z",
      "updatedAt": "2024-09-27T22:52:25Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "f6d2e73c5afbe5f760574292402fcefc3defdf8c"
      },
      "author": {
        "login": "iisaduan"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/compiler/utilitiesPublic.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/inlineJsxAndJsxFragPragma.errors.txt"
          },
          {
            "path": "tests/baselines/reference/inlineJsxAndJsxFragPragmaOverridesCompilerOptions.errors.txt"
          },
          {
            "path": "tests/baselines/reference/inlineJsxAndJsxFragPragmaOverridesCompilerOptions.types"
          },
          {
            "path": "tests/baselines/reference/inlineJsxFactoryWithFragmentIsError.errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryAndJsxFragmentFactoryNull.errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryAndJsxFragmentFactoryNull.types"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentWrongType.errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentWrongType.js"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentWrongType.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentWrongType.types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImport(jsx=react-jsx).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImport(jsx=react-jsxdev).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImportPragma(jsx=react-jsx).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImportPragma(jsx=react-jsxdev).errors.txt"
          },
          {
            "path": "tests/baselines/reference/parseUnaryExpressionNoTypeAssertionInJsx2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parseUnaryExpressionNoTypeAssertionInJsx4.errors.txt"
          },
          {
            "path": "tests/cases/compiler/jsxFragmentWrongType.tsx"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc58sF3Q",
      "title": "DOM update 2024-09-25",
      "url": "https://github.com/microsoft/TypeScript/pull/60061",
      "mergedAt": "2024-09-27T22:32:19Z",
      "updatedAt": "2024-09-27T22:32:20Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2c23beae0297fe3e57868d02af8c9084b136f78c"
      },
      "author": {
        "login": "sandersn"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/dom.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.generated.d.ts"
          },
          {
            "path": "tests/baselines/reference/globalThisBlockscopedProperties.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.errors.txt"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.types"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc51adG6",
      "title": "Extract node type printer",
      "url": "https://github.com/microsoft/TypeScript/pull/59282",
      "mergedAt": "2024-09-30T16:19:42Z",
      "updatedAt": "2024-09-30T17:48:27Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "476e9ee201bd19afbc359ffe93b32a0ccd97152a"
      },
      "author": {
        "login": "dragomirtitian"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/expressionToTypeNode.ts"
          },
          {
            "path": "src/compiler/factory/utilities.ts"
          },
          {
            "path": "src/compiler/transformers/declarations.ts"
          },
          {
            "path": "src/compiler/transformers/declarations/diagnostics.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/services/codefixes/fixMissingTypeAnnotationOnExports.ts"
          },
          {
            "path": "tests/baselines/reference/arrowFunctionWithObjectLiteralBody5.types"
          },
          {
            "path": "tests/baselines/reference/arrowFunctionWithObjectLiteralBody6.types"
          },
          {
            "path": "tests/baselines/reference/circularAccessorAnnotations.types"
          },
          {
            "path": "tests/baselines/reference/circularObjectLiteralAccessors.types"
          },
          {
            "path": "tests/baselines/reference/collisionArgumentsArrowFunctions.types"
          },
          {
            "path": "tests/baselines/reference/collisionArgumentsClassMethod.types"
          },
          {
            "path": "tests/baselines/reference/collisionArgumentsFunction.types"
          },
          {
            "path": "tests/baselines/reference/collisionArgumentsFunctionExpressions.types"
          },
          {
            "path": "tests/baselines/reference/commentsOnObjectLiteral4.types"
          },
          {
            "path": "tests/baselines/reference/completionsCommitCharactersGlobal.baseline"
          },
          {
            "path": "tests/baselines/reference/controlFlowParameter.types"
          },
          {
            "path": "tests/baselines/reference/declFileObjectLiteralWithAccessors.types"
          },
          {
            "path": "tests/baselines/reference/declFileObjectLiteralWithOnlySetter.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitClassAccessorsJs1.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoNonRequiredParens.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoNonRequiredParens.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoNonRequiredParens.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitObjectLiteralAccessors1.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitObjectLiteralAccessorsJs1.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitUsingAlternativeContainingModules1.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitUsingAlternativeContainingModules2.types"
          },
          {
            "path": "tests/baselines/reference/declarationsWithRecursiveInternalTypesProduceUniqueTypeParams.types"
          },
          {
            "path": "tests/baselines/reference/divergentAccessorsTypes6.types"
          },
          {
            "path": "tests/baselines/reference/dynamicNamesErrors.types"
          },
          {
            "path": "tests/baselines/reference/emitCompoundExponentiationAssignmentWithIndexingOnLHS3.types"
          },
          {
            "path": "tests/baselines/reference/es5SetterparameterDestructuringNotElided.types"
          },
          {
            "path": "tests/baselines/reference/exportsAndImportsWithContextualKeywordNames01.types"
          },
          {
            "path": "tests/baselines/reference/generatedContextualTyping.types"
          },
          {
            "path": "tests/baselines/reference/getSetEnumerable.types"
          },
          {
            "path": "tests/baselines/reference/gettersAndSetters.types"
          },
          {
            "path": "tests/baselines/reference/gettersAndSettersTypesAgree.types"
          },
          {
            "path": "tests/baselines/reference/identityRelationNeverTypes.types"
          },
          {
            "path": "tests/baselines/reference/illegalSuperCallsInConstructor.types"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrors.errors.txt"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorsClasses.errors.txt"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorsObjects.errors.txt"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorsObjects.types"
          },
          {
            "path": "tests/baselines/reference/jsDeclarationsFunctionLikeClasses2.types"
          },
          {
            "path": "tests/baselines/reference/jsDeclarationsReusesExistingNodesMappingJSDocTypes.types"
          },
          {
            "path": "tests/baselines/reference/jsdocDisallowedInTypescript.types"
          },
          {
            "path": "tests/baselines/reference/jsdocFunctionType.types"
          },
          {
            "path": "tests/baselines/reference/jsdocFunctionTypeFalsePositive.types"
          },
          {
            "path": "tests/baselines/reference/jsdocImportTypeReferenceToCommonjsModule.types"
          },
          {
            "path": "tests/baselines/reference/jsdocImportTypeReferenceToESModule.types"
          },
          {
            "path": "tests/baselines/reference/jsdocIndexSignature.types"
          },
          {
            "path": "tests/baselines/reference/jsdocParameterParsingInfiniteLoop.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeWithAsClauseAndLateBoundProperty.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeWithAsClauseAndLateBoundProperty2.js"
          },
          {
            "path": "tests/baselines/reference/mappedTypeWithAsClauseAndLateBoundProperty2.symbols"
          },
          {
            "path": "tests/baselines/reference/mappedTypeWithAsClauseAndLateBoundProperty2.types"
          },
          {
            "path": "tests/baselines/reference/moduleExportAssignment7.types"
          },
          {
            "path": "tests/baselines/reference/noImplicitReturnsExclusions.types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitDynamicImportWithPackageExports.types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmit(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmit(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmitErrors(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmitErrors(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmitErrors1(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmitErrors1(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit6(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit6(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/objectLiteralErrors.types"
          },
          {
            "path": "tests/baselines/reference/objectLiteralGettersAndSetters.types"
          },
          {
            "path": "tests/baselines/reference/objectLiteralShorthandPropertiesErrorFromNotUsingIdentifier.types"
          },
          {
            "path": "tests/baselines/reference/objectSpreadNegative.types"
          },
          {
            "path": "tests/baselines/reference/objectSpreadSetonlyAccessor.types"
          },
          {
            "path": "tests/baselines/reference/parenthesizedArrowExpressionASI.types"
          },
          {
            "path": "tests/baselines/reference/parseImportAttributesError.js"
          },
          {
            "path": "tests/baselines/reference/promisePermutations.types"
          },
          {
            "path": "tests/baselines/reference/promisePermutations2.types"
          },
          {
            "path": "tests/baselines/reference/promisePermutations3.types"
          },
          {
            "path": "tests/baselines/reference/promiseType.types"
          },
          {
            "path": "tests/baselines/reference/promiseTypeStrictNull.types"
          },
          {
            "path": "tests/baselines/reference/super_inside-object-literal-getters-and-setters.types"
          },
          {
            "path": "tests/baselines/reference/symbolProperty18.types"
          },
          {
            "path": "tests/baselines/reference/thisTypeInAccessors.types"
          },
          {
            "path": "tests/baselines/reference/this_inside-object-literal-getters-and-setters.types"
          },
          {
            "path": "tests/baselines/reference/transpile/declarationFunctionDeclarations.d.ts"
          },
          {
            "path": "tests/baselines/reference/transpile/declarationRestParameters.d.ts"
          },
          {
            "path": "tests/baselines/reference/typeGuardsObjectMethods.types"
          },
          {
            "path": "tests/baselines/reference/typeOfThisGeneral.types"
          },
          {
            "path": "tests/baselines/reference/unusedLocalsAndParameters.types"
          },
          {
            "path": "tests/baselines/reference/unusedLocalsAndParametersDeferred.types"
          },
          {
            "path": "tests/baselines/reference/witness.types"
          },
          {
            "path": "tests/cases/compiler/declarationEmitNoNonRequiredParens.ts"
          },
          {
            "path": "tests/cases/compiler/mappedTypeWithAsClauseAndLateBoundProperty2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59C3r_",
      "title": "Bump the github-actions group across 1 directory with 4 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/60101",
      "mergedAt": "2024-09-30T16:52:36Z",
      "updatedAt": "2024-09-30T16:52:38Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "18d20f12ba04159eb5818e0e645dbbaf5fd1737b"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/accept-baselines-fix-lints.yaml"
          },
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/create-cherry-pick-pr.yml"
          },
          {
            "path": ".github/workflows/insiders.yaml"
          },
          {
            "path": ".github/workflows/lkg.yml"
          },
          {
            "path": ".github/workflows/new-release-branch.yaml"
          },
          {
            "path": ".github/workflows/nightly.yaml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          },
          {
            "path": ".github/workflows/set-version.yaml"
          },
          {
            "path": ".github/workflows/sync-branch.yaml"
          },
          {
            "path": ".github/workflows/sync-wiki.yml"
          },
          {
            "path": ".github/workflows/twoslash-repros.yaml"
          },
          {
            "path": ".github/workflows/update-package-lock.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc589Fdo",
      "title": "Update deps",
      "url": "https://github.com/microsoft/TypeScript/pull/60085",
      "mergedAt": "2024-09-30T20:31:14Z",
      "updatedAt": "2024-09-30T20:31:16Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3386e943215613c40f68ba0b108cda1ddb7faee1"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "sheetalkamat"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".dprint.jsonc"
          },
          {
            "path": "package-lock.json"
          },
          {
            "path": "package.json"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59LonM",
      "title": "Remove references to tsserverlibrary.d.ts baseline from workflows",
      "url": "https://github.com/microsoft/TypeScript/pull/60109",
      "mergedAt": "2024-10-01T00:34:08Z",
      "updatedAt": "2024-10-01T16:19:15Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "35902c2e77c1a8b2c07b769a8825e322bf85648e"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/new-release-branch.yaml"
          },
          {
            "path": ".github/workflows/pr-modified-files.yml"
          },
          {
            "path": ".github/workflows/set-version.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc587Xqs",
      "title": "Don't issue implicit any when obtaining the implied type for a binding pattern",
      "url": "https://github.com/microsoft/TypeScript/pull/60083",
      "mergedAt": "2024-10-01T04:38:53Z",
      "updatedAt": "2024-10-01T04:38:55Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ca18009b8bd5cea6a7fbcba3d7e4dd3c4633bc92"
      },
      "author": {
        "login": "ahejlsberg"
      },
      "assignees": {
        "nodes": [
          {
            "login": "ahejlsberg"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration10(strict=false).symbols"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration10(strict=false).types"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration10(strict=true).symbols"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration10(strict=true).types"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration9(strict=false).symbols"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration9(strict=false).types"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration9(strict=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration9(strict=true).symbols"
          },
          {
            "path": "tests/baselines/reference/destructuringParameterDeclaration9(strict=true).types"
          },
          {
            "path": "tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration10.ts"
          },
          {
            "path": "tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration9.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59bWLi",
      "title": "fix fragment resolving behavior with `jsx: preserve` and `jsxFragmentFactory: null`",
      "url": "https://github.com/microsoft/TypeScript/pull/60122",
      "mergedAt": "2024-10-04T18:47:59Z",
      "updatedAt": "2024-10-04T18:48:44Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b845fd2434f255ba35b0bb143a65172c8985e467"
      },
      "author": {
        "login": "iisaduan"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/inlineJsxAndJsxFragPragma.errors.txt"
          },
          {
            "path": "tests/baselines/reference/inlineJsxAndJsxFragPragmaOverridesCompilerOptions.errors.txt"
          },
          {
            "path": "tests/baselines/reference/inlineJsxAndJsxFragPragmaOverridesCompilerOptions.types"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryAndJsxFragmentFactory.types"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryAndJsxFragmentFactoryNull.errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxFactoryAndJsxFragmentFactoryNull.types"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59jN_k",
      "title": "Fix grammar issue in TS9025 diagnostic message",
      "url": "https://github.com/microsoft/TypeScript/pull/60136",
      "mergedAt": "2024-10-07T18:12:48Z",
      "updatedAt": "2024-10-07T18:12:48Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "44331b9fa32999d4aade7433c10cd3ec8596957e"
      },
      "author": {
        "login": "JoostK"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/transformers/declarations/diagnostics.ts"
          },
          {
            "path": "src/services/codefixes/fixMissingTypeAnnotationOnExports.ts"
          },
          {
            "path": "tests/baselines/reference/transpile/declarationFunctionDeclarations.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59rWQH",
      "title": "add filenames to error messages in verify file content functions in fourslash",
      "url": "https://github.com/microsoft/TypeScript/pull/60143",
      "mergedAt": "2024-10-07T19:25:32Z",
      "updatedAt": "2024-10-07T19:25:34Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "a719df49d448f1929c44ca6e3506b9149f3afbb8"
      },
      "author": {
        "login": "iisaduan"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "navya9singh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/harness/fourslashImpl.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59vTo9",
      "title": "fix automatic type acquisition",
      "url": "https://github.com/microsoft/TypeScript/pull/60157",
      "mergedAt": "2024-10-07T19:55:38Z",
      "updatedAt": "2024-10-08T17:30:11Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "20f67d791cc2101f8bfe3ddcb8c1705b090281cf"
      },
      "author": {
        "login": "epistemancering"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/typingsInstaller/nodeTypingsInstaller.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59u6up",
      "title": "fix(59825): getNavigationTree crash on invalid class merge and function merge with expando members",
      "url": "https://github.com/microsoft/TypeScript/pull/60152",
      "mergedAt": "2024-10-07T19:58:15Z",
      "updatedAt": "2024-10-07T19:58:15Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "009b3ffdda1ec62cf06b9670b2292f04cec0a146"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "iisaduan"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/navigationBar.ts"
          },
          {
            "path": "tests/cases/fourslash/navigationBarItemsClass6.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc593Rpu",
      "title": "Fix the type of `growable` on `SharedArrayBuffer`.",
      "url": "https://github.com/microsoft/TypeScript/pull/60163",
      "mergedAt": "2024-10-07T20:41:43Z",
      "updatedAt": "2024-10-07T20:41:45Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "cd6c0a0b6b8659f49344951219c74a516fdec9a2"
      },
      "author": {
        "login": "DanielRosenwasser"
      },
      "assignees": {
        "nodes": [
          {
            "login": "DanielRosenwasser"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/es2024.sharedmemory.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59vx_g",
      "title": "Bump the github-actions group with 3 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/60160",
      "mergedAt": "2024-10-08T17:46:19Z",
      "updatedAt": "2024-10-08T17:46:20Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2f436cd0338b52cd3dd127cb426bf3a2e99a869d"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59sJjW",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20241005101925367 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/60147",
      "mergedAt": "2024-10-08T17:50:08Z",
      "updatedAt": "2024-10-08T17:50:10Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2149a0f31a5bf1b1b9e9c2745efeaa74e95170b9"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-ASs-",
      "title": "Fix codecov on PRs",
      "url": "https://github.com/microsoft/TypeScript/pull/60174",
      "mergedAt": "2024-10-08T23:20:33Z",
      "updatedAt": "2024-10-08T23:20:34Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "a53c37d59aa0c20f566dec7e5498f05afe45dc6b"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "iisaduan"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59fxUO",
      "title": "Avoid confusing TS9025 error in `isolatedDeclarations`",
      "url": "https://github.com/microsoft/TypeScript/pull/60129",
      "mergedAt": "2024-10-11T22:42:29Z",
      "updatedAt": "2024-10-11T22:42:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "f53d6dda5df8c898f31ef11283e7132fa2953764"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationsAddUndefined2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationsAddUndefined2.js"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationsAddUndefined2.symbols"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationsAddUndefined2.types"
          },
          {
            "path": "tests/cases/compiler/isolatedDeclarationsAddUndefined2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-Rt5b",
      "title": "Assume that type node annotations resolving to error types can be reused",
      "url": "https://github.com/microsoft/TypeScript/pull/60195",
      "mergedAt": "2024-10-11T23:13:39Z",
      "updatedAt": "2024-10-11T23:13:39Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c003609d59db75974796cec737c98f6c8e603bd6"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/circularTypeofWithVarOrFunc.types"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorTypes1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorTypes1.js"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorTypes1.symbols"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorTypes1.types"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationsAddUndefined2.types"
          },
          {
            "path": "tests/cases/compiler/isolatedDeclarationErrorTypes1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-Zghw",
      "title": "moveToNewFile: fix quotes for module specifiers ",
      "url": "https://github.com/microsoft/TypeScript/pull/60203",
      "mergedAt": "2024-10-14T17:24:49Z",
      "updatedAt": "2024-10-14T17:24:54Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "aeb74cc721d2d38b57f9c5d49730c46aacb81224"
      },
      "author": {
        "login": "iisaduan"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/importFixes.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_inferQuoteStyle1.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_inferQuoteStyle2.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_moveNamedImport1.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_moveNamedImport2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-dx_V",
      "title": "Bump the github-actions group with 4 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/60218",
      "mergedAt": "2024-10-14T18:13:11Z",
      "updatedAt": "2024-10-14T18:13:12Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "460be92510abf07b7fb87e1d2a6649823805e195"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/accept-baselines-fix-lints.yaml"
          },
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/create-cherry-pick-pr.yml"
          },
          {
            "path": ".github/workflows/insiders.yaml"
          },
          {
            "path": ".github/workflows/lkg.yml"
          },
          {
            "path": ".github/workflows/new-release-branch.yaml"
          },
          {
            "path": ".github/workflows/nightly.yaml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          },
          {
            "path": ".github/workflows/set-version.yaml"
          },
          {
            "path": ".github/workflows/sync-branch.yaml"
          },
          {
            "path": ".github/workflows/sync-wiki.yml"
          },
          {
            "path": ".github/workflows/twoslash-repros.yaml"
          },
          {
            "path": ".github/workflows/update-package-lock.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-P-AO",
      "title": "fix(60186): Quick fix \"add missing properties\" fails with enums from other module",
      "url": "https://github.com/microsoft/TypeScript/pull/60191",
      "mergedAt": "2024-10-14T18:30:34Z",
      "updatedAt": "2024-10-14T18:30:35Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e99e6e2e87a6d7f152eb7cc491ce11da1926662b"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/fixAddMissingMember.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties32.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-lxd_",
      "title": "Fix decorator emit crash",
      "url": "https://github.com/microsoft/TypeScript/pull/60224",
      "mergedAt": "2024-10-14T21:45:23Z",
      "updatedAt": "2024-10-14T21:45:25Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "40caf3431986884b3da7a607de22ced5d364d9fc"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/transformers/esDecorators.ts"
          },
          {
            "path": "src/compiler/transformers/legacyDecorators.ts"
          },
          {
            "path": "src/compiler/transformers/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/parameterDecoratorsEmitCrash.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parameterDecoratorsEmitCrash.js"
          },
          {
            "path": "tests/cases/compiler/parameterDecoratorsEmitCrash.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc58a1Xd",
      "title": "Fixed default-like export info lookup with `export=` that have `default` export",
      "url": "https://github.com/microsoft/TypeScript/pull/60035",
      "mergedAt": "2024-10-15T16:00:55Z",
      "updatedAt": "2024-10-15T16:39:06Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d61938d8a326563ce8a2b19728ea9ff3edd7a76e"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/exportInfoMap.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportCompletionExportEqualsWithDefault1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-mt0h",
      "title": "Do not mark #imports and self-name imports as external library imports in module resolution",
      "url": "https://github.com/microsoft/TypeScript/pull/60228",
      "mergedAt": "2024-10-15T17:53:32Z",
      "updatedAt": "2024-10-15T17:53:48Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "31de163db78edc3224d28be88aed45c8bf709ca0"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/moduleNameResolver.ts"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node16).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/selfNameAndImportsEmitInclusion.js"
          },
          {
            "path": "tests/baselines/reference/selfNameModuleAugmentation.trace.json"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleResolution/shared-resolution-should-not-report-error.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/moduleResolution/when-resolution-is-not-shared.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/package-json-is-looked-up-for-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/forceConsistentCasingInFileNames/self-name-package-reference.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/moduleResolution/diagnostics-from-cache.js"
          },
          {
            "path": "tests/cases/compiler/selfNameAndImportsEmitInclusion.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-uBDv",
      "title": "Handle auto-import when `paths` pattern is absolute",
      "url": "https://github.com/microsoft/TypeScript/pull/60236",
      "mergedAt": "2024-10-15T21:01:13Z",
      "updatedAt": "2024-10-15T21:01:19Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3b0dfaa73cddccc868ffc3671bffd6d1660b39ae"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "iisaduan"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/moduleSpecifiers.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPathsConfigDir.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc55Rw1M",
      "title": "Allow auto accessor types to be inferred from their flow types in constructors and static blocks",
      "url": "https://github.com/microsoft/TypeScript/pull/59732",
      "mergedAt": "2024-10-16T00:52:12Z",
      "updatedAt": "2024-10-16T00:52:12Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "03c5a37cfb63cd931b3b4a719428859d3ff5e3ed"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/classAccessorInitializationInferenceWithElementAccess1.js"
          },
          {
            "path": "tests/baselines/reference/classAccessorInitializationInferenceWithElementAccess1.symbols"
          },
          {
            "path": "tests/baselines/reference/classAccessorInitializationInferenceWithElementAccess1.types"
          },
          {
            "path": "tests/baselines/reference/classAttributeInferenceTemplate.js"
          },
          {
            "path": "tests/baselines/reference/classAttributeInferenceTemplate.symbols"
          },
          {
            "path": "tests/baselines/reference/classAttributeInferenceTemplate.types"
          },
          {
            "path": "tests/baselines/reference/classAttributeInferenceTemplateJS.symbols"
          },
          {
            "path": "tests/baselines/reference/classAttributeInferenceTemplateJS.types"
          },
          {
            "path": "tests/baselines/reference/classStaticBlockUseBeforeDef4.js"
          },
          {
            "path": "tests/baselines/reference/classStaticBlockUseBeforeDef4.symbols"
          },
          {
            "path": "tests/baselines/reference/classStaticBlockUseBeforeDef4.types"
          },
          {
            "path": "tests/baselines/reference/classStaticBlockUseBeforeDef5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classStaticBlockUseBeforeDef5.js"
          },
          {
            "path": "tests/baselines/reference/classStaticBlockUseBeforeDef5.symbols"
          },
          {
            "path": "tests/baselines/reference/classStaticBlockUseBeforeDef5.types"
          },
          {
            "path": "tests/baselines/reference/controlFlowAutoAccessor1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/controlFlowAutoAccessor1.js"
          },
          {
            "path": "tests/baselines/reference/controlFlowAutoAccessor1.symbols"
          },
          {
            "path": "tests/baselines/reference/controlFlowAutoAccessor1.types"
          },
          {
            "path": "tests/baselines/reference/inlayHintsPropertyDeclarations2.baseline"
          },
          {
            "path": "tests/cases/compiler/classAccessorInitializationInferenceWithElementAccess1.ts"
          },
          {
            "path": "tests/cases/compiler/classAttributeInferenceTemplate.ts"
          },
          {
            "path": "tests/cases/compiler/classAttributeInferenceTemplateJS.ts"
          },
          {
            "path": "tests/cases/compiler/controlFlowAutoAccessor1.ts"
          },
          {
            "path": "tests/cases/conformance/classes/classStaticBlock/classStaticBlockUseBeforeDef4.ts"
          },
          {
            "path": "tests/cases/conformance/classes/classStaticBlock/classStaticBlockUseBeforeDef5.ts"
          },
          {
            "path": "tests/cases/fourslash/inlayHintsPropertyDeclarations2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-mA96",
      "title": "Fix ASI after get/set keyword",
      "url": "https://github.com/microsoft/TypeScript/pull/60225",
      "mergedAt": "2024-10-16T00:53:36Z",
      "updatedAt": "2024-10-16T00:53:37Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "bd1641f7691909450147cc38cc6f5e55b79e0545"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/parser.ts"
          },
          {
            "path": "tests/baselines/reference/canFollowGetSetKeyword.errors.txt"
          },
          {
            "path": "tests/baselines/reference/canFollowGetSetKeyword.js"
          },
          {
            "path": "tests/cases/conformance/classes/propertyMemberDeclarations/canFollowGetSetKeyword.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-vvvM",
      "title": "Fix `--showConfig` to show transitively implied options that vary from the default config",
      "url": "https://github.com/microsoft/TypeScript/pull/60240",
      "mergedAt": "2024-10-16T18:14:44Z",
      "updatedAt": "2024-10-16T18:18:16Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b8e4ed8aeb0b228f544c5736908c31f136a9f7e3"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/server/editorServices.ts"
          },
          {
            "path": "src/services/codefixes/convertConstToLet.ts"
          },
          {
            "path": "src/services/codefixes/convertToTypeOnlyExport.ts"
          },
          {
            "path": "src/services/codefixes/fixAddMissingConstraint.ts"
          },
          {
            "path": "src/services/codefixes/fixAddMissingMember.ts"
          },
          {
            "path": "src/services/codefixes/fixAwaitInSyncFunction.ts"
          },
          {
            "path": "src/services/codefixes/fixClassDoesntImplementInheritedAbstractMember.ts"
          },
          {
            "path": "src/services/codefixes/fixClassIncorrectlyImplementsInterface.ts"
          },
          {
            "path": "src/services/codefixes/fixClassSuperMustPrecedeThisAccess.ts"
          },
          {
            "path": "src/services/completions.ts"
          },
          {
            "path": "src/services/exportInfoMap.ts"
          },
          {
            "path": "src/services/findAllReferences.ts"
          },
          {
            "path": "src/services/refactors/extractType.ts"
          },
          {
            "path": "src/services/stringCompletions.ts"
          },
          {
            "path": "src/services/textChanges.ts"
          },
          {
            "path": "src/testRunner/unittests/config/showConfig.ts"
          },
          {
            "path": "tests/baselines/reference/config/showConfig/Show TSConfig with transitively implied options/tsconfig.json"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-_4oo",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20241017172255112 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/60257",
      "mergedAt": "2024-10-17T18:13:17Z",
      "updatedAt": "2024-10-17T18:13:19Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "54732f6e5895aa692309e70a18027ddc316c20df"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_A576",
      "title": "Include non-enumerable keys in __importStar helper",
      "url": "https://github.com/microsoft/TypeScript/pull/60262",
      "mergedAt": "2024-10-18T14:26:00Z",
      "updatedAt": "2024-10-18T15:16:36Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2e4f2c72db36c7473d8c1fec0911a1ad6c45dedc"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/factory/emitHelpers.ts"
          },
          {
            "path": "tests/baselines/reference/arbitraryModuleNamespaceIdentifiers_module(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/arbitraryModuleNamespaceIdentifiers_module(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/elidedJSImport2(module=commonjs).js"
          },
          {
            "path": "tests/baselines/reference/esModuleInterop.js"
          },
          {
            "path": "tests/baselines/reference/esModuleInteropDefaultImports.js"
          },
          {
            "path": "tests/baselines/reference/esModuleInteropImportCall.js"
          },
          {
            "path": "tests/baselines/reference/esModuleInteropImportNamespace.js"
          },
          {
            "path": "tests/baselines/reference/esModuleInteropNamedDefaultImports.js"
          },
          {
            "path": "tests/baselines/reference/esModuleInteropPrettyErrorRelatedInformation.js"
          },
          {
            "path": "tests/baselines/reference/esModuleInteropUsesExportStarWhenDefaultPlusNames.js"
          },
          {
            "path": "tests/baselines/reference/esModuleInteropWithExportStar.js"
          },
          {
            "path": "tests/baselines/reference/esModuleIntersectionCrash.js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace2(module=amd).js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace2(module=commonjs).js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace2(module=umd).js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace3(module=amd).js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace3(module=commonjs).js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace3(module=umd).js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace4(module=amd).js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace4(module=commonjs).js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace4(module=umd).js"
          },
          {
            "path": "tests/baselines/reference/exportAsNamespace_exportAssignment.js"
          },
          {
            "path": "tests/baselines/reference/exportDefault.js"
          },
          {
            "path": "tests/baselines/reference/importEquals1.js"
          },
          {
            "path": "tests/baselines/reference/importEquals2.js"
          },
          {
            "path": "tests/baselines/reference/intersectionsAndEmptyObjects.js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node16,moduleresolution=node16).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node16,moduleresolution=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=nodenext,moduleresolution=node16).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=nodenext,moduleresolution=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeAllowJsPackageSelfName(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeAllowJsPackageSelfName(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModules1(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModules1(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJs1(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJs1(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsExclude(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsExclude(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitWithPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitWithPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionIntoExport(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionIntoExport(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionNoCycle(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionNoCycle(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsExclude(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsExclude(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesResolveJsonModule(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesResolveJsonModule(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTypesVersionPackageExports(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTypesVersionPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfName(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfName(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfNameScoped(module=node16).js"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfNameScoped(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/symlinkedWorkspaceDependenciesNoDirectLinkGeneratesDeepNonrelativeName.js"
          },
          {
            "path": "tests/baselines/reference/tsbuild/sample1/when-esModuleInterop-option-changes.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/projectsWithReferences/on-sample-project-with-nodenext.js"
          },
          {
            "path": "tests/baselines/reference/verbatimModuleSyntaxRestrictionsCJS.js"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-MsQx",
      "title": "Disallow type and interface declarations in statements with blockless bodies",
      "url": "https://github.com/microsoft/TypeScript/pull/60183",
      "mergedAt": "2024-10-18T16:24:34Z",
      "updatedAt": "2024-10-18T16:24:34Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c07da583afbfbb68930448b781832c74b3f713e6"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/typeAliasDeclarationEmit3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/typeInterfaceDeclarationsInBlockStatements1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/typeInterfaceDeclarationsInBlockStatements1.js"
          },
          {
            "path": "tests/baselines/reference/typeInterfaceDeclarationsInBlockStatements1.symbols"
          },
          {
            "path": "tests/baselines/reference/typeInterfaceDeclarationsInBlockStatements1.types"
          },
          {
            "path": "tests/cases/compiler/typeInterfaceDeclarationsInBlockStatements1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc53KFgG",
      "title": "fix(59463): Feature that displays method argument names inline does not correctly handle method overloading",
      "url": "https://github.com/microsoft/TypeScript/pull/59504",
      "mergedAt": "2024-10-18T21:44:43Z",
      "updatedAt": "2024-10-18T21:44:43Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "df9d16503f6755dd071e4c591b9d21c39d03d95e"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "MariaSolOs"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Sandra-Amina-Boss"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Sandra-Amina-Boss"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/inlayHints.ts"
          },
          {
            "path": "tests/baselines/reference/inlayHintsOverloadCall1.baseline"
          },
          {
            "path": "tests/baselines/reference/inlayHintsOverloadCall2.baseline"
          },
          {
            "path": "tests/cases/fourslash/inlayHintsOverloadCall1.ts"
          },
          {
            "path": "tests/cases/fourslash/inlayHintsOverloadCall2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_W_vF",
      "title": "Fix template string escaping",
      "url": "https://github.com/microsoft/TypeScript/pull/60303",
      "mergedAt": "2024-10-21T20:18:54Z",
      "updatedAt": "2024-10-21T20:18:55Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e6ef279403d86440600c866d53839a3e695220d3"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/testRunner/unittests/printer.ts"
          },
          {
            "path": "tests/baselines/reference/printerApi/printsNodeCorrectly.template string.js"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_Pm7J",
      "title": "Bump github/codeql-action from 3.26.12 to 3.26.13 in the github-actions group",
      "url": "https://github.com/microsoft/TypeScript/pull/60295",
      "mergedAt": "2024-10-21T20:57:54Z",
      "updatedAt": "2024-10-21T20:57:55Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d9eeeaecbb31d02ea38bdf1d29d6741d09ff8b7a"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc55eB18",
      "title": "Add a test for constraint of an infer type parameter not being fully instantiated previously",
      "url": "https://github.com/microsoft/TypeScript/pull/59760",
      "mergedAt": "2024-10-21T22:29:05Z",
      "updatedAt": "2024-10-21T22:38:16Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "aa411acab7ea3bfe40647218c2762290d4647fb3"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "tests/baselines/reference/inferTypesWithExtendsDependingOnTypeVariables.symbols"
          },
          {
            "path": "tests/baselines/reference/inferTypesWithExtendsDependingOnTypeVariables.types"
          },
          {
            "path": "tests/cases/conformance/types/conditional/inferTypesWithExtendsDependingOnTypeVariables.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_fWYm",
      "title": "Error on too many parameters for iterator method",
      "url": "https://github.com/microsoft/TypeScript/pull/60321",
      "mergedAt": "2024-10-22T20:00:58Z",
      "updatedAt": "2024-10-22T20:01:01Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e25abe34aedba53eefd379cfeb67568ca95d90c1"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/asyncIteratorExtraParameters.errors.txt"
          },
          {
            "path": "tests/baselines/reference/iteratorExtraParameters.errors.txt"
          },
          {
            "path": "tests/cases/compiler/asyncIteratorExtraParameters.ts"
          },
          {
            "path": "tests/cases/compiler/iteratorExtraParameters.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5Wlriv",
      "title": "fix(55168): Computed properties do not respect setter signatures",
      "url": "https://github.com/microsoft/TypeScript/pull/55178",
      "mergedAt": "2024-10-22T20:10:55Z",
      "updatedAt": "2024-10-22T20:10:55Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "241a6c95896924720cdf6bb75579e520fa663987"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": [
          {
            "login": "navya9singh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "tests/baselines/reference/computedPropertiesWithSetterAssignment.js"
          },
          {
            "path": "tests/baselines/reference/computedPropertiesWithSetterAssignment.symbols"
          },
          {
            "path": "tests/baselines/reference/computedPropertiesWithSetterAssignment.types"
          },
          {
            "path": "tests/cases/compiler/computedPropertiesWithSetterAssignment.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc554pZV",
      "title": "fix(59779): The semicolons: \"remove\" formatting option doesn't remove extraneous semicolons",
      "url": "https://github.com/microsoft/TypeScript/pull/59797",
      "mergedAt": "2024-10-22T22:42:28Z",
      "updatedAt": "2024-10-23T03:42:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "a62ac67b5011bd9eeb8d4b9add0de7e3bd487e9a"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/formatting/rules.ts"
          },
          {
            "path": "tests/cases/fourslash/formatRemoveSemicolons1.ts"
          },
          {
            "path": "tests/cases/fourslash/formatRemoveSemicolons4.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_XSj7",
      "title": "More rigorous ASI prevention when emitting `return`/`yield`",
      "url": "https://github.com/microsoft/TypeScript/pull/60304",
      "mergedAt": "2024-10-22T23:20:51Z",
      "updatedAt": "2024-10-22T23:20:53Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "1679f4481deb02e7858dc8824c79deda76d48fc3"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/emitter.ts"
          },
          {
            "path": "tests/baselines/reference/returnStatementNoAsiAfterTransform(target=es5).js"
          },
          {
            "path": "tests/baselines/reference/returnStatementNoAsiAfterTransform(target=esnext).js"
          },
          {
            "path": "tests/baselines/reference/yieldStatementNoAsiAfterTransform(target=es5).js"
          },
          {
            "path": "tests/baselines/reference/yieldStatementNoAsiAfterTransform(target=esnext).js"
          },
          {
            "path": "tests/cases/conformance/generators/yieldStatementNoAsiAfterTransform.ts"
          },
          {
            "path": "tests/cases/conformance/statements/returnStatements/returnStatementNoAsiAfterTransform.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_b0Rd",
      "title": "Fixed crash in auto import suggestions for `default` of exported UMD objects",
      "url": "https://github.com/microsoft/TypeScript/pull/60313",
      "mergedAt": "2024-10-23T16:22:09Z",
      "updatedAt": "2024-10-23T16:50:45Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "437d7f7d9cc80b5e1d4c0759eb9af1a7d2e9a86d"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImportDefaultExportCrash1.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImportDefaultExportCrash2.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_umdDefaultNoCrash1.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_umdDefaultNoCrash2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_kg3W",
      "title": "Fixed \"add missing properties\" codefix for positions with nullable contextual types",
      "url": "https://github.com/microsoft/TypeScript/pull/60328",
      "mergedAt": "2024-10-23T18:31:37Z",
      "updatedAt": "2024-10-23T18:59:14Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6a90111d05d725168a124ea209372e62e80eb487"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/fixAddMissingMember.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties30.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties31.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties45.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties46.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties47.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties48.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc54q5Vb",
      "title": "fix(59397): JsDoc is missing/duplicated in declarations for overloads declared in classes declared in functions",
      "url": "https://github.com/microsoft/TypeScript/pull/59675",
      "mergedAt": "2024-10-23T18:34:24Z",
      "updatedAt": "2024-10-23T18:34:24Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "db8eacd7e21a8bc945481cd235ff4cd0929e661a"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/signatureOverloadsWithComments.js"
          },
          {
            "path": "tests/baselines/reference/signatureOverloadsWithComments.symbols"
          },
          {
            "path": "tests/baselines/reference/signatureOverloadsWithComments.types"
          },
          {
            "path": "tests/cases/compiler/signatureOverloadsWithComments.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-ve8C",
      "title": "Fix prioritization of `paths` specifiers over node_modules package specifiers",
      "url": "https://github.com/microsoft/TypeScript/pull/60238",
      "mergedAt": "2024-10-23T20:22:23Z",
      "updatedAt": "2024-10-23T20:22:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2ac4cb78d6930302eb0a55d07f154a2b0597ae32"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "iisaduan"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/moduleSpecifiers.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPathsNodeModules.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6AB3YL",
      "title": "Bump the github-actions group with 4 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/60356",
      "mergedAt": "2024-10-28T18:20:02Z",
      "updatedAt": "2024-10-28T18:20:05Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6beca69fbc1c6bf45abdd401434b6e4c306c8c96"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/accept-baselines-fix-lints.yaml"
          },
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/create-cherry-pick-pr.yml"
          },
          {
            "path": ".github/workflows/insiders.yaml"
          },
          {
            "path": ".github/workflows/lkg.yml"
          },
          {
            "path": ".github/workflows/new-release-branch.yaml"
          },
          {
            "path": ".github/workflows/nightly.yaml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          },
          {
            "path": ".github/workflows/set-version.yaml"
          },
          {
            "path": ".github/workflows/sync-branch.yaml"
          },
          {
            "path": ".github/workflows/sync-wiki.yml"
          },
          {
            "path": ".github/workflows/twoslash-repros.yaml"
          },
          {
            "path": ".github/workflows/update-package-lock.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6AEWnV",
      "title": "Fixed a JSDoc-related crash when obtaining type of a type literal type argument",
      "url": "https://github.com/microsoft/TypeScript/pull/60358",
      "mergedAt": "2024-10-28T18:50:15Z",
      "updatedAt": "2024-10-28T18:53:36Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "cb44488fcec4348a448434afbf2ebcbf2b423c61"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsJSDocNoCrash3.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_0riJ",
      "title": "fix paste edits range: include all completely selected identifiers",
      "url": "https://github.com/microsoft/TypeScript/pull/60339",
      "mergedAt": "2024-10-29T21:05:32Z",
      "updatedAt": "2024-10-29T21:05:41Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "21618934bf91855e5800d94d34463f29526811cb"
      },
      "author": {
        "login": "iisaduan"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          },
          {
            "login": "navya9singh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/pasteEdits.ts"
          },
          {
            "path": "src/services/textChanges.ts"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection0.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection4.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection5.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection6.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection7.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection8.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_rangeSelection9.js"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection0.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection1.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection2.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection3.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection4.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection5.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection6.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection7.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection8.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_rangeSelection9.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Abv5I",
      "title": "Fix a crash in an anonymous buffer that copilot is writing to.",
      "url": "https://github.com/microsoft/TypeScript/pull/60377",
      "mergedAt": "2024-10-30T22:36:20Z",
      "updatedAt": "2024-10-30T22:36:21Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "da15ef2841076f40d2b278cdaedc47e45fde32ec"
      },
      "author": {
        "login": "sandersn"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "iisaduan"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/server/scriptVersionCache.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6AkHns",
      "title": "Remove unused `SymbolLinks[\"bindingElement\"]`",
      "url": "https://github.com/microsoft/TypeScript/pull/60385",
      "mergedAt": "2024-10-31T20:14:17Z",
      "updatedAt": "2024-10-31T20:14:17Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "f478257f0603945a240e4394b103743f218edde0"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5x8Di2",
      "title": "Use `canHaveFlowNode` in `checkIfExpressionRefinesParameter`",
      "url": "https://github.com/microsoft/TypeScript/pull/58816",
      "mergedAt": "2024-10-31T20:14:27Z",
      "updatedAt": "2024-10-31T20:14:27Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "a271797c1a95494e5f7aa8075c01941ad25cad08"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5pOUgk",
      "title": "Add string literal completions for `package.json` `imports` field",
      "url": "https://github.com/microsoft/TypeScript/pull/57718",
      "mergedAt": "2024-10-31T20:33:40Z",
      "updatedAt": "2024-10-31T20:33:41Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "48f2ada110a697668db7d2d1c11a382b0192d3f9"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/moduleNameResolver.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/harness/vfsUtil.ts"
          },
          {
            "path": "src/services/stringCompletions.ts"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importCompletions_importsMap1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importCompletions_importsMap2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importCompletions_importsMap3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importCompletions_importsMap4.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/importCompletions_importsMap5.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard4.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard5.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard6.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard7.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard8.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pathCompletionsPackageJsonImportsSrcNoDistWildcard9.js"
          },
          {
            "path": "tests/cases/fourslash/completionsPaths_pathMapping_nonTrailingWildcard1.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonExportsSpecifierEndsInTs.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonExportsTrailingSlash1.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsConditions1.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsLength1.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsLength2.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern2.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_capsInPath1.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_capsInPath2.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_js.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_js_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_ts_js.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_ts_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImports_js.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImports_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard12.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsBundlerNoNodeCondition.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsCustomConditions.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsIgnoreMatchingNodeModule1.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsIgnoreMatchingNodeModule2.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsOnlyFromClosestScope1.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard1.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard10.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard11.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard12.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard2.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard3.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard4.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard5.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard6.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard7.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard8.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard9.ts"
          },
          {
            "path": "tests/cases/fourslash/server/importCompletions_importsMap1.ts"
          },
          {
            "path": "tests/cases/fourslash/server/importCompletions_importsMap2.ts"
          },
          {
            "path": "tests/cases/fourslash/server/importCompletions_importsMap3.ts"
          },
          {
            "path": "tests/cases/fourslash/server/importCompletions_importsMap4.ts"
          },
          {
            "path": "tests/cases/fourslash/server/importCompletions_importsMap5.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pathCompletionsPackageJsonImportsSrcNoDistWildcard1.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pathCompletionsPackageJsonImportsSrcNoDistWildcard2.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pathCompletionsPackageJsonImportsSrcNoDistWildcard3.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pathCompletionsPackageJsonImportsSrcNoDistWildcard4.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pathCompletionsPackageJsonImportsSrcNoDistWildcard5.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pathCompletionsPackageJsonImportsSrcNoDistWildcard6.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pathCompletionsPackageJsonImportsSrcNoDistWildcard7.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pathCompletionsPackageJsonImportsSrcNoDistWildcard8.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pathCompletionsPackageJsonImportsSrcNoDistWildcard9.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_01tW",
      "title": "Fixed crash on class member completions with auto imports from merged ambient modules",
      "url": "https://github.com/microsoft/TypeScript/pull/60340",
      "mergedAt": "2024-10-31T20:47:38Z",
      "updatedAt": "2024-10-31T20:47:38Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e4dc78ab8c82d557f1fece7ffcc717296b005a5d"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "asmtilde"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/importFixes.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportCompletionAmbientMergedModule1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5wo3SZ",
      "title": "Fixed an accidental `undefined` leak into `getAccessibleSymbolChain`'s cache key",
      "url": "https://github.com/microsoft/TypeScript/pull/58669",
      "mergedAt": "2024-10-31T22:18:27Z",
      "updatedAt": "2024-10-31T22:18:27Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "32513a7745b606dc8b33c8a4c722aaa026752283"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_sTS_",
      "title": "fix autoimports crash: generate namespace and other module symbol imports ",
      "url": "https://github.com/microsoft/TypeScript/pull/60333",
      "mergedAt": "2024-11-01T00:03:12Z",
      "updatedAt": "2024-11-01T00:03:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3e6171833e6d8481626b56a7de09ea03092fadf2"
      },
      "author": {
        "login": "iisaduan"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "navya9singh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "navya9singh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/importFixes.ts"
          },
          {
            "path": "src/services/exportInfoMap.ts"
          },
          {
            "path": "src/services/refactors/helpers.ts"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_blankTargetFile.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_defaultExport1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_defaultExport2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_defaultImport.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_namespaceImport.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_requireImportJsx.js"
          },
          {
            "path": "tests/cases/fourslash/moveToFile_namespaceImport.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_aliasDefaultExportNamedImport.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_namespaceExport.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_namespaceTypeImport.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_reactDefaultImport.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_reactNamespaceImport.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_blankTargetFile.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_defaultExport1.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_defaultExport2.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_defaultImport.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_namespaceImport.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_requireImportJsx.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-6kaq",
      "title": "Fix incorrect details in lib.decorators",
      "url": "https://github.com/microsoft/TypeScript/pull/60252",
      "mergedAt": "2024-11-01T19:02:04Z",
      "updatedAt": "2024-11-14T23:14:32Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "248c8f5f993882a28d54471a7fb86ac01b35da4f"
      },
      "author": {
        "login": "trusktr"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/decorators.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6AqWvc",
      "title": "Add compatible overloads that accept ArrayBuffer to BigInt64Array/BigUint64Array",
      "url": "https://github.com/microsoft/TypeScript/pull/60391",
      "mergedAt": "2024-11-01T20:47:09Z",
      "updatedAt": "2024-11-01T20:47:11Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "11b2930fa2c9f73b0ffb725a9715b8d3c4121bbc"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/es2020.bigint.d.ts"
          },
          {
            "path": "tests/baselines/reference/bigintWithLib.errors.txt"
          },
          {
            "path": "tests/cases/compiler/typedArrayConstructorOverloads.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6AJofA",
      "title": "Fixing exception on unsaved file",
      "url": "https://github.com/microsoft/TypeScript/pull/60362",
      "mergedAt": "2024-11-03T05:55:36Z",
      "updatedAt": "2024-11-03T05:55:36Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0ec4d30a6e2ebbc87292c9829378d4e98de8ef43"
      },
      "author": {
        "login": "navya9singh"
      },
      "assignees": {
        "nodes": [
          {
            "login": "navya9singh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/server/session.ts"
          },
          {
            "path": "src/testRunner/unittests/tsserver/pasteEdits.ts"
          },
          {
            "path": "tests/baselines/reference/tsserver/pasteEdits/should-not-error.js"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6AvIak",
      "title": "Fixed syntactic nullisness semantics for comma expressions",
      "url": "https://github.com/microsoft/TypeScript/pull/60402",
      "mergedAt": "2024-11-04T20:43:31Z",
      "updatedAt": "2024-12-20T09:26:03Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c09e2ab4ff1abb69d2b4a9b361dbbde43b0d5667"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.errors.txt"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.js"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.symbols"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.types"
          },
          {
            "path": "tests/cases/compiler/predicateSemantics.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6A9ogm",
      "title": "Bump version to 5.8.",
      "url": "https://github.com/microsoft/TypeScript/pull/60422",
      "mergedAt": "2024-11-05T19:41:25Z",
      "updatedAt": "2024-11-05T19:41:28Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "131f673c20e1cc440afda14f18cf0b5cf695fd4e"
      },
      "author": {
        "login": "DanielRosenwasser"
      },
      "assignees": {
        "nodes": [
          {
            "login": "DanielRosenwasser"
          },
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "package-lock.json"
          },
          {
            "path": "package.json"
          },
          {
            "path": "src/compiler/corePublic.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6A1SyO",
      "title": "Fix false positive rewriteRelativeImportExtensions error on non-TS extensions",
      "url": "https://github.com/microsoft/TypeScript/pull/60415",
      "mergedAt": "2024-11-05T20:50:18Z",
      "updatedAt": "2024-11-05T20:50:22Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "82a04b29b4f60b887c5c548f406d4dbc9462f79b"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/nonTSExtensions.js"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/nonTSExtensions.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-6gBT",
      "title": "Remove cancellationToken.js",
      "url": "https://github.com/microsoft/TypeScript/pull/60250",
      "mergedAt": "2024-11-05T22:35:02Z",
      "updatedAt": "2024-11-06T20:17:46Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "9d7e087022b170f9661d65890ae5542ecdc9bd70"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "mrazauskas"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "mrazauskas"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "Herebyfile.mjs"
          },
          {
            "path": "knip.jsonc"
          },
          {
            "path": "scripts/produceLKG.mjs"
          },
          {
            "path": "src/cancellationToken/cancellationToken.ts"
          },
          {
            "path": "src/cancellationToken/tsconfig.json"
          },
          {
            "path": "src/tsconfig.json"
          },
          {
            "path": "src/tsserver/nodeServer.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc57L614",
      "title": "Proposed expandable hover API",
      "url": "https://github.com/microsoft/TypeScript/pull/59940",
      "mergedAt": "2024-11-06T00:41:13Z",
      "updatedAt": "2025-01-27T22:55:16Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "80eeb4ec8da681f1f704f3fd7c5c3b7ab7dc5531"
      },
      "author": {
        "login": "gabritto"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/harness/client.ts"
          },
          {
            "path": "src/harness/fourslashImpl.ts"
          },
          {
            "path": "src/harness/fourslashInterfaceImpl.ts"
          },
          {
            "path": "src/server/protocol.ts"
          },
          {
            "path": "src/server/session.ts"
          },
          {
            "path": "src/services/services.ts"
          },
          {
            "path": "src/services/symbolDisplay.ts"
          },
          {
            "path": "src/services/types.ts"
          },
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosity1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosity2.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityClass1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityInterface1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityIntersection1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityObjectType1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityServer.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityTruncation.baseline"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/quickinfoVerbosityServer.js"
          },
          {
            "path": "tests/cases/fourslash/fourslash.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosity1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosity2.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityClass1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityInterface1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityIntersection1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityObjectType1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityTruncation.ts"
          },
          {
            "path": "tests/cases/fourslash/server/quickinfoVerbosityServer.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-oncW",
      "title": "fix(60223): add Promise.try() to ESNext lib",
      "url": "https://github.com/microsoft/TypeScript/pull/60232",
      "mergedAt": "2024-11-06T01:14:03Z",
      "updatedAt": "2024-12-17T15:05:25Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "60dd512a830600cbd8821ee8ece2bb544868f3ea"
      },
      "author": {
        "login": "dirkluijk"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dirkluijk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dirkluijk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "ljharb"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dirkluijk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "ljharb"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/lib/esnext.d.ts"
          },
          {
            "path": "src/lib/esnext.promise.d.ts"
          },
          {
            "path": "src/lib/libs.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/modulePreserve2.trace.json"
          },
          {
            "path": "tests/baselines/reference/modulePreserve3.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/promiseTry.js"
          },
          {
            "path": "tests/baselines/reference/promiseTry.symbols"
          },
          {
            "path": "tests/baselines/reference/promiseTry.types"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNext.trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNextEsm.trace.json"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/does-not-add-color-when-NO_COLOR-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped-when-host-can't-provide-terminal-width.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true-useFsEventsOnParentDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-event-ends-with-tilde.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-occurs-when-file-is-still-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-dynamic-polling-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-watchDirectory-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-watchFile-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders-with-synchronousWatchDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-renaming-a-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-with-outDir-and-declaration-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-fallbackPolling-option.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-watchDirectory-option.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/file-rename-on-wsl2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/recursive-directory-does-not-watch-files-starting-with-dot-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-dynamic-polling-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-non-recursive-watchDirectory-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-watchFile-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/watching-npm-install-in-codespaces-where-workspaces-folder-is-hosted-at-root.js"
          },
          {
            "path": "tests/baselines/reference/typesVersions.ambientModules.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.emptyTypes.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.justIndex.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.ambient.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToSelf.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToUnmapped.trace.json"
          },
          {
            "path": "tests/cases/compiler/promiseTry.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_ZPf1",
      "title": "Fix `getEffectiveCheckNode`",
      "url": "https://github.com/microsoft/TypeScript/pull/60309",
      "mergedAt": "2024-11-06T01:14:25Z",
      "updatedAt": "2024-11-06T01:14:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "8d95ac59681bd8a341cefa82b30441eb7f3d9a8d"
      },
      "author": {
        "login": "gabritto"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/factory/utilities.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/arrowExpressionBodyJSDoc.errors.txt"
          },
          {
            "path": "tests/baselines/reference/arrowExpressionBodyJSDoc.symbols"
          },
          {
            "path": "tests/baselines/reference/arrowExpressionBodyJSDoc.types"
          },
          {
            "path": "tests/baselines/reference/typeSatisfaction_errorLocations1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/typeSatisfaction_errorLocations1.symbols"
          },
          {
            "path": "tests/baselines/reference/typeSatisfaction_errorLocations1.types"
          },
          {
            "path": "tests/cases/compiler/arrowExpressionBodyJSDoc.ts"
          },
          {
            "path": "tests/cases/conformance/expressions/typeSatisfaction/typeSatisfaction_errorLocations1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-anDY",
      "title": "Reuse cached resolved signatures early",
      "url": "https://github.com/microsoft/TypeScript/pull/60208",
      "mergedAt": "2024-11-06T01:16:37Z",
      "updatedAt": "2024-11-06T01:16:38Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "5e2e32120b2fd5ef7a04e3414ceb120c119ec58c"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "LukeAbby"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/mixinWithBaseDependingOnSelfNoCrash1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/mixinWithBaseDependingOnSelfNoCrash1.symbols"
          },
          {
            "path": "tests/baselines/reference/mixinWithBaseDependingOnSelfNoCrash1.types"
          },
          {
            "path": "tests/cases/conformance/classes/mixinWithBaseDependingOnSelfNoCrash1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5jKv8p",
      "title": "Narrow generic conditional and indexed access return types when checking return statements",
      "url": "https://github.com/microsoft/TypeScript/pull/56941",
      "mergedAt": "2024-11-06T02:18:24Z",
      "updatedAt": "2025-05-09T17:47:46Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "30979c2651e5b0aa8ab583bbd8161cac3d0ea317"
      },
      "author": {
        "login": "gabritto"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/binder.ts"
          },
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/factory/nodeFactory.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/arrowExpressionJs.symbols"
          },
          {
            "path": "tests/baselines/reference/arrowExpressionJs.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType1.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType1.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType2.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType2.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType3.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType3.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType4.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType4.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType5.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType5.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType6.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType6.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType8.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType8.types"
          },
          {
            "path": "tests/baselines/reference/returnConditionalExpressionJSDocCast.symbols"
          },
          {
            "path": "tests/baselines/reference/returnConditionalExpressionJSDocCast.types"
          },
          {
            "path": "tests/baselines/reference/unusedLocalsInRecursiveReturn.symbols"
          },
          {
            "path": "tests/baselines/reference/unusedLocalsInRecursiveReturn.types"
          },
          {
            "path": "tests/cases/compiler/arrowExpressionJs.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType1.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType2.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType3.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType4.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType5.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType6.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType8.ts"
          },
          {
            "path": "tests/cases/compiler/returnConditionalExpressionJSDocCast.ts"
          },
          {
            "path": "tests/cases/compiler/unusedLocalsInRecursiveReturn.ts"
          },
          {
            "path": "tests/cases/fourslash/returnTypeNarrowingAfterCachingTypes.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6BGfSV",
      "title": "MetaProperty is possibly nullish",
      "url": "https://github.com/microsoft/TypeScript/pull/60440",
      "mergedAt": "2024-11-06T21:06:12Z",
      "updatedAt": "2024-11-06T21:06:15Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "55f1248a2052eebdea6bc0e2eef754df89a44bf7"
      },
      "author": {
        "login": "RyanCavanaugh"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.errors.txt"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.js"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.symbols"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.types"
          },
          {
            "path": "tests/cases/compiler/predicateSemantics.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_cjAa",
      "title": "feat(60312): Add missing properties for satisfies",
      "url": "https://github.com/microsoft/TypeScript/pull/60314",
      "mergedAt": "2024-11-08T17:48:13Z",
      "updatedAt": "2024-11-08T18:40:57Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ef802b1e4ddaf8d6e61d6005614dd796520448f8"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/fixAddMissingMember.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties33.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties34.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties35.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties36.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties37.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties38.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties39.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties40.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties41.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties42.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties43.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties44.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixAddMissingProperties_all.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-suUk",
      "title": "Extract function types from function and arrow expressions.",
      "url": "https://github.com/microsoft/TypeScript/pull/60234",
      "mergedAt": "2024-11-11T18:15:29Z",
      "updatedAt": "2024-11-11T18:15:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b58ac4abf2d58d6309274c22762e2196789476d9"
      },
      "author": {
        "login": "dragomirtitian"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/expressionToTypeNode.ts"
          },
          {
            "path": "tests/baselines/reference/arrowFunctionExpressions.types"
          },
          {
            "path": "tests/baselines/reference/capturedParametersInInitializers1.types"
          },
          {
            "path": "tests/baselines/reference/collisionSuperAndParameter.types"
          },
          {
            "path": "tests/baselines/reference/collisionThisExpressionAndNameResolution.types"
          },
          {
            "path": "tests/baselines/reference/collisionThisExpressionAndParameter.types"
          },
          {
            "path": "tests/baselines/reference/collisionThisExpressionAndPropertyNameAsConstuctorParameter.types"
          },
          {
            "path": "tests/baselines/reference/commentsFunction.js"
          },
          {
            "path": "tests/baselines/reference/contextualSignatureInstantiation2.types"
          },
          {
            "path": "tests/baselines/reference/contextualTypingOfAccessors.types"
          },
          {
            "path": "tests/baselines/reference/declFileTypeofFunction.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitArrowFunctionNoRenaming.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitBindingPatternsUnused.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitClassMemberNameConflict.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitExactOptionalPropertyTypesNodeNotReused(exactoptionalpropertytypes=false).types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitExactOptionalPropertyTypesNodeNotReused(exactoptionalpropertytypes=true).types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitResolveTypesIfNotReusable.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitTypeofRest.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationEmitTypeofRest.js"
          },
          {
            "path": "tests/baselines/reference/decoratedBlockScopedClass1.types"
          },
          {
            "path": "tests/baselines/reference/decoratedBlockScopedClass2.types"
          },
          {
            "path": "tests/baselines/reference/decoratedBlockScopedClass3.types"
          },
          {
            "path": "tests/baselines/reference/decoratorInstantiateModulesInFunctionBodies.types"
          },
          {
            "path": "tests/baselines/reference/duplicateIdentifierBindingElementInParameterDeclaration1.types"
          },
          {
            "path": "tests/baselines/reference/duplicateIdentifierBindingElementInParameterDeclaration2.types"
          },
          {
            "path": "tests/baselines/reference/emitArrowFunctionWhenUsingArguments08.types"
          },
          {
            "path": "tests/baselines/reference/emitArrowFunctionWhenUsingArguments08_ES6.types"
          },
          {
            "path": "tests/baselines/reference/emitThisInObjectLiteralGetter.types"
          },
          {
            "path": "tests/baselines/reference/esDecorators-contextualTypes.2.types"
          },
          {
            "path": "tests/baselines/reference/fatarrowfunctionsOptionalArgs.types"
          },
          {
            "path": "tests/baselines/reference/findAllRefsForFunctionExpression01.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/functionExpressionReturningItself.js"
          },
          {
            "path": "tests/baselines/reference/generatorTypeCheck39.types"
          },
          {
            "path": "tests/baselines/reference/genericCallWithObjectTypeArgs2.types"
          },
          {
            "path": "tests/baselines/reference/genericCallWithObjectTypeArgsAndConstraints4.types"
          },
          {
            "path": "tests/baselines/reference/genericCallWithObjectTypeArgsAndConstraints5.types"
          },
          {
            "path": "tests/baselines/reference/genericCallWithinOwnBodyCastTypeParameterIdentity.types"
          },
          {
            "path": "tests/baselines/reference/genericContextualTypes1.types"
          },
          {
            "path": "tests/baselines/reference/genericFunctionInference1.types"
          },
          {
            "path": "tests/baselines/reference/genericRestParameters1.types"
          },
          {
            "path": "tests/baselines/reference/genericTypeParameterEquivalence2.types"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.js"
          },
          {
            "path": "tests/baselines/reference/inferTypes1.types"
          },
          {
            "path": "tests/baselines/reference/instantiationExpressionErrorNoCrash.types"
          },
          {
            "path": "tests/baselines/reference/intersectionTypeInference1.types"
          },
          {
            "path": "tests/baselines/reference/intraExpressionInferences.types"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationsAddUndefined.types"
          },
          {
            "path": "tests/baselines/reference/jsdocSignatureOnReturnedFunction.types"
          },
          {
            "path": "tests/baselines/reference/keyofAndIndexedAccess.types"
          },
          {
            "path": "tests/baselines/reference/narrowingPastLastAssignment.types"
          },
          {
            "path": "tests/baselines/reference/nestedRecursiveLambda.types"
          },
          {
            "path": "tests/baselines/reference/parameterInitializersForwardReferencing1.types"
          },
          {
            "path": "tests/baselines/reference/parameterInitializersForwardReferencing1_es6.types"
          },
          {
            "path": "tests/baselines/reference/parameterReferenceInInitializer2.types"
          },
          {
            "path": "tests/baselines/reference/parseErrorIncorrectReturnToken.types"
          },
          {
            "path": "tests/baselines/reference/reactReduxLikeDeferredInferenceAllowsAssignment.types"
          },
          {
            "path": "tests/baselines/reference/returnStatement1.types"
          },
          {
            "path": "tests/baselines/reference/reverseMappedTypeIntersectionConstraint.types"
          },
          {
            "path": "tests/baselines/reference/reverseMappedTypeLimitedConstraint.types"
          },
          {
            "path": "tests/baselines/reference/spreadParameterTupleType.js"
          },
          {
            "path": "tests/baselines/reference/spreadParameterTupleType.symbols"
          },
          {
            "path": "tests/baselines/reference/spreadParameterTupleType.types"
          },
          {
            "path": "tests/baselines/reference/subtypingWithCallSignatures2.types"
          },
          {
            "path": "tests/baselines/reference/subtypingWithCallSignatures3.types"
          },
          {
            "path": "tests/baselines/reference/taggedTemplateStringsWithCurriedFunction.types"
          },
          {
            "path": "tests/baselines/reference/templateLiteralTypes1.types"
          },
          {
            "path": "tests/baselines/reference/thisExpressionInIndexExpression.types"
          },
          {
            "path": "tests/baselines/reference/thisTypeInClasses.types"
          },
          {
            "path": "tests/baselines/reference/trackedSymbolsNoCrash.types"
          },
          {
            "path": "tests/baselines/reference/transpile/declarationRestParameters.d.ts"
          },
          {
            "path": "tests/baselines/reference/typeParameterConstModifiers.types"
          },
          {
            "path": "tests/baselines/reference/typePredicateFreshLiteralWidening.types"
          },
          {
            "path": "tests/baselines/reference/unusedParametersInLambda1.types"
          },
          {
            "path": "tests/baselines/reference/unusedParametersInLambda2.types"
          },
          {
            "path": "tests/baselines/reference/variadicTuples1.js"
          },
          {
            "path": "tests/baselines/reference/variadicTuples1.types"
          },
          {
            "path": "tests/cases/compiler/spreadParameterTupleType.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Brz1f",
      "title": "Stub out copilotRelated command",
      "url": "https://github.com/microsoft/TypeScript/pull/60488",
      "mergedAt": "2024-11-13T16:33:01Z",
      "updatedAt": "2024-11-13T20:17:54Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "79ea5a5b358c41aac32866737deb7e17c73005a0"
      },
      "author": {
        "login": "sandersn"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/harness/client.ts"
          },
          {
            "path": "src/harness/fourslashImpl.ts"
          },
          {
            "path": "src/harness/fourslashInterfaceImpl.ts"
          },
          {
            "path": "src/server/protocol.ts"
          },
          {
            "path": "src/server/session.ts"
          },
          {
            "path": "src/services/services.ts"
          },
          {
            "path": "src/services/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/cases/fourslash/fourslash.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsDuplicate.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsDynamic.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsJSXFactory.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsNone.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsOne.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsOneJs.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsReexport.ts"
          },
          {
            "path": "tests/cases/fourslash/getImportsTslib.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_CVji",
      "title": "Let isolated declarations fixer add toplevel imports more",
      "url": "https://github.com/microsoft/TypeScript/pull/60267",
      "mergedAt": "2024-11-13T17:04:51Z",
      "updatedAt": "2024-11-13T18:49:40Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c043944b1434daa67b66573c66850d51c0a16944"
      },
      "author": {
        "login": "benjaminjkraft"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/helpers.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixMissingTypeAnnotationOnExports56-toplevel-import.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6BOtIk",
      "title": "Move to file: fix detection of references to globals that shouldn't be moved",
      "url": "https://github.com/microsoft/TypeScript/pull/60450",
      "mergedAt": "2024-11-15T22:21:39Z",
      "updatedAt": "2024-11-15T22:23:45Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b3c67d32020a3015fe068fbcb1dcfb18aedcaad3"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          },
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "iisaduan"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/refactors/moveToFile.ts"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_globalAndLocal1.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/pasteEdits_globalAndLocal2.js"
          },
          {
            "path": "tests/cases/fourslash/codeFixClassImplementInterfaceGlobal.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_globalAndLocal1.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_globalAndLocal2.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_globalAndLocal3.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_globalAndLocal4.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_globalAndLocal5.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_globalAndLocal6.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToNewFile_importNameLikeGlobal1.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_globalAndLocal1.ts"
          },
          {
            "path": "tests/cases/fourslash/server/pasteEdits_globalAndLocal2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6CDvfK",
      "title": "fix(60505): Convert to namespace import refactoring should drop file extensions on namespace name",
      "url": "https://github.com/microsoft/TypeScript/pull/60510",
      "mergedAt": "2024-11-20T03:42:17Z",
      "updatedAt": "2024-11-20T03:42:17Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d6b7c41fbcd9e2d72ea9d653b41e059d08c9c6cb"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "tests/cases/fourslash/refactorConvertImport_namedToNamespace11.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6BsKZY",
      "title": "fix(60484): Implementing a prim type in a class expression should report error",
      "url": "https://github.com/microsoft/TypeScript/pull/60490",
      "mergedAt": "2024-11-20T03:45:22Z",
      "updatedAt": "2024-11-20T03:45:22Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d85767abfd83880cea17cea70f9913e9c4496dcc"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/classExtendingPrimitive.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classExtendingPrimitive.js"
          },
          {
            "path": "tests/baselines/reference/classExtendingPrimitive.symbols"
          },
          {
            "path": "tests/baselines/reference/classExtendingPrimitive.types"
          },
          {
            "path": "tests/baselines/reference/classImplementsPrimitive.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classImplementsPrimitive.js"
          },
          {
            "path": "tests/baselines/reference/classImplementsPrimitive.symbols"
          },
          {
            "path": "tests/baselines/reference/classImplementsPrimitive.types"
          },
          {
            "path": "tests/cases/compiler/classImplementsPrimitive.ts"
          },
          {
            "path": "tests/cases/conformance/classes/classDeclarations/classHeritageSpecification/classExtendingPrimitive.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6C9P7w",
      "title": "Bump the github-actions group across 1 directory with 2 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/60581",
      "mergedAt": "2024-11-25T19:40:24Z",
      "updatedAt": "2024-11-25T19:40:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ee0e08bd96bdde7450337afe141e53018cfc89e4"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6DPVom",
      "title": "fix missing react error with fragments in `react-native`",
      "url": "https://github.com/microsoft/TypeScript/pull/60615",
      "mergedAt": "2024-11-26T21:24:45Z",
      "updatedAt": "2024-11-27T01:17:48Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "96410eb65516fd681f75ea595a68fe0ea908dfe2"
      },
      "author": {
        "login": "iisaduan"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/jsxFragReactReferenceErrors(jsx=preserve).js"
          },
          {
            "path": "tests/baselines/reference/jsxFragReactReferenceErrors(jsx=preserve).symbols"
          },
          {
            "path": "tests/baselines/reference/jsxFragReactReferenceErrors(jsx=preserve).types"
          },
          {
            "path": "tests/baselines/reference/jsxFragReactReferenceErrors(jsx=react-native).js"
          },
          {
            "path": "tests/baselines/reference/jsxFragReactReferenceErrors(jsx=react-native).symbols"
          },
          {
            "path": "tests/baselines/reference/jsxFragReactReferenceErrors(jsx=react-native).types"
          },
          {
            "path": "tests/cases/compiler/jsxFragReactReferenceErrors.tsx"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6DPZ7V",
      "title": "Fixed syntactic nullisness semantics for tagged template expressions",
      "url": "https://github.com/microsoft/TypeScript/pull/60616",
      "mergedAt": "2024-11-26T23:17:29Z",
      "updatedAt": "2024-12-16T19:43:56Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "9fe6c3661cd89952d9556ecb14ef366b44076064"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.errors.txt"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.js"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.symbols"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.types"
          },
          {
            "path": "tests/cases/compiler/predicateSemantics.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6BzaS5",
      "title": "Improve the definition of atan2()",
      "url": "https://github.com/microsoft/TypeScript/pull/60493",
      "mergedAt": "2024-11-27T23:12:21Z",
      "updatedAt": "2024-11-27T23:12:21Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b263cc4b2ef12ae013526a3d8808b6716146586a"
      },
      "author": {
        "login": "Psychpsyo"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "j4k0xb"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Psychpsyo"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/es5.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6A1zAX",
      "title": "Allow assignments to readonly class properties within IIFEs contained in constructors",
      "url": "https://github.com/microsoft/TypeScript/pull/60416",
      "mergedAt": "2024-12-02T19:15:47Z",
      "updatedAt": "2024-12-02T19:15:47Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "97177722b8facb30c3f27e124931257ae80b863d"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/readonlyMembers.errors.txt"
          },
          {
            "path": "tests/baselines/reference/readonlyMembers.js"
          },
          {
            "path": "tests/baselines/reference/readonlyMembers.symbols"
          },
          {
            "path": "tests/baselines/reference/readonlyMembers.types"
          },
          {
            "path": "tests/cases/compiler/readonlyMembers.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6DoHHI",
      "title": "Check if switch statements are exhaustive when their expressions is generic with a literal type constraint",
      "url": "https://github.com/microsoft/TypeScript/pull/60644",
      "mergedAt": "2024-12-02T20:12:59Z",
      "updatedAt": "2024-12-02T20:12:59Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "14c65b311959501b6720ff48b9cb02eecbcee4a7"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType9.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType9.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType9.types"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType9.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6DQP36",
      "title": "Fix library inclusions for ES2024 target",
      "url": "https://github.com/microsoft/TypeScript/pull/60622",
      "mergedAt": "2024-12-03T22:19:58Z",
      "updatedAt": "2024-12-04T20:16:51Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6f75783184328087627da983fe30a05fca4f6314"
      },
      "author": {
        "login": "billyjanitsch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "petamoriken"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "petamoriken"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/transformers/esnext.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/compiler/utilitiesPublic.ts"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true-useFsEventsOnParentDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-event-ends-with-tilde.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-occurs-when-file-is-still-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-dynamic-polling-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-watchDirectory-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-watchFile-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders-with-synchronousWatchDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-renaming-a-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-with-outDir-and-declaration-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-fallbackPolling-option.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-watchDirectory-option.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/file-rename-on-wsl2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/recursive-directory-does-not-watch-files-starting-with-dot-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-dynamic-polling-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-non-recursive-watchDirectory-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-watchFile-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/watching-npm-install-in-codespaces-where-workspaces-folder-is-hosted-at-root.js"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6D9A2H",
      "title": "Do not require import attributes for JSON imports in `--module node16`",
      "url": "https://github.com/microsoft/TypeScript/pull/60673",
      "mergedAt": "2024-12-04T16:47:16Z",
      "updatedAt": "2024-12-04T16:47:21Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "9bf5aa7fe234d58b1fa4b435f9a0b9dcd16fe216"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node16).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node16).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=nodenext).types"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesJson.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6D0m5a",
      "title": "Fix flow node improper reuse",
      "url": "https://github.com/microsoft/TypeScript/pull/60662",
      "mergedAt": "2024-12-04T17:13:13Z",
      "updatedAt": "2024-12-04T17:13:15Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6b1ea96b9404ccfc8e66e22fa2a7b645781255c3"
      },
      "author": {
        "login": "gabritto"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/binder.ts"
          },
          {
            "path": "tests/cases/fourslash/unreachableStatementNodeReuse.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6C8h-L",
      "title": "Avoid incorrectly reusing assertion nodes from property assignments",
      "url": "https://github.com/microsoft/TypeScript/pull/60576",
      "mergedAt": "2024-12-04T20:04:14Z",
      "updatedAt": "2024-12-04T20:06:09Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "676d32994813badf283a0b1601665c901dd697f2"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/expressionToTypeNode.ts"
          },
          {
            "path": "tests/baselines/reference/declarationAssertionNodeNotReusedWhenTypeNotEquivalent1.js"
          },
          {
            "path": "tests/baselines/reference/declarationAssertionNodeNotReusedWhenTypeNotEquivalent1.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationAssertionNodeNotReusedWhenTypeNotEquivalent1.types"
          },
          {
            "path": "tests/cases/compiler/declarationAssertionNodeNotReusedWhenTypeNotEquivalent1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickInfoAssertionNodeNotReusedWhenTypeNotEquivalent1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EF270",
      "title": "Mark the inherited any-based index signature so it can be elided in declaration emit",
      "url": "https://github.com/microsoft/TypeScript/pull/60680",
      "mergedAt": "2024-12-04T21:21:16Z",
      "updatedAt": "2024-12-16T19:36:12Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "42f893ff75e0bcf73eb936d3e986bd7c3358cb8c"
      },
      "author": {
        "login": "weswigham"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/declarationEmitClassInherritsAny.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitClassInherritsAny.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitClassInherritsAny.types"
          },
          {
            "path": "tests/cases/compiler/declarationEmitClassInherritsAny.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc56cDr1",
      "title": "Include type-meaning 'extends' clause in auto-import fix list",
      "url": "https://github.com/microsoft/TypeScript/pull/59853",
      "mergedAt": "2024-12-04T21:22:26Z",
      "updatedAt": "2024-12-04T21:22:30Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "410513462673bad5696dad89b7103f31681ca1c6"
      },
      "author": {
        "login": "RyanCavanaugh"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/importFixes.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFix_all.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EGHIk",
      "title": "Cache started nonexistent property error checks to prevent reentrancy in the check",
      "url": "https://github.com/microsoft/TypeScript/pull/60683",
      "mergedAt": "2024-12-04T23:13:20Z",
      "updatedAt": "2024-12-05T20:57:57Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "517da72a57c878e5d4fbd260e7f1f8b019efbb27"
      },
      "author": {
        "login": "weswigham"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/checkingObjectWithThisInNamePositionNoCrash.errors.txt"
          },
          {
            "path": "tests/baselines/reference/checkingObjectWithThisInNamePositionNoCrash.js"
          },
          {
            "path": "tests/baselines/reference/checkingObjectWithThisInNamePositionNoCrash.symbols"
          },
          {
            "path": "tests/baselines/reference/checkingObjectWithThisInNamePositionNoCrash.types"
          },
          {
            "path": "tests/cases/compiler/checkingObjectWithThisInNamePositionNoCrash.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EGPgD",
      "title": "Lookup non-local element factory for reference marking when marking fragment references",
      "url": "https://github.com/microsoft/TypeScript/pull/60684",
      "mergedAt": "2024-12-05T00:44:24Z",
      "updatedAt": "2024-12-05T00:44:24Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "12d96878bc51df4b1707b6f92f5094f51513a16d"
      },
      "author": {
        "login": "weswigham"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "iisaduan"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentAndFactoryUsedOnFragmentUse.js"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentAndFactoryUsedOnFragmentUse.symbols"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentAndFactoryUsedOnFragmentUse.types"
          },
          {
            "path": "tests/cases/compiler/jsxFragmentAndFactoryUsedOnFragmentUse.tsx"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EKGTR",
      "title": "Add extra test cases for fixed `reportNonexistentProperty` crashes",
      "url": "https://github.com/microsoft/TypeScript/pull/60690",
      "mergedAt": "2024-12-05T17:21:09Z",
      "updatedAt": "2024-12-05T18:47:46Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "9ef98be5175bf8ee25c33ad1117ff13cf3877135"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "tests/baselines/reference/checkingObjectDefinePropertyOnFunctionNonexistentPropertyNoCrash1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/checkingObjectDefinePropertyOnFunctionNonexistentPropertyNoCrash1.js"
          },
          {
            "path": "tests/baselines/reference/checkingObjectDefinePropertyOnFunctionNonexistentPropertyNoCrash1.symbols"
          },
          {
            "path": "tests/baselines/reference/checkingObjectDefinePropertyOnFunctionNonexistentPropertyNoCrash1.types"
          },
          {
            "path": "tests/baselines/reference/findAllRefsNonexistentPropertyNoCrash1.baseline.jsonc"
          },
          {
            "path": "tests/cases/compiler/checkingObjectDefinePropertyOnFunctionNonexistentPropertyNoCrash1.ts"
          },
          {
            "path": "tests/cases/fourslash/findAllRefsNonexistentPropertyNoCrash1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Cb7iJ",
      "title": "Switch coverage image from ubuntu-22.04 to mariner-2.0",
      "url": "https://github.com/microsoft/TypeScript/pull/60541",
      "mergedAt": "2024-12-05T23:16:53Z",
      "updatedAt": "2024-12-05T23:17:25Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "edd278a10415476afb90f3f0523e132805626e52"
      },
      "author": {
        "login": "HannahOshlag"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EKXNc",
      "title": "Error on `override` used on dynamically named class members",
      "url": "https://github.com/microsoft/TypeScript/pull/60691",
      "mergedAt": "2024-12-06T19:05:25Z",
      "updatedAt": "2024-12-06T19:05:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "239a2a936f30de0172d1700695c8f746e9009255"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=false).errors.txt"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=false).js"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=false).symbols"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=false).types"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=true).js"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=true).symbols"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=true).types"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=false).errors.txt"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=false).js"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=false).symbols"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=false).types"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=true).js"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=true).symbols"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=true).types"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableName1(noimplicitoverride=false).errors.txt"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableName1(noimplicitoverride=false).js"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableName1(noimplicitoverride=false).symbols"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableName1(noimplicitoverride=false).types"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableName1(noimplicitoverride=true).errors.txt"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableName1(noimplicitoverride=true).js"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableName1(noimplicitoverride=true).symbols"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableName1(noimplicitoverride=true).types"
          },
          {
            "path": "tests/cases/conformance/override/overrideDynamicName1.ts"
          },
          {
            "path": "tests/cases/conformance/override/overrideLateBindableIndexSignature1.ts"
          },
          {
            "path": "tests/cases/conformance/override/overrideLateBindableName1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EPkv8",
      "title": "Fix incorrect usage of package.json `types`/`main` in package subdirectories",
      "url": "https://github.com/microsoft/TypeScript/pull/60696",
      "mergedAt": "2024-12-06T21:47:41Z",
      "updatedAt": "2025-01-03T21:00:27Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "421f5c5458d09dad601604e6eff8765283aef14e"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/moduleNameResolver.ts"
          },
          {
            "path": "tests/baselines/reference/moduleResolution_packageJson_yesAtPackageRoot.trace.json"
          },
          {
            "path": "tests/baselines/reference/moduleResolution_packageJson_yesAtPackageRoot_fakeScopedPackage.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.ambientModules.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.ambient.trace.json"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EG-RY",
      "title": "Remove reference not found errors from `jsx: preserve`",
      "url": "https://github.com/microsoft/TypeScript/pull/60687",
      "mergedAt": "2024-12-09T18:38:37Z",
      "updatedAt": "2024-12-10T05:03:45Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3d2b8f33d4ff86ec351ba93a557d37720962c921"
      },
      "author": {
        "login": "iisaduan"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentFactoryReference(jsx=react).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentFactoryReference(jsx=react-jsx).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxFragmentFactoryReference(jsx=react-jsxdev).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImport(jsx=react-jsx).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImport(jsx=react-jsxdev).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImportPragma(jsx=react-jsx).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImportPragma(jsx=react-jsxdev).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxRuntimePragma(jsx=preserve).js"
          },
          {
            "path": "tests/baselines/reference/jsxRuntimePragma(jsx=preserve).symbols"
          },
          {
            "path": "tests/baselines/reference/jsxRuntimePragma(jsx=preserve).types"
          },
          {
            "path": "tests/baselines/reference/parseUnaryExpressionNoTypeAssertionInJsx2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parseUnaryExpressionNoTypeAssertionInJsx4.errors.txt"
          },
          {
            "path": "tests/cases/compiler/jsxFragmentFactoryReference.tsx"
          },
          {
            "path": "tests/cases/compiler/jsxRuntimePragma.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EdwGZ",
      "title": "Bump the github-actions group with 3 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/60713",
      "mergedAt": "2024-12-11T09:20:52Z",
      "updatedAt": "2024-12-11T09:20:55Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6a00bd2422ffa46c13ac8ff81d7b4b1157e60ba7"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FDHwj",
      "title": "Do not require import attribute on type-only JSON import",
      "url": "https://github.com/microsoft/TypeScript/pull/60749",
      "mergedAt": "2024-12-12T19:42:25Z",
      "updatedAt": "2024-12-12T19:42:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "44e84bb7b0ced9bc703b05e317893f594bfcb920"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node16).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node16).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=nodenext).types"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesJson.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FEbp0",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20241212204530251 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/60752",
      "mergedAt": "2024-12-12T21:21:18Z",
      "updatedAt": "2024-12-12T21:21:20Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "4a18b5cf8d41975c86cde25a0b2229f81e3b08d2"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6EmU8B",
      "title": "Add `--module node18`",
      "url": "https://github.com/microsoft/TypeScript/pull/60722",
      "mergedAt": "2024-12-13T18:16:23Z",
      "updatedAt": "2024-12-13T18:16:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "f69580f82146bebfb2bee8c7b8666af0e04c7e34"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/program.ts"
          },
          {
            "path": "src/compiler/transformer.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/server/protocol.ts"
          },
          {
            "path": "src/services/codefixes/fixModuleAndTargetOptions.ts"
          },
          {
            "path": "src/services/codefixes/importFixes.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/arbitraryModuleNamespaceIdentifiers_module(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/arbitraryModuleNamespaceIdentifiers_module(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/arbitraryModuleNamespaceIdentifiers_module(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/arbitraryModuleNamespaceIdentifiers_module(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/awaitInNonAsyncFunction.errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.1(target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.1(target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.2(target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.2(target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.3(target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.3(target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarationsInForAwaitOf.3(target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse empty options of --module.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of module to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of module to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/emitHelpersWithLocalCollisions(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/emitHelpersWithLocalCollisions(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/importAssertion1(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAssertion1(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAssertion2(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAssertion2(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAssertion3(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes1(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes1(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes2(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes2(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes3(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importCallExpressionErrorInES2015.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importCallExpressionGrammarError.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importCallExpressionNestedES2015.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importCallExpressionNestedES20152.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importMeta(module=commonjs,target=es5).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importMeta(module=commonjs,target=esnext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importTag14.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importTag15(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleNodeDefaultImports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleNodeDefaultImports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/moduleNodeDefaultImports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleNodeDefaultImports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/modulePreserveTopLevelAwait1(target=es2016).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node18,moduleresolution=node16).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node18,moduleresolution=node16).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node18,moduleresolution=node16).types"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node18,moduleresolution=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node18,moduleresolution=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithModule(module=node18,moduleresolution=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/nodeAllowJsPackageSelfName(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeAllowJsPackageSelfName(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeAllowJsPackageSelfName(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeAllowJsPackageSelfName(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModules1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModules1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModules1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModules1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJs1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJs1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJs1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJs1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsCjsFromJs(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsCjsFromJs(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsDynamicImport(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsDynamicImport(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsDynamicImport(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportAssignment(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportAssignment(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportAssignment(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportAssignment(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportlessJsModuleDetectionAuto(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportlessJsModuleDetectionAuto(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsExportlessJsModuleDetectionAuto(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsGeneratedNameCollisions(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsGeneratedNameCollisions(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsGeneratedNameCollisions(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsGeneratedNameCollisions(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportAssignment(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportAssignment(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportAssignment(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportAssignment(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions2(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions2(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions2(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions2(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions3(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions3(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions3(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportHelpersCollisions3(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportMeta(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportMeta(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportMeta(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsImportMeta(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsExclude(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsExclude(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsExclude(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsExclude(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsSynchronousCallErrors(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsSynchronousCallErrors(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsSynchronousCallErrors(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsSynchronousCallErrors(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsTopLevelAwait(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsTopLevelAwait(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsTopLevelAwait(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsTopLevelAwait(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCjsFormatFileAlwaysHasDefault(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCjsFormatFileAlwaysHasDefault(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCjsFormatFileAlwaysHasDefault(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitWithPackageExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitWithPackageExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitWithPackageExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitWithPackageExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDynamicImport(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDynamicImport(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDynamicImport(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportAssignments(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportAssignments(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportAssignments(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportAssignments(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksSpecifierResolution(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksSpecifierResolution(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksSpecifierResolution(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksSpecifierResolution(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node18).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSourceTs(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSourceTs(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSourceTs(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSourceTs(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationConditions(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationConditions(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationConditions(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationConditions(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationDirectory(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationDirectory(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationDirectory(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationDirectory(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationPattern(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationPattern(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationPattern(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsSpecifierGenerationPattern(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesForbidenSyntax(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesForbidenSyntax(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesForbidenSyntax(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesForbidenSyntax(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesGeneratedNameCollisions(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesGeneratedNameCollisions(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesGeneratedNameCollisions(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesGeneratedNameCollisions(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssignments(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssignments(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssignments(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributes(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributes(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributes(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributes(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributes(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit1(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit2(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit2(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit2(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit2(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmit2(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmitErrors(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmitErrors(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmitErrors(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmitErrors(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesModeDeclarationEmitErrors(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmit(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmit(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmit(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmitErrors(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmitErrors(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmitErrors(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAttributesTypeModeDeclarationEmitErrors(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions2(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions2(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions2(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions2(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions3(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions3(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions3(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportHelpersCollisions3(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportMeta(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportMeta(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportMeta(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportMeta(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionIntoExport(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionIntoExport(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionIntoExport(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionNoCycle(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionNoCycle(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionNoCycle(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportResolutionNoCycle(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmit1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmit1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmit1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmitErrors1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmitErrors1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmitErrors1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportTypeModeDeclarationEmitErrors1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesJson(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node18).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsExclude(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsExclude(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsExclude(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsExclude(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node18).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesResolveJsonModule(module=node16).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesResolveJsonModule(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesResolveJsonModule(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesResolveJsonModule(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesSynchronousCallErrors(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesSynchronousCallErrors(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesSynchronousCallErrors(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesSynchronousCallErrors(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTopLevelAwait(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTopLevelAwait(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTopLevelAwait(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTopLevelAwait(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit2(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit2(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit2(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit3(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit3(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit3(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit4(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit4(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit4(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit5(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit5(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit5(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit6(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit6(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit6(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit7(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit7(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeDeclarationEmit7(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride1(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride1(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride2(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride2(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride2(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride2(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride3(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride3(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride3(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride3(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride4(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride4(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride4(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride4(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride5(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride5(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverride5(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverrideModeError(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverrideModeError(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverrideModeError(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTripleSlashReferenceModeOverrideModeError(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTypesVersionPackageExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTypesVersionPackageExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesTypesVersionPackageExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfName(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfName(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfName(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfName(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfNameScoped(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfNameScoped(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfNameScoped(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfNameScoped(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/parser.forAwait.es2018.errors.txt"
          },
          {
            "path": "tests/baselines/reference/topLevelAwait.1(module=es2022,target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/topLevelAwait.1(module=esnext,target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/topLevelAwait.1(module=system,target=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options module-kind is out-of-range.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options module-kind is out-of-range.js"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options module-kind is out-of-range.oldTranspile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options module-kind is out-of-range.oldTranspile.js"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options target-script is out-of-range.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options target-script is out-of-range.js"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options target-script is out-of-range.oldTranspile.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transpile/Report an error when compiler-options target-script is out-of-range.oldTranspile.js"
          },
          {
            "path": "tests/baselines/reference/tripleSlashTypesReferenceWithMissingExports(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/tripleSlashTypesReferenceWithMissingExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/tripleSlashTypesReferenceWithMissingExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/tripleSlashTypesReferenceWithMissingExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/does-not-add-color-when-NO_COLOR-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped-when-host-can't-provide-terminal-width.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped.js"
          },
          {
            "path": "tests/cases/compiler/moduleNodeDefaultImports.ts"
          },
          {
            "path": "tests/cases/compiler/moduleResolutionWithModule.ts"
          },
          {
            "path": "tests/cases/compiler/tripleSlashTypesReferenceWithMissingExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeAllowJsPackageSelfName.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJs1.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsCjsFromJs.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsConditionalPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsDynamicImport.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsExportAssignment.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsExportlessJsModuleDetectionAuto.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsGeneratedNameCollisions.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsImportAssignment.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsImportHelpersCollisions1.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsImportHelpersCollisions2.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsImportHelpersCollisions3.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsImportMeta.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsPackageImports.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsPackagePatternExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsPackagePatternExportsExclude.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsPackagePatternExportsTrailers.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsSynchronousCallErrors.ts"
          },
          {
            "path": "tests/cases/conformance/node/allowJs/nodeModulesAllowJsTopLevelAwait.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModules1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesCjsFormatFileAlwaysHasDefault.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesConditionalPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesDeclarationEmitWithPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesDynamicImport.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportAssignments.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsBlocksSpecifierResolution.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsBlocksTypesVersions.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsSourceTs.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsSpecifierGenerationConditions.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsSpecifierGenerationDirectory.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsSpecifierGenerationPattern.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesForbidenSyntax.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesGeneratedNameCollisions.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAssertions.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAssignments.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAttributes.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAttributesModeDeclarationEmit1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAttributesModeDeclarationEmit2.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAttributesModeDeclarationEmitErrors.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAttributesTypeModeDeclarationEmit.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportAttributesTypeModeDeclarationEmitErrors.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportHelpersCollisions.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportHelpersCollisions2.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportHelpersCollisions3.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportMeta.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportModeDeclarationEmit1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportModeDeclarationEmit2.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportModeDeclarationEmitErrors1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportResolutionIntoExport.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportResolutionNoCycle.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportTypeModeDeclarationEmit1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesImportTypeModeDeclarationEmitErrors1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesJson.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesPackageImports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesPackagePatternExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesPackagePatternExportsExclude.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesPackagePatternExportsTrailers.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesResolveJsonModule.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesSynchronousCallErrors.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTopLevelAwait.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit2.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit3.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit4.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit5.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit6.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit7.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeOverride1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeOverride2.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeOverride3.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeOverride4.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeOverride5.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeOverrideModeError.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesTypesVersionPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodePackageSelfName.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodePackageSelfNameScoped.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Famdu",
      "title": "Point TypeScript-Twoslash-Repro-Action back to main branch",
      "url": "https://github.com/microsoft/TypeScript/pull/60779",
      "mergedAt": "2024-12-16T22:57:14Z",
      "updatedAt": "2024-12-16T22:57:17Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ed1f2ccfa86f1439ed87d2a93a700cc2eb1c93ee"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/twoslash-repros.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Fatz4",
      "title": "Use macos-latest in CI",
      "url": "https://github.com/microsoft/TypeScript/pull/60780",
      "mergedAt": "2024-12-16T22:57:33Z",
      "updatedAt": "2024-12-16T22:57:33Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ac2cfccd64d5f4a860b7c24335679da9c04bf525"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FiqgZ",
      "title": "Harden `sanitizeLog` against incorrect matches on TypeScript versions.",
      "url": "https://github.com/microsoft/TypeScript/pull/60794",
      "mergedAt": "2024-12-17T20:56:21Z",
      "updatedAt": "2024-12-17T20:58:33Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "7be4b2c6977c9d81006ac1fe080321247d025371"
      },
      "author": {
        "login": "DanielRosenwasser"
      },
      "assignees": {
        "nodes": [
          {
            "login": "DanielRosenwasser"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/harness/tsserverLogger.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FjOpz",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20241217202808030 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/60797",
      "mergedAt": "2024-12-17T21:27:17Z",
      "updatedAt": "2024-12-17T21:27:19Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e1db57d83c97b2046ebd47dfcf9bc6b892f4207e"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Fknb0",
      "title": "Add tests for `getNormalizedAbsolutePath`.",
      "url": "https://github.com/microsoft/TypeScript/pull/60802",
      "mergedAt": "2024-12-18T01:45:48Z",
      "updatedAt": "2024-12-18T01:45:50Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c8af21b4fb6cf5b08cedab6beb69b7c89767cc09"
      },
      "author": {
        "login": "DanielRosenwasser"
      },
      "assignees": {
        "nodes": [
          {
            "login": "DanielRosenwasser"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/testRunner/unittests/paths.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Fa_56",
      "title": "Update dependencies",
      "url": "https://github.com/microsoft/TypeScript/pull/60781",
      "mergedAt": "2024-12-18T02:28:58Z",
      "updatedAt": "2024-12-18T02:29:01Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "52717acf8722ad153b3ee49cd59b7c95b0f4ee04"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".dprint.jsonc"
          },
          {
            "path": "package-lock.json"
          },
          {
            "path": "package.json"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Firt0",
      "title": "Improve `unknown` narrowing by negated type predicates",
      "url": "https://github.com/microsoft/TypeScript/pull/60795",
      "mergedAt": "2024-12-18T18:44:43Z",
      "updatedAt": "2024-12-19T11:23:01Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0dda037f9fc53af3623b9e7371a731947a572d40"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/narrowUnknownByTypePredicate.symbols"
          },
          {
            "path": "tests/baselines/reference/narrowUnknownByTypePredicate.types"
          },
          {
            "path": "tests/cases/compiler/narrowUnknownByTypePredicate.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6AsWSv",
      "title": "Don't try to add an implicit undefined for mapped properties outside of `strictNullChecks`",
      "url": "https://github.com/microsoft/TypeScript/pull/60393",
      "mergedAt": "2024-12-19T19:47:26Z",
      "updatedAt": "2024-12-19T19:49:15Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "12e205b1e980d6c46921c78283802ae2bbe034ce"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "dragomirtitian"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks1.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks1.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks1.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks2.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks2.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks2.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks3.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks3.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks3.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks4.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks4.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks4.types"
          },
          {
            "path": "tests/cases/compiler/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks1.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks2.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks3.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitOptionalMappedTypePropertyNoStrictNullChecks4.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6F1uaY",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20241219202405650 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/60826",
      "mergedAt": "2024-12-19T20:59:24Z",
      "updatedAt": "2024-12-19T20:59:25Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "56a08250f3516b3f5bc120d6c7ab4450a9a69352"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6F8-QF",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20241220203953707 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/60833",
      "mergedAt": "2025-01-03T02:02:45Z",
      "updatedAt": "2025-01-03T02:02:47Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "21c1a61b49082915f93e3327dad0d73205cf4273"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6GBqrp",
      "title": "Bump the github-actions group across 1 directory with 3 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/60844",
      "mergedAt": "2025-01-06T19:32:54Z",
      "updatedAt": "2025-01-06T19:32:57Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d49b89618058b028a65ba5d9a04886e9d0928840"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6F2oJ-",
      "title": "Fix CodeQL configuration, releases",
      "url": "https://github.com/microsoft/TypeScript/pull/60828",
      "mergedAt": "2025-01-06T20:35:44Z",
      "updatedAt": "2025-01-06T20:37:32Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c0b3ff2da1a5c1480710a81a994659ea706af484"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/codeql/codeql-configuration.yml"
          },
          {
            "path": "azure-pipelines.release.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6G65F2",
      "title": "Narrow types by typeof operands with extra parenthesis",
      "url": "https://github.com/microsoft/TypeScript/pull/60928",
      "mergedAt": "2025-01-07T20:26:00Z",
      "updatedAt": "2025-01-07T20:55:43Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "a5196c7d3bdb9e7e1e4e0268e4a5817d6282aaa7"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/binder.ts"
          },
          {
            "path": "tests/baselines/reference/narrowingTypeofParenthesized1.symbols"
          },
          {
            "path": "tests/baselines/reference/narrowingTypeofParenthesized1.types"
          },
          {
            "path": "tests/cases/compiler/narrowingTypeofParenthesized1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6G4QD1",
      "title": "Fixed BADCLIENT error message",
      "url": "https://github.com/microsoft/TypeScript/pull/60925",
      "mergedAt": "2025-01-07T23:58:37Z",
      "updatedAt": "2025-01-07T23:58:37Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "717d05cc2d528deb51cf7785bdd71891935d19a8"
      },
      "author": {
        "login": "armanio123"
      },
      "assignees": {
        "nodes": [
          {
            "login": "armanio123"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/server/session.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6HIq5a",
      "title": "Fix GHA badge in readme",
      "url": "https://github.com/microsoft/TypeScript/pull/60937",
      "mergedAt": "2025-01-08T23:15:35Z",
      "updatedAt": "2025-01-08T23:15:38Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e1cef5fa3a616bd800fa5e23c2312fc9f951e59f"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "README.md"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FtElA",
      "title": "Write path normalization without array allocations",
      "url": "https://github.com/microsoft/TypeScript/pull/60812",
      "mergedAt": "2025-01-09T19:36:08Z",
      "updatedAt": "2025-02-15T11:06:46Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e9738050cf896a9c08d1d3d911f304513f80b76a"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/path.ts"
          },
          {
            "path": "src/testRunner/unittests/paths.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6HIJC-",
      "title": "Add non-generic fallback overloads for TypedArray constructors",
      "url": "https://github.com/microsoft/TypeScript/pull/60934",
      "mergedAt": "2025-01-09T21:28:50Z",
      "updatedAt": "2025-01-09T22:23:42Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "df54a3d6b49071d59f67f1710cc6aa91aeda6d02"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/es2020.bigint.d.ts"
          },
          {
            "path": "src/lib/es5.d.ts"
          },
          {
            "path": "tests/cases/compiler/typedArrayConstructorOverloads.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FFWmE",
      "title": "Skip `verifyCompilerOptions` when possible on program updates",
      "url": "https://github.com/microsoft/TypeScript/pull/60754",
      "mergedAt": "2025-01-10T01:35:20Z",
      "updatedAt": "2025-01-10T18:15:40Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "cbac1ddfc73ca3b9d8741c1b51b74663a0f24695"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/_namespaces/ts.ts"
          },
          {
            "path": "src/compiler/program.ts"
          },
          {
            "path": "src/compiler/programDiagnostics.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Hd5D_",
      "title": "Bump the github-actions group with 2 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/60963",
      "mergedAt": "2025-01-13T18:42:48Z",
      "updatedAt": "2025-01-13T18:42:50Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "700ee076e515db2ef49d8cf7e4dc4bf70679575c"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6IC0lb",
      "title": "Fix JSDoc for Array#sort, TypedArray#sort and Array#toSorted methods",
      "url": "https://github.com/microsoft/TypeScript/pull/60983",
      "mergedAt": "2025-01-16T23:58:52Z",
      "updatedAt": "2025-01-17T11:25:39Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "7901a397214e8c7b39de8954eecc707dce8cb099"
      },
      "author": {
        "login": "derdelean"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/es2023.array.d.ts"
          },
          {
            "path": "src/lib/es5.d.ts"
          },
          {
            "path": "tests/baselines/reference/completionEntryForUnionMethod.baseline"
          },
          {
            "path": "tests/baselines/reference/goToTypeDefinition_arrayType.baseline.jsonc"
          },
          {
            "path": "tests/lib/lib.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6B-zpu",
      "title": "feat(60475): Add getUnknownType to checker api",
      "url": "https://github.com/microsoft/TypeScript/pull/60502",
      "mergedAt": "2025-01-17T19:57:01Z",
      "updatedAt": "2025-01-17T19:57:01Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "32e8f8b81c84acb929c77cc06929e7e5f59f309a"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FkgLF",
      "title": "fix(60551): satisfies is shown on go-to-implementation",
      "url": "https://github.com/microsoft/TypeScript/pull/60801",
      "mergedAt": "2025-01-17T20:05:26Z",
      "updatedAt": "2025-01-17T20:05:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "f99803d05f3ec8b4b5317359f05a15a17f69dec4"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": [
          {
            "login": "navya9singh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/findAllReferences.ts"
          },
          {
            "path": "tests/baselines/reference/goToImplementation_satisfies.baseline.jsonc"
          },
          {
            "path": "tests/cases/fourslash/goToImplementation_satisfies.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6DkPGJ",
      "title": "fix(60592): JSDoc implements space sensetive",
      "url": "https://github.com/microsoft/TypeScript/pull/60640",
      "mergedAt": "2025-01-17T20:12:13Z",
      "updatedAt": "2025-01-17T20:12:13Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "5170645f4e4b395891fad823bfe03ac628411afb"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/parser.ts"
          },
          {
            "path": "tests/baselines/reference/extendsTag3.js"
          },
          {
            "path": "tests/baselines/reference/extendsTag3.symbols"
          },
          {
            "path": "tests/baselines/reference/extendsTag3.types"
          },
          {
            "path": "tests/baselines/reference/extendsTag6.symbols"
          },
          {
            "path": "tests/baselines/reference/extendsTag6.types"
          },
          {
            "path": "tests/baselines/reference/jsdocImplementsTag.symbols"
          },
          {
            "path": "tests/baselines/reference/jsdocImplementsTag.types"
          },
          {
            "path": "tests/cases/conformance/jsdoc/extendsTag3.ts"
          },
          {
            "path": "tests/cases/conformance/jsdoc/extendsTag6.ts"
          },
          {
            "path": "tests/cases/conformance/jsdoc/jsdocImplementsTag.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Ac1RN",
      "title": "fix(60375): Parameter inlay hint is incorrect when function has a this type",
      "url": "https://github.com/microsoft/TypeScript/pull/60378",
      "mergedAt": "2025-01-17T21:30:35Z",
      "updatedAt": "2025-01-17T21:30:35Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "589f734e5edd1eef8cc69e99f67e418598e24d44"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/inlayHints.ts"
          },
          {
            "path": "tests/baselines/reference/inlayHintsThisParameter.baseline"
          },
          {
            "path": "tests/cases/fourslash/inlayHintsThisParameter.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6C4tT9",
      "title": "fix(60563):@import * as namespace cannot be used with @implements",
      "url": "https://github.com/microsoft/TypeScript/pull/60566",
      "mergedAt": "2025-01-17T22:54:28Z",
      "updatedAt": "2025-01-17T22:54:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "a086a3c42b1fb8177f1a8683b7017a288167e648"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/importTag23.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importTag23.symbols"
          },
          {
            "path": "tests/baselines/reference/importTag23.types"
          },
          {
            "path": "tests/cases/conformance/jsdoc/importTag23.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6H_WYl",
      "title": "Fixed wrong error being reported on required initialized parameters with `isolatedDeclarations`",
      "url": "https://github.com/microsoft/TypeScript/pull/60980",
      "mergedAt": "2025-01-18T06:08:12Z",
      "updatedAt": "2025-01-18T07:07:54Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0745e6a0e00f5e6f000493c7e794ff53935a6664"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/transformers/declarations/diagnostics.ts"
          },
          {
            "path": "tests/baselines/reference/transpile/declarationFunctionDeclarations.d.ts"
          },
          {
            "path": "tests/baselines/reference/transpile/declarationFunctionDeclarations.js"
          },
          {
            "path": "tests/cases/transpile/declarationFunctionDeclarations.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6GfXMt",
      "title": "Fixed \"Delete all unused declarations\" to delete self-referential functions",
      "url": "https://github.com/microsoft/TypeScript/pull/60888",
      "mergedAt": "2025-01-18T06:11:42Z",
      "updatedAt": "2025-01-18T06:11:42Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "8da951cbb629b648753454872df4e1754982aef1"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/fixUnusedIdentifier.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixUnusedIdentifier_all_selfReferencingFunction.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6GsJa4",
      "title": "Fix ESM/CJS resolution cache collision in non-nodenext resolution modes",
      "url": "https://github.com/microsoft/TypeScript/pull/60910",
      "mergedAt": "2025-01-21T19:10:51Z",
      "updatedAt": "2025-01-21T19:10:56Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b78f4668122b9d67d6fc4765b989cdd51694f548"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/moduleNameResolver.ts"
          },
          {
            "path": "src/testRunner/unittests/tsserver/inferredProjects.ts"
          },
          {
            "path": "tests/baselines/reference/resolutionModeCache.errors.txt"
          },
          {
            "path": "tests/baselines/reference/resolutionModeCache.symbols"
          },
          {
            "path": "tests/baselines/reference/resolutionModeCache.trace.json"
          },
          {
            "path": "tests/baselines/reference/resolutionModeCache.types"
          },
          {
            "path": "tests/baselines/reference/tsserver/inferredProjects/closing-file-with-shared-resolutions.js"
          },
          {
            "path": "tests/cases/conformance/moduleResolution/resolutionModeCache.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59u1wb",
      "title": "Add ESNext float16 features and fix TypedArrays of BigInt types",
      "url": "https://github.com/microsoft/TypeScript/pull/60151",
      "mergedAt": "2025-01-22T03:04:15Z",
      "updatedAt": "2025-01-22T08:20:42Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "1c4083f4edc71cb1744a62013732e3c95d05a035"
      },
      "author": {
        "login": "petamoriken"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/lib/es2015.iterable.d.ts"
          },
          {
            "path": "src/lib/es2020.bigint.d.ts"
          },
          {
            "path": "src/lib/es2023.array.d.ts"
          },
          {
            "path": "src/lib/es5.d.ts"
          },
          {
            "path": "src/lib/esnext.d.ts"
          },
          {
            "path": "src/lib/esnext.float16.d.ts"
          },
          {
            "path": "src/lib/esnext.iterator.d.ts"
          },
          {
            "path": "src/lib/libs.json"
          },
          {
            "path": "tests/baselines/reference/builtinIterator.symbols"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse --lib option with extra comma.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse --lib option with trailing white-space.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse invalid option of library flags.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs array to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs array to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert trailing-whitespace string option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert trailing-whitespace string option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/dependentDestructuredVariables.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentDestructuredVariablesFromNestedPatterns.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType1.symbols"
          },
          {
            "path": "tests/baselines/reference/generatorNoImplicitReturns.symbols"
          },
          {
            "path": "tests/baselines/reference/generatorReturnTypeInference.symbols"
          },
          {
            "path": "tests/baselines/reference/generatorReturnTypeInferenceNonStrict.symbols"
          },
          {
            "path": "tests/baselines/reference/goToTypeDefinition_arrayType.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/inferenceOptionalPropertiesToIndexSignatures.symbols"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorsExpressions.symbols"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorsObjects.symbols"
          },
          {
            "path": "tests/baselines/reference/modulePreserve2.trace.json"
          },
          {
            "path": "tests/baselines/reference/modulePreserve3.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNext.trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNextEsm.trace.json"
          },
          {
            "path": "tests/baselines/reference/simpleRecursionWithBaseCase2.symbols"
          },
          {
            "path": "tests/baselines/reference/simpleRecursionWithBaseCase3.symbols"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/does-not-add-color-when-NO_COLOR-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped-when-host-can't-provide-terminal-width.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true-useFsEventsOnParentDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-event-ends-with-tilde.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-occurs-when-file-is-still-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-dynamic-polling-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-watchDirectory-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-watchFile-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders-with-synchronousWatchDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-renaming-a-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-with-outDir-and-declaration-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-fallbackPolling-option.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-watchDirectory-option.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/file-rename-on-wsl2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/does-not-expose-paths.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/recursive-directory-does-not-watch-files-starting-with-dot-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-dynamic-polling-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-non-recursive-watchDirectory-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-watchFile-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/watching-npm-install-in-codespaces-where-workspaces-folder-is-hosted-at-root.js"
          },
          {
            "path": "tests/baselines/reference/typedArrays.types"
          },
          {
            "path": "tests/baselines/reference/typesVersions.ambientModules.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.emptyTypes.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.justIndex.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.ambient.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToSelf.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToUnmapped.trace.json"
          },
          {
            "path": "tests/baselines/reference/uniqueSymbols.symbols"
          },
          {
            "path": "tests/baselines/reference/uniqueSymbolsDeclarations.symbols"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6GTjuH",
      "title": "Treat `BigInt` type references in JSDoc as intended `bigint`s",
      "url": "https://github.com/microsoft/TypeScript/pull/60863",
      "mergedAt": "2025-01-22T16:33:01Z",
      "updatedAt": "2025-01-22T17:28:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ce73b174f16580e2d2f4ef43d7e210a288b2d99a"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/checkJsdocTypeTag8.symbols"
          },
          {
            "path": "tests/baselines/reference/checkJsdocTypeTag8.types"
          },
          {
            "path": "tests/baselines/reference/jsdocTypeTag.js"
          },
          {
            "path": "tests/baselines/reference/jsdocTypeTag.symbols"
          },
          {
            "path": "tests/baselines/reference/jsdocTypeTag.types"
          },
          {
            "path": "tests/cases/conformance/jsdoc/checkJsdocTypeTag8.ts"
          },
          {
            "path": "tests/cases/conformance/jsdoc/jsdocTypeTag.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6IEwmm",
      "title": "DOM update 2025/01/16",
      "url": "https://github.com/microsoft/TypeScript/pull/60987",
      "mergedAt": "2025-01-22T18:36:00Z",
      "updatedAt": "2025-01-22T19:49:13Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b886b48950da9783eed344f1438eea2c24299270"
      },
      "author": {
        "login": "sandersn"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/dom.generated.d.ts"
          },
          {
            "path": "src/lib/dom.iterable.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.iterable.generated.d.ts"
          },
          {
            "path": "tests/baselines/reference/globalThisBlockscopedProperties.types"
          },
          {
            "path": "tests/baselines/reference/implicitAnyInCatch.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.errors.txt"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.types"
          },
          {
            "path": "tests/baselines/reference/verifyDefaultLib_webworker.types"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6HauK5",
      "title": "Fixed an issue with for statement's incrementor missing continue's control flow information",
      "url": "https://github.com/microsoft/TypeScript/pull/60950",
      "mergedAt": "2025-01-22T19:40:58Z",
      "updatedAt": "2025-01-22T21:41:58Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "7f802bbca25634c6bffe316de75771274f1d9b1d"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/binder.ts"
          },
          {
            "path": "tests/baselines/reference/controlFlowForStatementContinueIntoIncrementor1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/controlFlowForStatementContinueIntoIncrementor1.symbols"
          },
          {
            "path": "tests/baselines/reference/controlFlowForStatementContinueIntoIncrementor1.types"
          },
          {
            "path": "tests/cases/compiler/controlFlowForStatementContinueIntoIncrementor1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FdTJ9",
      "title": "Narrow types by satisfies expressions",
      "url": "https://github.com/microsoft/TypeScript/pull/60782",
      "mergedAt": "2025-01-22T21:44:58Z",
      "updatedAt": "2025-01-22T22:13:37Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "efe07a09210bb1d7739874edc8e890bfdff2ed8c"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.errors.txt"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.js"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.symbols"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.types"
          },
          {
            "path": "tests/cases/compiler/inferTypePredicates.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FLYXC",
      "title": "Support `require(esm)` in `--module nodenext`",
      "url": "https://github.com/microsoft/TypeScript/pull/60761",
      "mergedAt": "2025-01-23T00:56:17Z",
      "updatedAt": "2025-03-24T16:51:01Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "5e52b28ee6d54f6637990be6d0dda1e974f78345"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=node18,moduleresolution=bundler).errors.txt"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=node18,moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=node18,moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=bundler).errors.txt"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/cjsErrors(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/cjsErrors(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/cjsErrors(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/cjsErrors(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/declarationFileForTsJsImport(module=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=node18).js"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=node18).types"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=false,module=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=true,module=node18).js"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=true,module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=true,module=node18).types"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=true,module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=true,module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/declarationFilesForNodeNativeModules(allowarbitraryextensions=true,module=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/importAssertionNonstring.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/importAttributes6(module=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension3(module=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/moduleResolutionWithoutExtension4(module=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/nodeAllowJsPackageSelfName(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModules1(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJs1(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsConditionalPackageExports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageExports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackageImports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsPackagePatternExportsTrailers(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesAllowJsSynchronousCallErrors(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCJSEmit1(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCJSEmit1(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCJSEmit1(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesCJSEmit1(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesConditionalPackageExports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitDynamicImportWithPackageExports(module=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/nodeModulesDeclarationEmitWithPackageExports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsDoubleAsterisk(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsDoubleAsterisk(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageExports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExports(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsExclude(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesSynchronousCallErrors(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfName(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodePackageSelfNameScoped(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nonTSExtensions(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/nonTSExtensions(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/packageJsonImportsErrors(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/packageJsonImportsErrors(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/packageJsonImportsErrors(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/packageJsonImportsErrors(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/typeOnlyESMImportFromCJS(module=node18).errors.txt"
          },
          {
            "path": "tests/baselines/reference/typeOnlyESMImportFromCJS(module=node18).js"
          },
          {
            "path": "tests/baselines/reference/typeOnlyESMImportFromCJS(module=node18).symbols"
          },
          {
            "path": "tests/baselines/reference/typeOnlyESMImportFromCJS(module=node18).types"
          },
          {
            "path": "tests/baselines/reference/typeOnlyESMImportFromCJS(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/typeOnlyESMImportFromCJS(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/typeOnlyESMImportFromCJS(module=nodenext).types"
          },
          {
            "path": "tests/cases/conformance/externalModules/moduleResolutionWithoutExtension3.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/moduleResolutionWithoutExtension4.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/cjsErrors.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/nodeModulesTsFiles.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/nonTSExtensions.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/packageJsonImportsErrors.ts"
          },
          {
            "path": "tests/cases/conformance/externalModules/typeOnly/typeOnlyESMImportFromCJS.ts"
          },
          {
            "path": "tests/cases/conformance/importAttributes/importAttributes6.ts"
          },
          {
            "path": "tests/cases/conformance/moduleResolution/bundler/bundlerDirectoryModule.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesCJSEmit1.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesDeclarationEmitDynamicImportWithPackageExports.ts"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesExportsDoubleAsterisk.ts"
          },
          {
            "path": "tests/cases/conformance/nonjsExtensions/declarationFileForTsJsImport.ts"
          },
          {
            "path": "tests/cases/conformance/nonjsExtensions/declarationFilesForNodeNativeModules.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportAllowImportingTsExtensionsPackageJsonImports1.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportCompletionExportListAugmentation1.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportCompletionExportListAugmentation2.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportCompletionExportListAugmentation3.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportCompletionExportListAugmentation4.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportNoPackageJson_nodenext.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportNodeNextJSRequire.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonExportsSpecifierEndsInTs.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsCaseSensitivity.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsConditions.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsLength1.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsLength2.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsPattern.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsPattern_js.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsPattern_js_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsPattern_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsPattern_ts_js.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsPattern_ts_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsPreference1.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsPreference2.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImportsPreference3.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImports_capsInPath1.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImports_capsInPath2.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImports_js.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportPackageJsonImports_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportVerbatimCJS1.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportVerbatimTypeOnly1.ts"
          },
          {
            "path": "tests/cases/fourslash/autoImportsNodeNext1.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixMissingResolutionModeImportAttribute.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsClassMemberImportTypeNodeParameter1.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsClassMemberImportTypeNodeParameter2.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsClassMemberImportTypeNodeParameter3.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsClassMemberImportTypeNodeParameter4.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImportDefaultExportCrash1.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImportDefaultExportCrash2.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImportTypeKeyword.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_promoteTypeOnly6.ts"
          },
          {
            "path": "tests/cases/fourslash/completionsImport_promoteTypeOnly7.ts"
          },
          {
            "path": "tests/cases/fourslash/getOccurrencesNonStringImportAssertion.ts"
          },
          {
            "path": "tests/cases/fourslash/getOccurrencesNonStringImportAttributes.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonExportsSpecifierEndsInTs.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonExportsTrailingSlash1.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsConditions1.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsLength1.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsLength2.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern2.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_capsInPath1.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_capsInPath2.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_js.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_js_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_ts_js.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImportsPattern_ts_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImports_js.ts"
          },
          {
            "path": "tests/cases/fourslash/importCompletionsPackageJsonImports_ts.ts"
          },
          {
            "path": "tests/cases/fourslash/importNameCodeFix_barrelExport5.ts"
          },
          {
            "path": "tests/cases/fourslash/inlayHintsInteractiveMultifileFunctionCalls.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToFile_ctsTomts.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToFile_impossibleImport.ts"
          },
          {
            "path": "tests/cases/fourslash/nodeModulesImportCompletions1.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsCustomConditions.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard1.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard12.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard2.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard3.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard4.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard5.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard6.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard7.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard8.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonExportsWildcard9.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsCustomConditions.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsIgnoreMatchingNodeModule1.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsIgnoreMatchingNodeModule2.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsOnlyFromClosestScope1.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard1.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard12.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard2.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard3.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard4.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard5.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard6.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard7.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard8.ts"
          },
          {
            "path": "tests/cases/fourslash/pathCompletionsPackageJsonImportsWildcard9.ts"
          },
          {
            "path": "tests/cases/fourslash/refactorConvertToEsModule_module_nodenext.ts"
          },
          {
            "path": "tests/cases/fourslash/refactorToReturnTypeWithImportAssertions.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6I0IQ9",
      "title": "Ensure createProgram stops referencing rootNamesOrOptions to ensure oldProgram is GC'd",
      "url": "https://github.com/microsoft/TypeScript/pull/61034",
      "mergedAt": "2025-01-23T23:05:21Z",
      "updatedAt": "2025-01-23T23:05:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "51d9a98c5510aa45870ff85b65e2c4afca4cd5dd"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          },
          {
            "login": "sheetalkamat"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/program.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6G391C",
      "title": "Fix missing failed lookup locations when resolving bare-specifier package.json `\"imports\"`",
      "url": "https://github.com/microsoft/TypeScript/pull/60924",
      "mergedAt": "2025-01-23T23:28:53Z",
      "updatedAt": "2025-01-23T23:28:58Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "329387d76f88713b1818b2489d14214407f7883c"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/moduleNameResolver.ts"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/packageJsonImportsFailedLookups.js"
          },
          {
            "path": "tests/cases/fourslash/server/packageJsonImportsFailedLookups.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Ik99K",
      "title": "`--erasableSyntaxOnly`",
      "url": "https://github.com/microsoft/TypeScript/pull/61011",
      "mergedAt": "2025-01-23T23:56:35Z",
      "updatedAt": "2025-03-06T23:40:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2c865e461e9a55f7a6283acc7aed614832a9b75e"
      },
      "author": {
        "login": "RyanCavanaugh"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Default initialized TSConfig/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with --help/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with --watch/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with advanced options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with boolean value compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with enum value compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with files options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with incorrect compiler option value/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with incorrect compiler option/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with list compiler options with enum value/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with list compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/showConfig/Shows tsconfig for single option/erasableSyntaxOnly/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.errors.txt"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.symbols"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.types"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnlyDeclaration.errors.txt"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnlyDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnlyDeclaration.types"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/cases/compiler/erasableSyntaxOnly.ts"
          },
          {
            "path": "tests/cases/compiler/erasableSyntaxOnlyDeclaration.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6GZ9jv",
      "title": "fix: do not use `JSX.ElementChildrenAttribute` under `jsx: react-jsx` or `jsx: react-jsxdev`",
      "url": "https://github.com/microsoft/TypeScript/pull/60880",
      "mergedAt": "2025-01-24T00:03:08Z",
      "updatedAt": "2025-01-24T01:14:37Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0e371c4bf587e1254e5810d88ae055073b18ab0b"
      },
      "author": {
        "login": "uhyo"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "uhyo"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "iisaduan"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx(jsx=react-jsx).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx(jsx=react-jsx).js"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx(jsx=react-jsx).symbols"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx(jsx=react-jsxdev).errors.txt"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx(jsx=react-jsxdev).js"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx(jsx=react-jsxdev).symbols"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceNoElementChildrenAttributeReactJsx(jsx=react-jsx).js"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceNoElementChildrenAttributeReactJsx(jsx=react-jsx).symbols"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceNoElementChildrenAttributeReactJsx(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceNoElementChildrenAttributeReactJsx(jsx=react-jsxdev).js"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceNoElementChildrenAttributeReactJsx(jsx=react-jsxdev).symbols"
          },
          {
            "path": "tests/baselines/reference/jsxNamespaceNoElementChildrenAttributeReactJsx(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/cases/compiler/jsxNamespaceElementChildrenAttributeIgnoredWhenReactJsx.tsx"
          },
          {
            "path": "tests/cases/compiler/jsxNamespaceNoElementChildrenAttributeReactJsx.tsx"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5-YC-V",
      "title": "Expose method for retrieving inferred generic type arguments for a signature on the TypeChecker (#59637)",
      "url": "https://github.com/microsoft/TypeScript/pull/60201",
      "mergedAt": "2025-01-24T00:43:59Z",
      "updatedAt": "2025-01-24T00:44:00Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "f28c5180dfc928a06abdd309480d31e7c12c8d28"
      },
      "author": {
        "login": "tristanmenzel"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Aj5ox",
      "title": "allow calling `goToDef` on modifiers of named declarations",
      "url": "https://github.com/microsoft/TypeScript/pull/60384",
      "mergedAt": "2025-01-24T01:30:35Z",
      "updatedAt": "2025-01-24T01:30:40Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c5058f0066d77ffa341efb9ae68ee27d37f157fb"
      },
      "author": {
        "login": "iisaduan"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "mjbvz"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "iisaduan"
            }
          },
          {
            "state": "DISMISSED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "mjbvz"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/goToDefinition.ts"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionAwait1.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionAwait3.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionMember.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionModifiers.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionOverriddenMember6.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionOverriddenMember7.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionReturn5.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionYield3.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToDefinitionYield4.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/goToTypeDefinitionModifiers.baseline.jsonc"
          },
          {
            "path": "tests/cases/fourslash/goToDefinitionMember.ts"
          },
          {
            "path": "tests/cases/fourslash/goToDefinitionModifiers.ts"
          },
          {
            "path": "tests/cases/fourslash/goToTypeDefinitionModifiers.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6F2rAA",
      "title": "Add new option \"libReplacement\"",
      "url": "https://github.com/microsoft/TypeScript/pull/60829",
      "mergedAt": "2025-01-24T01:34:52Z",
      "updatedAt": "2025-01-24T01:34:52Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "220706eb0320ff46fad8bf80a5e99db624ee7dfb"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/program.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/testRunner/unittests/helpers/libraryResolution.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Default initialized TSConfig/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with --help/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with --watch/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with advanced options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with boolean value compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with enum value compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with files options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with incorrect compiler option value/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with incorrect compiler option/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with list compiler options with enum value/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with list compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/showConfig/Shows tsconfig for single option/libReplacement/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/libReplacement(libreplacement=false).trace.json"
          },
          {
            "path": "tests/baselines/reference/libReplacement(libreplacement=true).trace.json"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptOverrideSimple.errors.txt"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptOverrideSimple.js"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptOverrideSimple.symbols"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptOverrideSimpleConfig.errors.txt"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptOverrideSimpleConfig.js"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptOverrideSimpleConfig.symbols"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptSubfileResolving.errors.txt"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptSubfileResolving.js"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptSubfileResolving.symbols"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptSubfileResolvingConfig.errors.txt"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptSubfileResolvingConfig.js"
          },
          {
            "path": "tests/baselines/reference/libTypeScriptSubfileResolvingConfig.symbols"
          },
          {
            "path": "tests/baselines/reference/tsbuild/libraryResolution/with-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tsbuildWatch/libraryResolution/with-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/libraryResolution/unknown-lib.js"
          },
          {
            "path": "tests/baselines/reference/tsc/libraryResolution/with-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tsc/libraryResolution/without-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/libraryResolution/unknwon-lib.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/libraryResolution/with-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/libraryResolution/with-config.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/libraryResolution/without-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/libraryResolution/with-config-with-redirection.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/libraryResolution/with-config.js"
          },
          {
            "path": "tests/cases/compiler/libReplacement.ts"
          },
          {
            "path": "tests/cases/compiler/libTypeScriptOverrideSimple.ts"
          },
          {
            "path": "tests/cases/compiler/libTypeScriptOverrideSimpleConfig.ts"
          },
          {
            "path": "tests/cases/compiler/libTypeScriptSubfileResolving.ts"
          },
          {
            "path": "tests/cases/compiler/libTypeScriptSubfileResolvingConfig.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6I2FZ9",
      "title": "Disable broken CodeQL query",
      "url": "https://github.com/microsoft/TypeScript/pull/61040",
      "mergedAt": "2025-01-24T16:20:52Z",
      "updatedAt": "2025-01-24T16:20:56Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d1e2e50ff3e0a7219d561c946996342f9667bd3e"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/codeql/codeql-configuration.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc58lLHq",
      "title": "Computed names in declarations files are resolved even when non-literal, preserve computed names when expressions are entity names",
      "url": "https://github.com/microsoft/TypeScript/pull/60052",
      "mergedAt": "2025-01-24T19:44:54Z",
      "updatedAt": "2025-03-06T14:57:50Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "caf1aee269d1660b4d2a8b555c2d602c97cb28d7"
      },
      "author": {
        "login": "weswigham"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/ES5SymbolProperty1.types"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/capturedParametersInInitializers1.types"
          },
          {
            "path": "tests/baselines/reference/capturedParametersInInitializers2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/checkJsObjectLiteralIndexSignatures.types"
          },
          {
            "path": "tests/baselines/reference/classNonUniqueSymbolMethodHasSymbolIndexer.js"
          },
          {
            "path": "tests/baselines/reference/commaOperatorInConditionalExpression.types"
          },
          {
            "path": "tests/baselines/reference/complicatedPrivacy.errors.txt"
          },
          {
            "path": "tests/baselines/reference/computedPropertiesInDestructuring1.types"
          },
          {
            "path": "tests/baselines/reference/computedPropertiesInDestructuring1_ES6.types"
          },
          {
            "path": "tests/baselines/reference/computedPropertiesNarrowed.errors.txt"
          },
          {
            "path": "tests/baselines/reference/computedPropertiesNarrowed.types"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames12_ES5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames12_ES6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames48_ES5.types"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames48_ES6.types"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames6_ES5.types"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNames6_ES6.types"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNamesOnOverloads_ES5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/computedPropertyNamesOnOverloads_ES6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationEmitAnyComputedPropertyInClass.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitClassMemberWithComputedPropertyName.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitComputedNameWithQuestionToken.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitComputedNameWithQuestionToken.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitComputedNameWithQuestionToken.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitComputedNamesInaccessible.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitComputedNamesInaccessible.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitComputedNamesInaccessible.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitComputedPropertyNameEnum2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationEmitComputedPropertyNameEnum3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/declarationEmitMultipleComputedNamesSameDomain.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitMultipleComputedNamesSameDomain.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitMultipleComputedNamesSameDomain.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitSimpleComputedNames1.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitSimpleComputedNames1.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitSimpleComputedNames1.types"
          },
          {
            "path": "tests/baselines/reference/decoratorsOnComputedProperties.errors.txt"
          },
          {
            "path": "tests/baselines/reference/destructuringObjectBindingPatternAndAssignment8(target=es5).types"
          },
          {
            "path": "tests/baselines/reference/destructuringObjectBindingPatternAndAssignment8(target=esnext).types"
          },
          {
            "path": "tests/baselines/reference/duplicateObjectLiteralProperty_computedNameNegative1.types"
          },
          {
            "path": "tests/baselines/reference/es5-asyncFunctionObjectLiterals.types"
          },
          {
            "path": "tests/baselines/reference/esDecorators-classDeclaration-missingEmitHelpers-staticComputedAutoAccessor.errors.txt"
          },
          {
            "path": "tests/baselines/reference/esDecorators-classDeclaration-missingEmitHelpers-staticComputedField.errors.txt"
          },
          {
            "path": "tests/baselines/reference/esDecorators-classExpression-missingEmitHelpers-classDecorator.16.errors.txt"
          },
          {
            "path": "tests/baselines/reference/indexSignatureMustHaveTypeAnnotation.errors.txt"
          },
          {
            "path": "tests/baselines/reference/indexSignatures1.types"
          },
          {
            "path": "tests/baselines/reference/indexWithoutParamType2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/isolatedDeclarationErrorsClasses.errors.txt"
          },
          {
            "path": "tests/baselines/reference/overloadsWithComputedNames.errors.txt"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=false).js"
          },
          {
            "path": "tests/baselines/reference/overrideDynamicName1(noimplicitoverride=true).js"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=false).js"
          },
          {
            "path": "tests/baselines/reference/overrideLateBindableIndexSignature1(noimplicitoverride=true).js"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName10.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName11.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName13.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName14.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName15.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName18.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName19.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName20.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName21.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName22.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName25.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName28.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName29.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName31.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName32.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName36.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName7.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName8.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserComputedPropertyName9.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5ComputedPropertyName1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5ComputedPropertyName10.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5ComputedPropertyName11.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5ComputedPropertyName5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5ComputedPropertyName7.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5ComputedPropertyName8.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5ComputedPropertyName9.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty8.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserES5SymbolProperty9.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserIndexSignature11.errors.txt"
          },
          {
            "path": "tests/baselines/reference/parserIndexSignature5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/privateIndexer2.types"
          },
          {
            "path": "tests/baselines/reference/propertiesOfGenericConstructorFunctions.types"
          },
          {
            "path": "tests/baselines/reference/propertyAssignment.errors.txt"
          },
          {
            "path": "tests/baselines/reference/spreadInvalidArgumentType.types"
          },
          {
            "path": "tests/baselines/reference/symbolProperty1.types"
          },
          {
            "path": "tests/baselines/reference/symbolProperty2.types"
          },
          {
            "path": "tests/baselines/reference/symbolProperty52.types"
          },
          {
            "path": "tests/baselines/reference/symbolProperty58.types"
          },
          {
            "path": "tests/baselines/reference/symbolProperty59.errors.txt"
          },
          {
            "path": "tests/baselines/reference/transformParenthesizesConditionalSubexpression.types"
          },
          {
            "path": "tests/baselines/reference/tsxEmitSpreadAttribute(target=es2015).types"
          },
          {
            "path": "tests/baselines/reference/tsxEmitSpreadAttribute(target=es2018).types"
          },
          {
            "path": "tests/baselines/reference/tsxEmitSpreadAttribute(target=esnext).types"
          },
          {
            "path": "tests/baselines/reference/tsxReactEmitSpreadAttribute(target=es2015).types"
          },
          {
            "path": "tests/baselines/reference/tsxReactEmitSpreadAttribute(target=es2018).types"
          },
          {
            "path": "tests/baselines/reference/tsxReactEmitSpreadAttribute(target=esnext).types"
          },
          {
            "path": "tests/baselines/reference/typeUsedAsTypeLiteralIndex.errors.txt"
          },
          {
            "path": "tests/baselines/reference/useBeforeDeclaration_propertyAssignment.types"
          },
          {
            "path": "tests/cases/compiler/declarationEmitComputedNameWithQuestionToken.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitComputedNamesInaccessible.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitMultipleComputedNamesSameDomain.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitSimpleComputedNames1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6JBiyJ",
      "title": "Bump the github-actions group with 2 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/61055",
      "mergedAt": "2025-01-27T15:54:45Z",
      "updatedAt": "2025-01-27T15:54:47Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "32ebd28578902d5437e541cf185ea2a32742686d"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6JR6Rr",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250128203517120 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/61067",
      "mergedAt": "2025-01-28T21:07:00Z",
      "updatedAt": "2025-01-28T21:07:02Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "fed7a7f48ef6ce69a604b15a5a76c7525239aa6a"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6JRcK7",
      "title": "Fix error message incorrectly referencing 'asserts' instead of 'assert'.",
      "url": "https://github.com/microsoft/TypeScript/pull/61066",
      "mergedAt": "2025-01-28T22:42:35Z",
      "updatedAt": "2025-01-28T22:42:37Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0652664e6408f7704395fc53fe245e2e77367fe8"
      },
      "author": {
        "login": "DanielRosenwasser"
      },
      "assignees": {
        "nodes": [
          {
            "login": "DanielRosenwasser"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/importAssertionNonstring.errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportAssertions(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit1(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmit2(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/nodeModulesImportModeDeclarationEmitErrors1(module=nodenext).errors.txt"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6JiA3B",
      "title": "Fix accidental ESM-mode directory module lookup in package non-root",
      "url": "https://github.com/microsoft/TypeScript/pull/61082",
      "mergedAt": "2025-01-30T18:17:14Z",
      "updatedAt": "2025-02-28T23:44:35Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "019fec8bf21202e9f7694135a0371c8c444839f6"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/moduleNameResolver.ts"
          },
          {
            "path": "tests/baselines/reference/nodeModulesNoDirectoryModule.errors.txt"
          },
          {
            "path": "tests/cases/conformance/node/nodeModulesNoDirectoryModule.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6JY5iA",
      "title": "DOM update 2025/01/29",
      "url": "https://github.com/microsoft/TypeScript/pull/61073",
      "mergedAt": "2025-01-30T19:39:52Z",
      "updatedAt": "2025-01-30T19:39:56Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "66e1b24831bb8b44a83fb98987cb9a6caec9a98c"
      },
      "author": {
        "login": "sandersn"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/dom.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.generated.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6JiVpo",
      "title": "[moveToFile] Fix symbols with empty `declarations` being treated as importable",
      "url": "https://github.com/microsoft/TypeScript/pull/61084",
      "mergedAt": "2025-01-30T21:49:26Z",
      "updatedAt": "2025-01-30T21:49:31Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "739d729ecce60771c23723aad932ab35a34df82d"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "navya9singh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/refactors/moveToFile.ts"
          },
          {
            "path": "tests/cases/fourslash/moveToFile_undefined.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6JxpCm",
      "title": "Bump the github-actions group with 2 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/61102",
      "mergedAt": "2025-02-03T16:36:45Z",
      "updatedAt": "2025-02-03T16:36:48Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "f511ed42d09b84d00a38309c647e69e82e02284f"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/accept-baselines-fix-lints.yaml"
          },
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/insiders.yaml"
          },
          {
            "path": ".github/workflows/lkg.yml"
          },
          {
            "path": ".github/workflows/new-release-branch.yaml"
          },
          {
            "path": ".github/workflows/nightly.yaml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          },
          {
            "path": ".github/workflows/set-version.yaml"
          },
          {
            "path": ".github/workflows/sync-branch.yaml"
          },
          {
            "path": ".github/workflows/twoslash-repros.yaml"
          },
          {
            "path": ".github/workflows/update-package-lock.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6JkJNd",
      "title": "DOM update MessageEventTarget missed this parameters",
      "url": "https://github.com/microsoft/TypeScript/pull/61086",
      "mergedAt": "2025-02-03T21:32:35Z",
      "updatedAt": "2025-02-03T21:32:35Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c50b5e718aa9acc98e7c786dfa43a68506d798fd"
      },
      "author": {
        "login": "sandersn"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/dom.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.generated.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6KDHJM",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250204202444390 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/61114",
      "mergedAt": "2025-02-04T20:46:49Z",
      "updatedAt": "2025-02-04T20:46:51Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "71716a2868c87248af5020e33a84a2178d41a2d6"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6KXLTe",
      "title": "Revert return type narrowing",
      "url": "https://github.com/microsoft/TypeScript/pull/61136",
      "mergedAt": "2025-02-07T18:55:35Z",
      "updatedAt": "2025-02-07T18:55:36Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c3ae7c418f6163cb7d051c7e153d77c4c4c73769"
      },
      "author": {
        "login": "gabritto"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/conditionalReturnExpression.errors.txt"
          },
          {
            "path": "tests/baselines/reference/conditionalReturnExpression.symbols"
          },
          {
            "path": "tests/baselines/reference/conditionalReturnExpression.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType1.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType1.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType2.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType2.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType3.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType3.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType4.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType4.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType5.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType5.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType5.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType6.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType6.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType8.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType8.types"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType9.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType9.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentReturnType9.types"
          },
          {
            "path": "tests/cases/compiler/conditionalReturnExpression.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType1.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType2.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType3.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType4.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType5.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType6.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType8.ts"
          },
          {
            "path": "tests/cases/compiler/dependentReturnType9.ts"
          },
          {
            "path": "tests/cases/fourslash/returnTypeNarrowingAfterCachingTypes.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6KUqJn",
      "title": "Revert \"Proposed expandable hover API\"",
      "url": "https://github.com/microsoft/TypeScript/pull/61132",
      "mergedAt": "2025-02-07T20:44:02Z",
      "updatedAt": "2025-02-10T17:25:16Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "34ea32f8ce2771fb3b063f66ec0bc7b0c017d9e4"
      },
      "author": {
        "login": "gabritto"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/harness/client.ts"
          },
          {
            "path": "src/harness/fourslashImpl.ts"
          },
          {
            "path": "src/harness/fourslashInterfaceImpl.ts"
          },
          {
            "path": "src/server/protocol.ts"
          },
          {
            "path": "src/server/session.ts"
          },
          {
            "path": "src/services/services.ts"
          },
          {
            "path": "src/services/symbolDisplay.ts"
          },
          {
            "path": "src/services/types.ts"
          },
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosity1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosity2.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityClass1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityInterface1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityIntersection1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityObjectType1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityServer.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityTruncation.baseline"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/quickinfoVerbosityServer.js"
          },
          {
            "path": "tests/cases/fourslash/fourslash.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosity1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosity2.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityClass1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityInterface1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityIntersection1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityObjectType1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityTruncation.ts"
          },
          {
            "path": "tests/cases/fourslash/server/quickinfoVerbosityServer.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6KeEeC",
      "title": "Pass ignoreErrors=true to more resolveEntityName callers",
      "url": "https://github.com/microsoft/TypeScript/pull/61144",
      "mergedAt": "2025-02-10T17:26:52Z",
      "updatedAt": "2025-02-10T17:26:57Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e1629e540ef361167e0c96c8703728a419b6e8e9"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6KkocN",
      "title": "Bump github/codeql-action from 3.28.8 to 3.28.9 in the github-actions group",
      "url": "https://github.com/microsoft/TypeScript/pull/61156",
      "mergedAt": "2025-02-10T17:27:08Z",
      "updatedAt": "2025-02-10T17:27:11Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "775412a81af187e67371cd31719d19ab075b4ef3"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6KkWQo",
      "title": "Fixed `rewriteRelativeImportExtensions` for `import()` within call expressions",
      "url": "https://github.com/microsoft/TypeScript/pull/61154",
      "mergedAt": "2025-02-10T23:02:37Z",
      "updatedAt": "2025-02-10T23:02:37Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "df342b7206cb56b56bb3b3aecbb2ee2d2ff7b217"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/transformers/module/esnextAnd2015.ts"
          },
          {
            "path": "tests/baselines/reference/emit(jsx=preserve).errors.txt"
          },
          {
            "path": "tests/baselines/reference/emit(jsx=preserve).js"
          },
          {
            "path": "tests/baselines/reference/emit(jsx=react).errors.txt"
          },
          {
            "path": "tests/baselines/reference/emit(jsx=react).js"
          },
          {
            "path": "tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/emit.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6K7_IC",
      "title": "Bump esbuild from 0.24.0 to 0.25.0",
      "url": "https://github.com/microsoft/TypeScript/pull/61166",
      "mergedAt": "2025-02-12T17:15:11Z",
      "updatedAt": "2025-02-12T17:15:13Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6af21a4a3df87e1f9d6218de63a3c36bcee870b0"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "package-lock.json"
          },
          {
            "path": "package.json"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6LLNZe",
      "title": "Ban import=require and export= under erasableSyntaxOnly",
      "url": "https://github.com/microsoft/TypeScript/pull/61175",
      "mergedAt": "2025-02-14T20:55:17Z",
      "updatedAt": "2025-02-18T16:41:06Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0f4737e0d55363ac40198b33a80fff0d01c1d8cf"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.errors.txt"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.js"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.symbols"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.types"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnlyDeclaration.errors.txt"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnlyDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnlyDeclaration.types"
          },
          {
            "path": "tests/cases/compiler/erasableSyntaxOnly.ts"
          },
          {
            "path": "tests/cases/compiler/erasableSyntaxOnlyDeclaration.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Ljq8E",
      "title": "Fix mistakenly disallowed default export under erasableSyntaxOnly",
      "url": "https://github.com/microsoft/TypeScript/pull/61210",
      "mergedAt": "2025-02-18T16:06:12Z",
      "updatedAt": "2025-03-04T21:32:55Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c9cb6c3c34aac30e050796bf7b9e452cd6879c27"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.errors.txt"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.js"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.symbols"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.types"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnlyDeclaration.errors.txt"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnlyDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnlyDeclaration.types"
          },
          {
            "path": "tests/cases/compiler/erasableSyntaxOnly.ts"
          },
          {
            "path": "tests/cases/compiler/erasableSyntaxOnlyDeclaration.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6LpPQL",
      "title": "Bump version to 5.9",
      "url": "https://github.com/microsoft/TypeScript/pull/61218",
      "mergedAt": "2025-02-18T19:16:22Z",
      "updatedAt": "2025-05-27T07:19:19Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "246507f7f90e08a330fc9f63c1b11c2e706d9193"
      },
      "author": {
        "login": "DanielRosenwasser"
      },
      "assignees": {
        "nodes": [
          {
            "login": "DanielRosenwasser"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "package-lock.json"
          },
          {
            "path": "package.json"
          },
          {
            "path": "src/compiler/corePublic.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6HlUMg",
      "title": "Update deps, a few majors",
      "url": "https://github.com/microsoft/TypeScript/pull/60967",
      "mergedAt": "2025-02-20T00:54:44Z",
      "updatedAt": "2025-02-20T00:54:50Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "eb25b581149478c299cbc0cf919f644c9e375969"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".dprint.jsonc"
          },
          {
            "path": "Herebyfile.mjs"
          },
          {
            "path": "package-lock.json"
          },
          {
            "path": "package.json"
          },
          {
            "path": "scripts/browserIntegrationTest.mjs"
          },
          {
            "path": "scripts/build/tests.mjs"
          },
          {
            "path": "scripts/build/utils.mjs"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5i-ZW2",
      "title": "Treat contextually typed functions in JS files as typed",
      "url": "https://github.com/microsoft/TypeScript/pull/56907",
      "mergedAt": "2025-02-20T00:58:32Z",
      "updatedAt": "2025-02-20T00:58:33Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "71b16ea186cc48a9af398fe91589cc07d9b1d96f"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/checkJsdocSatisfiesTag15.errors.txt"
          },
          {
            "path": "tests/baselines/reference/checkJsdocSatisfiesTag15.js"
          },
          {
            "path": "tests/baselines/reference/checkJsdocSatisfiesTag15.symbols"
          },
          {
            "path": "tests/baselines/reference/checkJsdocSatisfiesTag15.types"
          },
          {
            "path": "tests/cases/conformance/jsdoc/checkJsdocSatisfiesTag15.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6L0BY2",
      "title": "Fix quick fix for isolatedDeclarations to keep trailing unknown in generics",
      "url": "https://github.com/microsoft/TypeScript/pull/61227",
      "mergedAt": "2025-02-20T01:28:50Z",
      "updatedAt": "2025-02-20T01:28:50Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3f416e0f527e8967ac2bd490dffe76034db57a26"
      },
      "author": {
        "login": "blickly"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "blickly"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/codefixes/helpers.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixMissingTypeAnnotationOnExports57-generics-doesnt-drop-trailing-unknown.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixMissingTypeAnnotationOnExports58-genercs-doesnt-drop-trailing-unknown-2.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixMissingTypeAnnotationOnExports59-drops-unneeded-after-unknown.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixMissingTypeAnnotationOnExports60-drops-unneeded-non-trailing-unknown.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc555Gf2",
      "title": "Remove redundant `getStringLiteralType` call",
      "url": "https://github.com/microsoft/TypeScript/pull/59803",
      "mergedAt": "2025-02-20T18:48:09Z",
      "updatedAt": "2025-02-20T18:48:09Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d8f6aa7c1f5796ab8d3b0a060d26f5497453e247"
      },
      "author": {
        "login": "MichalMarsalek"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6LWSWy",
      "title": "Fixed JSDoc checking on enum members",
      "url": "https://github.com/microsoft/TypeScript/pull/61184",
      "mergedAt": "2025-02-20T18:48:34Z",
      "updatedAt": "2025-02-20T18:48:34Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "5695986fbdf5f69b25793be4476cff60ab87b6a7"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/jsdocLinkTag9.symbols"
          },
          {
            "path": "tests/baselines/reference/jsdocLinkTag9.types"
          },
          {
            "path": "tests/cases/conformance/jsdoc/jsdocLinkTag9.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc50krDu",
      "title": "Fix of #58996",
      "url": "https://github.com/microsoft/TypeScript/pull/59155",
      "mergedAt": "2025-02-20T19:41:32Z",
      "updatedAt": "2025-02-20T19:41:32Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "12c232333b3c3a2e4827d7360bff339b415d7a8e"
      },
      "author": {
        "login": "MichalMarsalek"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.errors.txt"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.js"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.symbols"
          },
          {
            "path": "tests/baselines/reference/inferTypePredicates.types"
          },
          {
            "path": "tests/cases/compiler/inferTypePredicates.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Hffz3",
      "title": "Infer from annotated return type nodes before assigning contextual parameter types",
      "url": "https://github.com/microsoft/TypeScript/pull/60964",
      "mergedAt": "2025-02-20T20:06:50Z",
      "updatedAt": "2025-02-22T08:35:01Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0d016920e6ce97722f82de7dcabfd92e69fea7cd"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/inferFromAnnotatedReturn1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/inferFromAnnotatedReturn1.symbols"
          },
          {
            "path": "tests/baselines/reference/inferFromAnnotatedReturn1.types"
          },
          {
            "path": "tests/cases/compiler/inferFromAnnotatedReturn1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5_E2cX",
      "title": "Provide string completions for `in` keyword checks",
      "url": "https://github.com/microsoft/TypeScript/pull/60272",
      "mergedAt": "2025-02-20T22:01:52Z",
      "updatedAt": "2025-02-21T11:58:59Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b95187d1ce2368a93a51b31c0cd11f5ba2557627"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/stringCompletions.ts"
          },
          {
            "path": "tests/cases/fourslash/completionInChecks1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6L3uHf",
      "title": "Find method references through base abstract classes implementing an interface",
      "url": "https://github.com/microsoft/TypeScript/pull/61234",
      "mergedAt": "2025-02-21T19:08:34Z",
      "updatedAt": "2025-02-21T19:08:35Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "edc497bb2bf9ceccfdbfea59b42f9ae565ffa1cb"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/findAllReferences.ts"
          },
          {
            "path": "tests/baselines/reference/referencesForInheritedProperties10.baseline.jsonc"
          },
          {
            "path": "tests/cases/fourslash/referencesForInheritedProperties10.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc535ovW",
      "title": "Account for right operands & fix a weird error message for leftmost nullish literals in checkNullishCoalesceOperands",
      "url": "https://github.com/microsoft/TypeScript/pull/59569",
      "mergedAt": "2025-02-21T22:17:09Z",
      "updatedAt": "2025-02-21T22:17:10Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2bed7feee877fd7a6fdba1acdb642d016c3471e8"
      },
      "author": {
        "login": "ChiriVulpes"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.errors.txt"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.js"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.symbols"
          },
          {
            "path": "tests/baselines/reference/predicateSemantics.types"
          },
          {
            "path": "tests/cases/compiler/predicateSemantics.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6LBp--",
      "title": "fix(61167): Incorrect \"Import may be converted to a default import\" autofix for import export",
      "url": "https://github.com/microsoft/TypeScript/pull/61171",
      "mergedAt": "2025-02-21T23:23:22Z",
      "updatedAt": "2025-02-21T23:23:22Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "1cd8e20f947513cc8c0c7c59e55b2f4524eff316"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/suggestionDiagnostics.ts"
          },
          {
            "path": "tests/cases/fourslash/codeFixUseDefaultImport.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6MN6uw",
      "title": "Bump the github-actions group with 4 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/61257",
      "mergedAt": "2025-02-24T17:05:10Z",
      "updatedAt": "2025-02-24T17:05:14Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b8b7a38ee9c34490fa3f764a7d37ce386cc720a5"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc54qTYU",
      "title": "make exported destructured discriminated union narrowing work",
      "url": "https://github.com/microsoft/TypeScript/pull/59673",
      "mergedAt": "2025-02-24T18:29:01Z",
      "updatedAt": "2025-02-24T18:29:01Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "244303f92f6cda9c5c30a5425210b7d00d31d958"
      },
      "author": {
        "login": "MichalMarsalek"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "MichalMarsalek"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "MichalMarsalek"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/dependentDestructuredVariablesWithExport.symbols"
          },
          {
            "path": "tests/baselines/reference/dependentDestructuredVariablesWithExport.types"
          },
          {
            "path": "tests/cases/conformance/controlFlow/dependentDestructuredVariablesWithExport.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc59utOH",
      "title": "Fix to use string literal type in ArrayBuffer's `Symbol.toStringTag`",
      "url": "https://github.com/microsoft/TypeScript/pull/60150",
      "mergedAt": "2025-02-24T19:17:35Z",
      "updatedAt": "2025-02-27T18:25:09Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "8ae98d02d812f077cf77b4b21a2b256c6ee7ef2f"
      },
      "author": {
        "login": "petamoriken"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "petamoriken"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/harness/vfsUtil.ts"
          },
          {
            "path": "src/lib/es2015.symbol.wellknown.d.ts"
          },
          {
            "path": "tests/baselines/reference/assignSharedArrayBufferToArrayBuffer.errors.txt"
          },
          {
            "path": "tests/baselines/reference/assignSharedArrayBufferToArrayBuffer.js"
          },
          {
            "path": "tests/baselines/reference/assignSharedArrayBufferToArrayBuffer.symbols"
          },
          {
            "path": "tests/baselines/reference/assignSharedArrayBufferToArrayBuffer.types"
          },
          {
            "path": "tests/cases/conformance/es2017/assignSharedArrayBufferToArrayBuffer.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Giqs_",
      "title": "fix(60887): Incorrect Formatting on if (a) try {} finally {} ",
      "url": "https://github.com/microsoft/TypeScript/pull/60898",
      "mergedAt": "2025-02-24T19:51:29Z",
      "updatedAt": "2025-02-24T19:51:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2c3be449ff2e883d67135cbe889db982f66a224c"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/formatting/smartIndenter.ts"
          },
          {
            "path": "tests/cases/fourslash/formatTryFinally.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6LTbk5",
      "title": "Don't widen unique symbols annotated by effective type nodes in JS files",
      "url": "https://github.com/microsoft/TypeScript/pull/61180",
      "mergedAt": "2025-02-24T19:53:10Z",
      "updatedAt": "2025-02-24T23:21:02Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "7507b055dea43e65b9b2ad458ef3ae1a6c706261"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/uniqueSymbolJs2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/uniqueSymbolJs2.js"
          },
          {
            "path": "tests/baselines/reference/uniqueSymbolJs2.symbols"
          },
          {
            "path": "tests/baselines/reference/uniqueSymbolJs2.types"
          },
          {
            "path": "tests/cases/compiler/uniqueSymbolJs2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Mh3T0",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250225202237529 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/61269",
      "mergedAt": "2025-02-25T22:39:49Z",
      "updatedAt": "2025-02-25T22:39:51Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "afc463980f55d634c56dfedc6852f6f46f596621"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6MTrWf",
      "title": "Fixed accidentally reused comments between files in the emitter",
      "url": "https://github.com/microsoft/TypeScript/pull/61261",
      "mergedAt": "2025-02-26T20:48:59Z",
      "updatedAt": "2025-02-26T20:51:00Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b97eafbf3b64fd3110f75a4164a8fb07cebfff5e"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "DISMISSED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/expressionToTypeNode.ts"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoInvalidCommentReuse1.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoInvalidCommentReuse1.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoInvalidCommentReuse1.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoInvalidCommentReuse2.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoInvalidCommentReuse2.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoInvalidCommentReuse2.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoInvalidCommentReuse3.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoInvalidCommentReuse3.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitNoInvalidCommentReuse3.types"
          },
          {
            "path": "tests/cases/compiler/declarationEmitNoInvalidCommentReuse1.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitNoInvalidCommentReuse2.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitNoInvalidCommentReuse3.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Miuzu",
      "title": "lib.es2017: Move `SharedArrayBuffer[Symbol.species]` onto constructor interface",
      "url": "https://github.com/microsoft/TypeScript/pull/61271",
      "mergedAt": "2025-02-26T21:47:50Z",
      "updatedAt": "2025-02-26T22:15:40Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6121f45347685e9341d2e61730fbdd5a0b5cbf16"
      },
      "author": {
        "login": "Renegade334"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "rbuckton"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/es2017.sharedmemory.d.ts"
          },
          {
            "path": "tests/baselines/reference/useSharedArrayBuffer4.js"
          },
          {
            "path": "tests/baselines/reference/useSharedArrayBuffer4.symbols"
          },
          {
            "path": "tests/baselines/reference/useSharedArrayBuffer4.types"
          },
          {
            "path": "tests/baselines/reference/useSharedArrayBuffer5.js"
          },
          {
            "path": "tests/baselines/reference/useSharedArrayBuffer5.symbols"
          },
          {
            "path": "tests/baselines/reference/useSharedArrayBuffer5.types"
          },
          {
            "path": "tests/cases/conformance/es2017/useSharedArrayBuffer4.ts"
          },
          {
            "path": "tests/cases/conformance/es2017/useSharedArrayBuffer5.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6M2s7K",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250227204102665 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/61315",
      "mergedAt": "2025-02-27T20:58:31Z",
      "updatedAt": "2025-02-27T20:58:32Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "011f7e4ee5a102483f7e3397814bea185f4111a1"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6MGJ4f",
      "title": "Ban old-style type assertions under erasableSyntaxOnly",
      "url": "https://github.com/microsoft/TypeScript/pull/61244",
      "mergedAt": "2025-02-28T19:10:43Z",
      "updatedAt": "2025-03-19T21:40:30Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "15392346d05045742e653eab5c87538ff2a3c863"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.errors.txt"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.js"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.symbols"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly.types"
          },
          {
            "path": "tests/cases/compiler/erasableSyntaxOnly.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6NFKvA",
      "title": "Bump the github-actions group with 2 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/61333",
      "mergedAt": "2025-03-03T17:46:35Z",
      "updatedAt": "2025-03-03T17:46:38Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "47442d958c4d906b75050a27be4570bb6018713e"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/ci.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6NM_Gr",
      "title": "Rename type parameters when they are shadowed.",
      "url": "https://github.com/microsoft/TypeScript/pull/61342",
      "mergedAt": "2025-03-04T19:34:33Z",
      "updatedAt": "2025-03-04T19:36:37Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c85e626d8e17427a6865521737b45ccbbe9c78ef"
      },
      "author": {
        "login": "dragomirtitian"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/expressionToTypeNode.ts"
          },
          {
            "path": "tests/baselines/reference/declarationEmitShadowing.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitShadowing.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitShadowing.types"
          },
          {
            "path": "tests/cases/compiler/declarationEmitShadowing.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6NsLKD",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250306202248269 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/61368",
      "mergedAt": "2025-03-06T20:41:55Z",
      "updatedAt": "2025-03-06T20:41:56Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "1efdcd9ff7d6566cf9bf10975b6fc8ffb0b53c9b"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6N6swQ",
      "title": "Bump github/codeql-action from 3.28.10 to 3.28.11 in the github-actions group",
      "url": "https://github.com/microsoft/TypeScript/pull/61387",
      "mergedAt": "2025-03-10T16:17:17Z",
      "updatedAt": "2025-03-10T16:17:19Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0aac72020ee8414218273f654eb7ce1dc2dd0d6b"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6OBCRF",
      "title": "Fix serialization of accessor types in declaration files.",
      "url": "https://github.com/microsoft/TypeScript/pull/61392",
      "mergedAt": "2025-03-14T19:36:08Z",
      "updatedAt": "2025-03-14T19:38:50Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "a00b324ab2e9a303e8b2d94f3e0b2f3aa4975a5c"
      },
      "author": {
        "login": "dragomirtitian"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/expressionToTypeNode.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/declarationEmitGenericTypeParamerSerialization.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitGenericTypeParamerSerialization.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitGenericTypeParamerSerialization.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitGenericTypeParamerSerialization2.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitGenericTypeParamerSerialization2.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitGenericTypeParamerSerialization2.types"
          },
          {
            "path": "tests/baselines/reference/discriminateWithDivergentAccessors1.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.types"
          },
          {
            "path": "tests/baselines/reference/objectLiteralShorthandPropertiesErrorFromNotUsingIdentifier.types"
          },
          {
            "path": "tests/cases/compiler/declarationEmitGenericTypeParamerSerialization.ts"
          },
          {
            "path": "tests/cases/compiler/declarationEmitGenericTypeParamerSerialization2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6G0vFS",
      "title": "fix(60908): Unexpected \"'Type' is declared but its value is never read.\" error with jsdoc @import syntax",
      "url": "https://github.com/microsoft/TypeScript/pull/60921",
      "mergedAt": "2025-03-17T20:29:48Z",
      "updatedAt": "2025-03-17T20:50:49Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ee3dd7264b23e58bbad86d08a475cac78f330abf"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/binder.ts"
          },
          {
            "path": "tests/baselines/reference/importTag24.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importTag24.symbols"
          },
          {
            "path": "tests/baselines/reference/importTag24.types"
          },
          {
            "path": "tests/baselines/reference/importTag25.symbols"
          },
          {
            "path": "tests/baselines/reference/importTag25.types"
          },
          {
            "path": "tests/cases/conformance/jsdoc/importTag24.ts"
          },
          {
            "path": "tests/cases/conformance/jsdoc/importTag25.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6PW12p",
      "title": "Fix errors on type assertions in erasableSyntaxOnly",
      "url": "https://github.com/microsoft/TypeScript/pull/61452",
      "mergedAt": "2025-03-19T23:25:22Z",
      "updatedAt": "2025-03-19T23:25:25Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "4dc677b292354f4b9162452b2e00f4d7dd118221"
      },
      "author": {
        "login": "DanielRosenwasser"
      },
      "assignees": {
        "nodes": [
          {
            "login": "DanielRosenwasser"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly2.js"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly2.symbols"
          },
          {
            "path": "tests/baselines/reference/erasableSyntaxOnly2.types"
          },
          {
            "path": "tests/cases/compiler/erasableSyntaxOnly2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6PyV1r",
      "title": "Bump the github-actions group with 4 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/61474",
      "mergedAt": "2025-03-24T11:23:27Z",
      "updatedAt": "2025-03-24T11:23:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "19b777260b26aac5707b1efd34202054164d4a9d"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/accept-baselines-fix-lints.yaml"
          },
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/insiders.yaml"
          },
          {
            "path": ".github/workflows/lkg.yml"
          },
          {
            "path": ".github/workflows/new-release-branch.yaml"
          },
          {
            "path": ".github/workflows/nightly.yaml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          },
          {
            "path": ".github/workflows/set-version.yaml"
          },
          {
            "path": ".github/workflows/sync-branch.yaml"
          },
          {
            "path": ".github/workflows/twoslash-repros.yaml"
          },
          {
            "path": ".github/workflows/update-package-lock.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6P8dFA",
      "title": "Fix `lib.includes('dom')` check in `containerSeemsToBeEmptyDomElement`",
      "url": "https://github.com/microsoft/TypeScript/pull/61481",
      "mergedAt": "2025-03-25T23:24:53Z",
      "updatedAt": "2025-03-25T23:24:53Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "29e6d6689dfb422e4f1395546c1917d07e1f664d"
      },
      "author": {
        "login": "frodi-karlsson"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "MartinJohns"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/missingDomElement_UsingDomLib.errors.txt"
          },
          {
            "path": "tests/baselines/reference/missingDomElement_UsingDomLib.js"
          },
          {
            "path": "tests/baselines/reference/missingDomElement_UsingDomLib.symbols"
          },
          {
            "path": "tests/baselines/reference/missingDomElement_UsingDomLib.types"
          },
          {
            "path": "tests/cases/compiler/missingDomElement_UsingDomLib.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6QP90E",
      "title": "Add new release publisher yaml",
      "url": "https://github.com/microsoft/TypeScript/pull/61491",
      "mergedAt": "2025-03-31T23:10:52Z",
      "updatedAt": "2025-03-31T23:10:56Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "c7a559eeae535724724ff7dac4e698129649be6c"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "DISMISSED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "azure-pipelines.release-publish.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Q2EwT",
      "title": "Fix incorrect name in new release pipeline",
      "url": "https://github.com/microsoft/TypeScript/pull/61514",
      "mergedAt": "2025-03-31T23:19:05Z",
      "updatedAt": "2025-03-31T23:19:09Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "7b26d2eba5626e15b9e85e8c3adff1e1c0583c6f"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "azure-pipelines.release-publish.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5YkT3c",
      "title": "Fixed a symbol display crash on expando members write locations",
      "url": "https://github.com/microsoft/TypeScript/pull/55478",
      "mergedAt": "2025-04-01T20:40:59Z",
      "updatedAt": "2025-04-01T21:18:14Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "89c572ca0cbed845e374c29ce3a9ef28715160be"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/symbolDisplay.ts"
          },
          {
            "path": "tests/cases/fourslash/quickInfoOnExpandoLikePropertyWithSetterDeclarationJs1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickInfoOnExpandoLikePropertyWithSetterDeclarationJs2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6QtfRR",
      "title": "Bump github/codeql-action from 3.28.12 to 3.28.13 in the github-actions group",
      "url": "https://github.com/microsoft/TypeScript/pull/61509",
      "mergedAt": "2025-04-01T20:54:16Z",
      "updatedAt": "2025-04-01T20:54:18Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "7205eda454ce8ac7313699bd5905ed3f689142bf"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5Jx5-8",
      "title": "Exclude completions of binding pattern variable initializers",
      "url": "https://github.com/microsoft/TypeScript/pull/52723",
      "mergedAt": "2025-04-02T20:47:43Z",
      "updatedAt": "2025-04-03T05:05:41Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ba663f6ac25ec7774b38a3fad04fe8ea016f9420"
      },
      "author": {
        "login": "zardoy"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/completions.ts"
          },
          {
            "path": "tests/cases/fourslash/completionListWithoutVariableinitializer.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6RKi5M",
      "title": "Convert release publishing inputs into parameters",
      "url": "https://github.com/microsoft/TypeScript/pull/61523",
      "mergedAt": "2025-04-04T19:22:19Z",
      "updatedAt": "2025-04-04T19:22:21Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "83dc0bb2ed91fe0815ab28dc3ff95fae7425e413"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "DISMISSED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "DISMISSED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "DanielRosenwasser"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "azure-pipelines.release-publish.yml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6LS3pA",
      "title": "Treat functions with `@type` tags on parameters as typed in JS files",
      "url": "https://github.com/microsoft/TypeScript/pull/61177",
      "mergedAt": "2025-04-14T22:35:21Z",
      "updatedAt": "2025-04-14T22:35:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "eef7c14ef163696d5ea85275ea122e28fb4eeab7"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sandersn"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/jsdocTypeTagOnParameter1.symbols"
          },
          {
            "path": "tests/baselines/reference/jsdocTypeTagOnParameter1.types"
          },
          {
            "path": "tests/cases/conformance/jsdoc/jsdocTypeTagOnParameter1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6QSuE8",
      "title": "Expandable hover",
      "url": "https://github.com/microsoft/TypeScript/pull/61492",
      "mergedAt": "2025-04-15T19:14:38Z",
      "updatedAt": "2025-04-18T23:15:39Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "069de743dbd17b47cc2fc58e1d16da5410911284"
      },
      "author": {
        "login": "gabritto"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "gabritto"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/emitter.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/harness/client.ts"
          },
          {
            "path": "src/harness/fourslashImpl.ts"
          },
          {
            "path": "src/harness/fourslashInterfaceImpl.ts"
          },
          {
            "path": "src/server/protocol.ts"
          },
          {
            "path": "src/server/session.ts"
          },
          {
            "path": "src/services/services.ts"
          },
          {
            "path": "src/services/symbolDisplay.ts"
          },
          {
            "path": "src/services/types.ts"
          },
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosity1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosity2.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosity3.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityClass1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityClass2.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityConditionalType.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityEnum.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityFunction.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityImport.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityIndexSignature.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityIndexType.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityIndexedAccessType.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityInterface1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityInterface2.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityIntersection1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityJs.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityLibType.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityMappedType.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityNamespace.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityObjectType1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityRecursiveType.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityServer.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityToplevelTruncation.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityTruncation.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityTuple.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityTypeParameter.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityTypeof.baseline"
          },
          {
            "path": "tests/baselines/reference/tsserver/fourslashServer/quickinfoVerbosityServer.js"
          },
          {
            "path": "tests/cases/fourslash/fourslash.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosity1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosity2.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosity3.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityClass1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityClass2.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityConditionalType.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityEnum.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityFunction.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityImport.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityIndexSignature.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityIndexType.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityIndexedAccessType.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityInterface1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityInterface2.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityIntersection1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityJs.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityLibType.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityMappedType.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityNamespace.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityObjectType1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityRecursiveType.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityToplevelTruncation.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityTruncation.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityTuple.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityTypeParameter.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityTypeof.ts"
          },
          {
            "path": "tests/cases/fourslash/server/quickinfoVerbosityServer.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6StDeg",
      "title": "Fix crash when serializing default export in error",
      "url": "https://github.com/microsoft/TypeScript/pull/61582",
      "mergedAt": "2025-04-16T16:43:33Z",
      "updatedAt": "2025-04-24T20:47:15Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "6afd0fb73fa18a48021ed54f44a0c51794519bf6"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "boneskull"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/exportAssignmentExpressionIsExpressionNode.errors.txt"
          },
          {
            "path": "tests/cases/compiler/exportAssignmentExpressionIsExpressionNode.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6S24xe",
      "title": "Deemphasize old JSX transform",
      "url": "https://github.com/microsoft/TypeScript/pull/61586",
      "mergedAt": "2025-04-17T18:02:56Z",
      "updatedAt": "2025-04-19T15:51:15Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0a1aa6d6ebdfa16b82f4a6aaf282089b1d484e05"
      },
      "author": {
        "login": "eps1lon"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse empty options of --jsx.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of jsx to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of jsx to compiler-options with jsonSourceFile api.js"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6TPdGZ",
      "title": "Bump the github-actions group across 1 directory with 3 updates",
      "url": "https://github.com/microsoft/TypeScript/pull/61601",
      "mergedAt": "2025-04-21T17:15:39Z",
      "updatedAt": "2025-04-21T17:15:41Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "62b172b515452b3fe19f4f2da81d4869caedc904"
      },
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/workflows/accept-baselines-fix-lints.yaml"
          },
          {
            "path": ".github/workflows/ci.yml"
          },
          {
            "path": ".github/workflows/codeql.yml"
          },
          {
            "path": ".github/workflows/insiders.yaml"
          },
          {
            "path": ".github/workflows/lkg.yml"
          },
          {
            "path": ".github/workflows/new-release-branch.yaml"
          },
          {
            "path": ".github/workflows/nightly.yaml"
          },
          {
            "path": ".github/workflows/release-branch-artifact.yaml"
          },
          {
            "path": ".github/workflows/scorecard.yml"
          },
          {
            "path": ".github/workflows/set-version.yaml"
          },
          {
            "path": ".github/workflows/sync-branch.yaml"
          },
          {
            "path": ".github/workflows/twoslash-repros.yaml"
          },
          {
            "path": ".github/workflows/update-package-lock.yaml"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6KC_ec",
      "title": "Fix #61098",
      "url": "https://github.com/microsoft/TypeScript/pull/61113",
      "mergedAt": "2025-04-24T20:55:56Z",
      "updatedAt": "2025-05-02T20:28:47Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "75202af2ccb8c797180f42f3317373ddc5793ad9"
      },
      "author": {
        "login": "HansBrende"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "HansBrende"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/assignmentToConditionalBrandedStringTemplateOrMapping.js"
          },
          {
            "path": "tests/baselines/reference/assignmentToConditionalBrandedStringTemplateOrMapping.symbols"
          },
          {
            "path": "tests/baselines/reference/assignmentToConditionalBrandedStringTemplateOrMapping.types"
          },
          {
            "path": "tests/cases/compiler/assignmentToConditionalBrandedStringTemplateOrMapping.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6SDpHe",
      "title": "Add the `.getNonPrimitiveType()` method to the `TypeChecker`",
      "url": "https://github.com/microsoft/TypeScript/pull/61562",
      "mergedAt": "2025-04-24T21:08:52Z",
      "updatedAt": "2025-04-24T21:08:52Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "38b78b70d291dc788569d2a58a5a52a7d479476d"
      },
      "author": {
        "login": "mrazauskas"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6MWuAC",
      "title": "fix(61258): Renaming namespace with const enum doesn't update enum references",
      "url": "https://github.com/microsoft/TypeScript/pull/61263",
      "mergedAt": "2025-04-24T21:35:05Z",
      "updatedAt": "2025-04-24T21:35:05Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "11e79327598db412a161616849041487673fadab"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/services/findAllReferences.ts"
          },
          {
            "path": "tests/baselines/reference/findAllRefs_importType_exportEquals.baseline.jsonc"
          },
          {
            "path": "tests/baselines/reference/renameNamespace.baseline.jsonc"
          },
          {
            "path": "tests/cases/fourslash/renameNamespace.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc40FViv",
      "title": "`arguments` should not be allowed in class static block",
      "url": "https://github.com/microsoft/TypeScript/pull/48172",
      "mergedAt": "2025-05-02T13:38:34Z",
      "updatedAt": "2025-05-02T13:49:12Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "e37ca49c70e683187000352b03da1ee8e24e7655"
      },
      "author": {
        "login": "Zzzen"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Zzzen"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Zzzen"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/argumentsUsedInClassFieldInitializerOrStaticInitializationBlock.errors.txt"
          },
          {
            "path": "tests/baselines/reference/argumentsUsedInClassFieldInitializerOrStaticInitializationBlock.js"
          },
          {
            "path": "tests/baselines/reference/argumentsUsedInClassFieldInitializerOrStaticInitializationBlock.symbols"
          },
          {
            "path": "tests/baselines/reference/argumentsUsedInClassFieldInitializerOrStaticInitializationBlock.types"
          },
          {
            "path": "tests/baselines/reference/classStaticBlock6.errors.txt"
          },
          {
            "path": "tests/baselines/reference/classStaticBlock6.js"
          },
          {
            "path": "tests/baselines/reference/classStaticBlock6.symbols"
          },
          {
            "path": "tests/baselines/reference/classStaticBlock6.types"
          },
          {
            "path": "tests/cases/compiler/argumentsUsedInClassFieldInitializerOrStaticInitializationBlock.ts"
          },
          {
            "path": "tests/cases/conformance/classes/classStaticBlock/classStaticBlock6.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc49dXYg",
      "title": "check usage before declaration for decorators",
      "url": "https://github.com/microsoft/TypeScript/pull/50372",
      "mergedAt": "2025-05-02T21:01:09Z",
      "updatedAt": "2025-05-03T00:09:55Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "5e367783305736672ffa3d17097a62ead1db3039"
      },
      "author": {
        "login": "Zzzen"
      },
      "assignees": {
        "nodes": [
          {
            "login": "navya9singh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Zzzen"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "gabritto"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/blockScopedVariablesUseBeforeDef.errors.txt"
          },
          {
            "path": "tests/baselines/reference/blockScopedVariablesUseBeforeDef.js"
          },
          {
            "path": "tests/baselines/reference/blockScopedVariablesUseBeforeDef.symbols"
          },
          {
            "path": "tests/baselines/reference/blockScopedVariablesUseBeforeDef.types"
          },
          {
            "path": "tests/baselines/reference/decoratorUsedBeforeDeclaration.errors.txt"
          },
          {
            "path": "tests/baselines/reference/decoratorUsedBeforeDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/decoratorUsedBeforeDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/decoratorUsedBeforeDeclaration.types"
          },
          {
            "path": "tests/cases/compiler/blockScopedVariablesUseBeforeDef.ts"
          },
          {
            "path": "tests/cases/compiler/decoratorUsedBeforeDeclaration.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6TOohI",
      "title": "docs(lib): add @throws JSDoc for JSON methods",
      "url": "https://github.com/microsoft/TypeScript/pull/61596",
      "mergedAt": "2025-05-02T22:20:58Z",
      "updatedAt": "2025-05-07T22:02:00Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "d88d3a46810bfae0b072beb023a2b09b8026b82c"
      },
      "author": {
        "login": "Joseph-Martre"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/es5.d.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6UyR--",
      "title": "DOM Update 2025-05-02",
      "url": "https://github.com/microsoft/TypeScript/pull/61647",
      "mergedAt": "2025-05-07T22:02:49Z",
      "updatedAt": "2025-05-07T22:02:51Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "8c62e08448e0ec76203bd519dd39608dbcb31705"
      },
      "author": {
        "login": "rbuckton"
      },
      "assignees": {
        "nodes": [
          {
            "login": "rbuckton"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/lib/dom.generated.d.ts"
          },
          {
            "path": "src/lib/dom.iterable.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.generated.d.ts"
          },
          {
            "path": "src/lib/webworker.iterable.generated.d.ts"
          },
          {
            "path": "tests/baselines/reference/globalThisBlockscopedProperties.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.errors.txt"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.types"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6U-t_1",
      "title": "Add configurable maximum hover length",
      "url": "https://github.com/microsoft/TypeScript/pull/61662",
      "mergedAt": "2025-05-09T20:31:39Z",
      "updatedAt": "2025-05-12T18:10:24Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0ee67b517f008cbdfbccb54187c3a7510e1b089b"
      },
      "author": {
        "login": "gabritto"
      },
      "assignees": {
        "nodes": [
          {
            "login": "gabritto"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/harness/client.ts"
          },
          {
            "path": "src/harness/fourslashImpl.ts"
          },
          {
            "path": "src/harness/fourslashInterfaceImpl.ts"
          },
          {
            "path": "src/server/session.ts"
          },
          {
            "path": "src/services/services.ts"
          },
          {
            "path": "src/services/symbolDisplay.ts"
          },
          {
            "path": "src/services/types.ts"
          },
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityToplevelTruncation1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityToplevelTruncation2.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityTruncation1.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityTruncation2.baseline"
          },
          {
            "path": "tests/cases/fourslash/fourslash.ts"
          },
          {
            "path": "tests/cases/fourslash/quickInfoCanBeTruncated.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityToplevelTruncation1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityToplevelTruncation2.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityTruncation1.ts"
          },
          {
            "path": "tests/cases/fourslash/quickinfoVerbosityTruncation2.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6U2uWl",
      "title": "Fix unwanted constant comparisons potentially causing bugs",
      "url": "https://github.com/microsoft/TypeScript/pull/61655",
      "mergedAt": "2025-05-09T22:20:45Z",
      "updatedAt": "2025-05-09T22:54:13Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "7156300cee63147d8ec5c58c80b3fef2ab2aec77"
      },
      "author": {
        "login": "ulrichstark"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "IllusionMH"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "ulrichstark"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/resolutionCache.ts"
          },
          {
            "path": "src/harness/fourslashImpl.ts"
          },
          {
            "path": "tests/baselines/reference/jsdocParameterTagSnippetCompletion1.baseline"
          },
          {
            "path": "tests/baselines/reference/jsdocParameterTagSnippetCompletion2.baseline"
          },
          {
            "path": "tests/baselines/reference/quickInfoAlias.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosity3.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityImport.baseline"
          },
          {
            "path": "tests/baselines/reference/quickinfoVerbosityNamespace.baseline"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc5TyhxU",
      "title": "Preserve type parameter constraint in emitted mapped types while preserving their distributivity",
      "url": "https://github.com/microsoft/TypeScript/pull/54759",
      "mergedAt": "2025-05-12T17:54:34Z",
      "updatedAt": "2025-05-13T16:28:14Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "0fb5e3a8cff7f18a30cdcee2ead37c727674ccc5"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/computedTypesKeyofNoIndexSignatureType.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitMappedTypeDistributivityPreservesConstraints.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitMappedTypeDistributivityPreservesConstraints.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitMappedTypePreservesTypeParameterConstraint.js"
          },
          {
            "path": "tests/baselines/reference/declarationEmitMappedTypePreservesTypeParameterConstraint.symbols"
          },
          {
            "path": "tests/baselines/reference/declarationEmitMappedTypePreservesTypeParameterConstraint.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeGenericInstantiationPreservesHomomorphism.js"
          },
          {
            "path": "tests/baselines/reference/mappedTypeGenericInstantiationPreservesHomomorphism.types"
          },
          {
            "path": "tests/baselines/reference/recursiveConditionalCrash3.types"
          },
          {
            "path": "tests/cases/compiler/declarationEmitMappedTypePreservesTypeParameterConstraint.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6GPyYo",
      "title": "Stop reassigning `.valueDeclaration` to avoid replacing earlier declarations with late ones",
      "url": "https://github.com/microsoft/TypeScript/pull/60857",
      "mergedAt": "2025-05-15T16:51:34Z",
      "updatedAt": "2025-05-19T04:34:27Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b86ab7dbe0eb2f1c9a624486d72590d638495c97"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sandersn"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DingJun1028"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS1.js"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS1.symbols"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS1.types"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS2.js"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS2.symbols"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS2.types"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS3.js"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS3.symbols"
          },
          {
            "path": "tests/baselines/reference/lateBoundAssignmentCandidateJS3.types"
          },
          {
            "path": "tests/baselines/reference/lateBoundMethodNameAssigmentJS.js"
          },
          {
            "path": "tests/baselines/reference/lateBoundMethodNameAssigmentJS.symbols"
          },
          {
            "path": "tests/baselines/reference/lateBoundMethodNameAssigmentJS.types"
          },
          {
            "path": "tests/cases/compiler/lateBoundAssignmentCandidateJS1.ts"
          },
          {
            "path": "tests/cases/compiler/lateBoundAssignmentCandidateJS2.ts"
          },
          {
            "path": "tests/cases/compiler/lateBoundAssignmentCandidateJS3.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6WZSra",
      "title": "Fix getResolvePackageJsonImports utility",
      "url": "https://github.com/microsoft/TypeScript/pull/61707",
      "mergedAt": "2025-05-16T00:49:36Z",
      "updatedAt": "2025-05-16T00:49:36Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "81c951894e93bdc37c6916f18adcd80de76679bc"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "sheetalkamat"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/utilities.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Wwf1m",
      "title": "Handle lock file 3 version when caching the typings ensuring we can reuse already installed packages ",
      "url": "https://github.com/microsoft/TypeScript/pull/61730",
      "mergedAt": "2025-05-21T20:58:23Z",
      "updatedAt": "2025-05-21T20:58:25Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "b504a1eed45e35b5f54694a1e0a09f35d0a5663c"
      },
      "author": {
        "login": "sheetalkamat"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sheetalkamat"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/testRunner/unittests/tsserver/typingsInstaller.ts"
          },
          {
            "path": "src/typingsInstallerCore/typingsInstaller.ts"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/expired-cache-entry-lockFile3.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/typingsInstaller/non-expired-cache-entry-lockFile3.js"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Yfvte",
      "title": "Update pr_owners.txt",
      "url": "https://github.com/microsoft/TypeScript/pull/61798",
      "mergedAt": "2025-06-03T21:22:16Z",
      "updatedAt": "2025-06-03T21:22:19Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "44d46714c81e0cadf9067cc32b649c63d2a4f436"
      },
      "author": {
        "login": "jakebailey"
      },
      "assignees": {
        "nodes": [
          {
            "login": "jakebailey"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "RyanCavanaugh"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": ".github/pr_owners.txt"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6XHnxG",
      "title": "Initialize the map for dts to reference and source to reference when parsing project reference as its always needed",
      "url": "https://github.com/microsoft/TypeScript/pull/61746",
      "mergedAt": "2025-06-04T16:55:15Z",
      "updatedAt": "2025-06-04T16:55:16Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "3dd0a35032ca78d8b220177362398b03457fb2d8"
      },
      "author": {
        "login": "sheetalkamat"
      },
      "assignees": {
        "nodes": [
          {
            "login": "sheetalkamat"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/builderState.ts"
          },
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/moduleSpecifiers.ts"
          },
          {
            "path": "src/compiler/program.ts"
          },
          {
            "path": "src/compiler/resolutionCache.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/server/project.ts"
          },
          {
            "path": "src/services/utilities.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6ZFENf",
      "title": "LEGO: Pull request from lego/hb_5378966c-b857-470a-8675-daebef4a6da1_20250604192236101 to main",
      "url": "https://github.com/microsoft/TypeScript/pull/61815",
      "mergedAt": "2025-06-04T19:51:27Z",
      "updatedAt": "2025-06-04T19:51:29Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "2b88aebaaae3dc431a56667f7b0dbc42ae329ec6"
      },
      "author": {
        "login": "csigs"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/loc/lcl/chs/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/csy/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/deu/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/esn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/fra/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ita/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/jpn/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/kor/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/plk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/ptb/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/rus/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          },
          {
            "path": "src/loc/lcl/trk/diagnosticMessages/diagnosticMessages.generated.json.lcl"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Xjh1x",
      "title": "fix(61747): for (using of = is incorrectly parsed",
      "url": "https://github.com/microsoft/TypeScript/pull/61764",
      "mergedAt": "2025-06-05T23:37:41Z",
      "updatedAt": "2025-06-05T23:37:41Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "a591ca3fdcf056fbb70d4b4a964c8dd47bd412b4"
      },
      "author": {
        "login": "a-tarasyuk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "JLHwung"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "JLHwung"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "a-tarasyuk"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/parser.ts"
          },
          {
            "path": "tests/baselines/reference/usingDeclarationsInForOf.4.errors.txt"
          },
          {
            "path": "tests/baselines/reference/usingDeclarationsInForOf.4.js"
          },
          {
            "path": "tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsInForOf.4.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6X5-lB",
      "title": "fix(checker): report error when using bigint as enum key",
      "url": "https://github.com/microsoft/TypeScript/pull/61777",
      "mergedAt": "2025-06-05T23:37:47Z",
      "updatedAt": "2025-06-06T01:00:24Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ac03ba4f021fce5a78bcdde39952879d0a4f35eb"
      },
      "author": {
        "login": "magic-akari"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "magic-akari"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "magic-akari"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/enumWithBigint.errors.txt"
          },
          {
            "path": "tests/baselines/reference/enumWithBigint.js"
          },
          {
            "path": "tests/baselines/reference/enumWithBigint.symbols"
          },
          {
            "path": "tests/baselines/reference/enumWithBigint.types"
          },
          {
            "path": "tests/cases/compiler/enumWithBigint.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6ZDp6V",
      "title": "tsc --init update",
      "url": "https://github.com/microsoft/TypeScript/pull/61813",
      "mergedAt": "2025-06-06T19:03:28Z",
      "updatedAt": "2025-06-07T14:23:44Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "cd341998a98b71275d4b4d6f41c08d9d0eb75d93"
      },
      "author": {
        "login": "RyanCavanaugh"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RyanCavanaugh"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "RyanCavanaugh"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/executeCommandLine.ts"
          },
          {
            "path": "src/testRunner/unittests/config/initializeTSConfig.ts"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Default initialized TSConfig/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with --help/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with --watch/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with advanced options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with boolean value compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with enum value compiler options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with files options/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with incorrect compiler option value/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with incorrect compiler option/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with list compiler options with enum value/tsconfig.json"
          },
          {
            "path": "tests/baselines/reference/config/initTSConfig/Initialized TSConfig with list compiler options/tsconfig.json"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6FKC98",
      "title": "Add support for `import defer` proposal",
      "url": "https://github.com/microsoft/TypeScript/pull/60757",
      "mergedAt": "2025-06-06T19:11:21Z",
      "updatedAt": "2025-06-09T10:04:50Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "a69c6d0bb7a382538c8bbbecfb96431badb5c873"
      },
      "author": {
        "login": "nicolo-ribaudo"
      },
      "assignees": {
        "nodes": [
          {
            "login": "weswigham"
          },
          {
            "login": "andrewbranch"
          },
          {
            "login": "jakebailey"
          },
          {
            "login": "iisaduan"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "DanielRosenwasser"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "nicolo-ribaudo"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Jack-Works"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "nicolo-ribaudo"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "CHANGES_REQUESTED",
            "author": {
              "login": "rbuckton"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "nicolo-ribaudo"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "src/compiler/emitter.ts"
          },
          {
            "path": "src/compiler/factory/nodeFactory.ts"
          },
          {
            "path": "src/compiler/factory/utilities.ts"
          },
          {
            "path": "src/compiler/parser.ts"
          },
          {
            "path": "src/compiler/scanner.ts"
          },
          {
            "path": "src/compiler/transformers/declarations.ts"
          },
          {
            "path": "src/compiler/transformers/jsx.ts"
          },
          {
            "path": "src/compiler/transformers/module/esnextAnd2015.ts"
          },
          {
            "path": "src/compiler/transformers/ts.ts"
          },
          {
            "path": "src/compiler/types.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/compiler/utilitiesPublic.ts"
          },
          {
            "path": "src/compiler/visitorPublic.ts"
          },
          {
            "path": "src/services/codefixes/convertToTypeOnlyImport.ts"
          },
          {
            "path": "src/services/codefixes/importFixes.ts"
          },
          {
            "path": "src/services/codefixes/requireInTs.ts"
          },
          {
            "path": "src/services/codefixes/splitTypeOnlyImport.ts"
          },
          {
            "path": "src/services/organizeImports.ts"
          },
          {
            "path": "src/services/refactors/convertImport.ts"
          },
          {
            "path": "src/services/refactors/moveToFile.ts"
          },
          {
            "path": "src/services/utilities.ts"
          },
          {
            "path": "src/testRunner/unittests/transform.ts"
          },
          {
            "path": "tests/baselines/reference/JSDocParsing/DocComments.parsesCorrectly.importTag1.json"
          },
          {
            "path": "tests/baselines/reference/JSDocParsing/DocComments.parsesCorrectly.importTag2.json"
          },
          {
            "path": "tests/baselines/reference/JSDocParsing/DocComments.parsesCorrectly.importTag3.json"
          },
          {
            "path": "tests/baselines/reference/JSDocParsing/DocComments.parsesCorrectly.importTag4.json"
          },
          {
            "path": "tests/baselines/reference/api/typescript.d.ts"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=commonjs).js"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=commonjs).symbols"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=commonjs).types"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=es2015).js"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=es2015).symbols"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=es2015).types"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=es2020).errors.txt"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=es2020).js"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=es2020).symbols"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=es2020).types"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=esnext).js"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=esnext).symbols"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=esnext).types"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=preserve).js"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=preserve).symbols"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDefer(module=preserve).types"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDeferInvalidStandalone.errors.txt"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDeferInvalidStandalone.js"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDeferInvalidStandalone.symbols"
          },
          {
            "path": "tests/baselines/reference/dynamicImportDeferInvalidStandalone.types"
          },
          {
            "path": "tests/baselines/reference/exportDeferInvalid.errors.txt"
          },
          {
            "path": "tests/baselines/reference/exportDeferInvalid.js"
          },
          {
            "path": "tests/baselines/reference/exportDeferInvalid.symbols"
          },
          {
            "path": "tests/baselines/reference/exportDeferInvalid.types"
          },
          {
            "path": "tests/baselines/reference/importDefaultBindingDefer.js"
          },
          {
            "path": "tests/baselines/reference/importDefaultBindingDefer.symbols"
          },
          {
            "path": "tests/baselines/reference/importDefaultBindingDefer.types"
          },
          {
            "path": "tests/baselines/reference/importDeferComments.js"
          },
          {
            "path": "tests/baselines/reference/importDeferComments.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferComments.types"
          },
          {
            "path": "tests/baselines/reference/importDeferDeclaration.js"
          },
          {
            "path": "tests/baselines/reference/importDeferDeclaration.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferDeclaration.types"
          },
          {
            "path": "tests/baselines/reference/importDeferInvalidDefault.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferInvalidDefault.js"
          },
          {
            "path": "tests/baselines/reference/importDeferInvalidDefault.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferInvalidDefault.types"
          },
          {
            "path": "tests/baselines/reference/importDeferInvalidNamed.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferInvalidNamed.js"
          },
          {
            "path": "tests/baselines/reference/importDeferInvalidNamed.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferInvalidNamed.types"
          },
          {
            "path": "tests/baselines/reference/importDeferJsdoc.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferJsdoc.js"
          },
          {
            "path": "tests/baselines/reference/importDeferJsdoc.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferJsdoc.types"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=commonjs).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=commonjs).js"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=commonjs).symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=commonjs).types"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=es2015).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=es2015).js"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=es2015).symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=es2015).types"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=es2020).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=es2020).js"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=es2020).symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=es2020).types"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=esnext).js"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=esnext).symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=esnext).types"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=nodenext).errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=nodenext).js"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=nodenext).symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=nodenext).types"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=preserve).js"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=preserve).symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferNamespace(module=preserve).types"
          },
          {
            "path": "tests/baselines/reference/importDeferTypeConflict1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferTypeConflict1.js"
          },
          {
            "path": "tests/baselines/reference/importDeferTypeConflict1.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferTypeConflict1.types"
          },
          {
            "path": "tests/baselines/reference/importDeferTypeConflict2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importDeferTypeConflict2.js"
          },
          {
            "path": "tests/baselines/reference/importDeferTypeConflict2.symbols"
          },
          {
            "path": "tests/baselines/reference/importDeferTypeConflict2.types"
          },
          {
            "path": "tests/baselines/reference/importMetaPropertyInvalidInCall.errors.txt"
          },
          {
            "path": "tests/baselines/reference/importMetaPropertyInvalidInCall.js"
          },
          {
            "path": "tests/baselines/reference/importMetaPropertyInvalidInCall.symbols"
          },
          {
            "path": "tests/baselines/reference/importMetaPropertyInvalidInCall.types"
          },
          {
            "path": "tests/baselines/reference/skipJSDocParsing/link-ParseForTypeErrors-file.js.diff"
          },
          {
            "path": "tests/baselines/reference/skipJSDocParsing/link-ParseForTypeErrors-file.ts.diff"
          },
          {
            "path": "tests/baselines/reference/skipJSDocParsing/link-ParseForTypeInfo-file.js.diff"
          },
          {
            "path": "tests/baselines/reference/skipJSDocParsing/link-ParseForTypeInfo-file.ts.diff"
          },
          {
            "path": "tests/baselines/reference/skipJSDocParsing/link-ParseNone-file.js.diff"
          },
          {
            "path": "tests/baselines/reference/skipJSDocParsing/link-ParseNone-file.ts.diff"
          },
          {
            "path": "tests/baselines/reference/typeofImportDefer.errors.txt"
          },
          {
            "path": "tests/baselines/reference/typeofImportDefer.js"
          },
          {
            "path": "tests/baselines/reference/typeofImportDefer.symbols"
          },
          {
            "path": "tests/baselines/reference/typeofImportDefer.types"
          },
          {
            "path": "tests/cases/conformance/importDefer/dynamicImportDefer.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/dynamicImportDeferInvalidStandalone.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/exportDeferInvalid.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importDefaultBindingDefer.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importDeferComments.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importDeferDeclaration.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importDeferInvalidDefault.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importDeferInvalidNamed.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importDeferNamespace.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importDeferTypeConflict1.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importDeferTypeConflict2.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/importMetaPropertyInvalidInCall.ts"
          },
          {
            "path": "tests/cases/conformance/importDefer/typeofImportDefer.ts"
          },
          {
            "path": "tests/cases/conformance/jsdoc/importDeferJsdoc.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Fgc92",
      "title": "feat: add Error.isError() to ESNext lib",
      "url": "https://github.com/microsoft/TypeScript/pull/60788",
      "mergedAt": "2025-06-06T19:16:36Z",
      "updatedAt": "2025-06-06T19:16:36Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "ffd98c17739b07d943571005dc0eadc3b14e6c9c"
      },
      "author": {
        "login": "dirkluijk"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Renegade334"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/lib/esnext.d.ts"
          },
          {
            "path": "src/lib/esnext.error.d.ts"
          },
          {
            "path": "src/lib/libs.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse --lib option with extra comma.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse --lib option with trailing white-space.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse invalid option of library flags.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs array to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs array to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert trailing-whitespace string option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert trailing-whitespace string option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/libReplacement(libreplacement=true).trace.json"
          },
          {
            "path": "tests/baselines/reference/modulePreserve2.trace.json"
          },
          {
            "path": "tests/baselines/reference/modulePreserve3.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNext.trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNextEsm.trace.json"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/does-not-add-color-when-NO_COLOR-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped-when-host-can't-provide-terminal-width.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true-useFsEventsOnParentDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-event-ends-with-tilde.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-occurs-when-file-is-still-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-dynamic-polling-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-watchDirectory-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-watchFile-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders-with-synchronousWatchDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-renaming-a-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-with-outDir-and-declaration-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-fallbackPolling-option.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-watchDirectory-option.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/file-rename-on-wsl2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/does-not-expose-paths.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/recursive-directory-does-not-watch-files-starting-with-dot-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-dynamic-polling-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-non-recursive-watchDirectory-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-watchFile-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/watching-npm-install-in-codespaces-where-workspaces-folder-is-hosted-at-root.js"
          },
          {
            "path": "tests/baselines/reference/typesVersions.ambientModules.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.emptyTypes.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.justIndex.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.ambient.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToSelf.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToUnmapped.trace.json"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Qr-ue",
      "title": "Cache mapper instantiations",
      "url": "https://github.com/microsoft/TypeScript/pull/61505",
      "mergedAt": "2025-06-06T19:21:17Z",
      "updatedAt": "2025-06-06T19:21:18Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "51dcd9001d9dceb98d248f574f39f57497a44968"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/callsOnComplexSignatures.types"
          },
          {
            "path": "tests/baselines/reference/checkJsxChildrenCanBeTupleType.types"
          },
          {
            "path": "tests/baselines/reference/checkJsxChildrenProperty16.types"
          },
          {
            "path": "tests/baselines/reference/checkJsxUnionSFXContextualTypeInferredCorrectly.types"
          },
          {
            "path": "tests/baselines/reference/circularBaseConstraint.types"
          },
          {
            "path": "tests/baselines/reference/circularlySimplifyingConditionalTypesNoCrash.types"
          },
          {
            "path": "tests/baselines/reference/conditionalTypeDiscriminatingLargeUnionRegularTypeFetchingSpeedReasonable.types"
          },
          {
            "path": "tests/baselines/reference/conditionalTypeDoesntSpinForever.types"
          },
          {
            "path": "tests/baselines/reference/conditionalTypeVarianceBigArrayConstraintsPerformance.types"
          },
          {
            "path": "tests/baselines/reference/conditionalTypes1.types"
          },
          {
            "path": "tests/baselines/reference/contextualParameterAndSelfReferentialConstraint1.symbols"
          },
          {
            "path": "tests/baselines/reference/contextualParameterAndSelfReferentialConstraint1.types"
          },
          {
            "path": "tests/baselines/reference/contextuallyTypedJsxChildren.types"
          },
          {
            "path": "tests/baselines/reference/controlFlowOptionalChain3.types"
          },
          {
            "path": "tests/baselines/reference/declarationEmitHigherOrderRetainedGenerics.types"
          },
          {
            "path": "tests/baselines/reference/declarationsWithRecursiveInternalTypesProduceUniqueTypeParams.types"
          },
          {
            "path": "tests/baselines/reference/deeplyNestedMappedTypes.types"
          },
          {
            "path": "tests/baselines/reference/dependentDestructuredVariables.types"
          },
          {
            "path": "tests/baselines/reference/divideAndConquerIntersections.types"
          },
          {
            "path": "tests/baselines/reference/errorInfoForRelatedIndexTypesNoConstraintElaboration.types"
          },
          {
            "path": "tests/baselines/reference/excessiveStackDepthFlatArray.types"
          },
          {
            "path": "tests/baselines/reference/flatArrayNoExcessiveStackDepth.types"
          },
          {
            "path": "tests/baselines/reference/ignoredJsxAttributes.types"
          },
          {
            "path": "tests/baselines/reference/intraExpressionInferencesJsx.types"
          },
          {
            "path": "tests/baselines/reference/isomorphicMappedTypeInference.types"
          },
          {
            "path": "tests/baselines/reference/jsDeclarationsReactComponents.types"
          },
          {
            "path": "tests/baselines/reference/jsxCallElaborationCheckNoCrash1.types"
          },
          {
            "path": "tests/baselines/reference/jsxChildrenIndividualErrorElaborations.types"
          },
          {
            "path": "tests/baselines/reference/jsxChildrenWrongType.types"
          },
          {
            "path": "tests/baselines/reference/jsxComplexSignatureHasApplicabilityError.types"
          },
          {
            "path": "tests/baselines/reference/jsxDeclarationsWithEsModuleInteropNoCrash.types"
          },
          {
            "path": "tests/baselines/reference/jsxElementType.types"
          },
          {
            "path": "tests/baselines/reference/jsxElementTypeLiteral.types"
          },
          {
            "path": "tests/baselines/reference/jsxElementTypeLiteralWithGeneric.types"
          },
          {
            "path": "tests/baselines/reference/jsxEmptyExpressionNotCountedAsChild(jsx=react).types"
          },
          {
            "path": "tests/baselines/reference/jsxEmptyExpressionNotCountedAsChild(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxEmptyExpressionNotCountedAsChild(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxExcessPropsAndAssignability.types"
          },
          {
            "path": "tests/baselines/reference/jsxGenericComponentWithSpreadingResultOfGenericFunction.types"
          },
          {
            "path": "tests/baselines/reference/jsxInferenceProducesLiteralAsExpected.types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformChildren(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformChildren(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImport(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImport(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImportPragma(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformCustomImportPragma(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformKeyProp(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformKeyProp(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformKeyPropCustomImport(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformKeyPropCustomImport(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformKeyPropCustomImportPragma(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformKeyPropCustomImportPragma(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformNestedSelfClosingChild(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformNestedSelfClosingChild(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformSubstitutesNames(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformSubstitutesNames(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformSubstitutesNamesFragment(jsx=react-jsx).types"
          },
          {
            "path": "tests/baselines/reference/jsxJsxsCjsTransformSubstitutesNamesFragment(jsx=react-jsxdev).types"
          },
          {
            "path": "tests/baselines/reference/jsxPartialSpread.types"
          },
          {
            "path": "tests/baselines/reference/longObjectInstantiationChain1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/longObjectInstantiationChain1.symbols"
          },
          {
            "path": "tests/baselines/reference/longObjectInstantiationChain1.types"
          },
          {
            "path": "tests/baselines/reference/longObjectInstantiationChain2.errors.txt"
          },
          {
            "path": "tests/baselines/reference/longObjectInstantiationChain2.symbols"
          },
          {
            "path": "tests/baselines/reference/longObjectInstantiationChain2.types"
          },
          {
            "path": "tests/baselines/reference/longObjectInstantiationChain3.errors.txt"
          },
          {
            "path": "tests/baselines/reference/longObjectInstantiationChain3.symbols"
          },
          {
            "path": "tests/baselines/reference/longObjectInstantiationChain3.types"
          },
          {
            "path": "tests/baselines/reference/mappedTypeRecursiveInference.types"
          },
          {
            "path": "tests/baselines/reference/multiline.types"
          },
          {
            "path": "tests/baselines/reference/promisePermutations.types"
          },
          {
            "path": "tests/baselines/reference/propTypeValidatorInference.types"
          },
          {
            "path": "tests/baselines/reference/reactHOCSpreadprops.types"
          },
          {
            "path": "tests/baselines/reference/reactReadonlyHOCAssignabilityReal.types"
          },
          {
            "path": "tests/baselines/reference/reactReduxLikeDeferredInferenceAllowsAssignment.types"
          },
          {
            "path": "tests/baselines/reference/returnTypePredicateIsInstantiateInContextOfTarget.types"
          },
          {
            "path": "tests/baselines/reference/styledComponentsInstantiaionLimitNotReached.types"
          },
          {
            "path": "tests/baselines/reference/tsxInvokeComponentType.types"
          },
          {
            "path": "tests/baselines/reference/tsxNotUsingApparentTypeOfSFC.types"
          },
          {
            "path": "tests/baselines/reference/tsxResolveExternalModuleExportsTypes.types"
          },
          {
            "path": "tests/baselines/reference/tsxStatelessComponentDefaultProps.types"
          },
          {
            "path": "tests/baselines/reference/typeAliasInstantiationNoLeak1.symbols"
          },
          {
            "path": "tests/baselines/reference/typeAliasInstantiationNoLeak1.types"
          },
          {
            "path": "tests/baselines/reference/typeInferenceWithExcessPropertiesJsx.types"
          },
          {
            "path": "tests/cases/compiler/contextualParameterAndSelfReferentialConstraint1.ts"
          },
          {
            "path": "tests/cases/compiler/longObjectInstantiationChain1.ts"
          },
          {
            "path": "tests/cases/compiler/longObjectInstantiationChain2.ts"
          },
          {
            "path": "tests/cases/compiler/longObjectInstantiationChain3.ts"
          },
          {
            "path": "tests/cases/compiler/typeAliasInstantiationNoLeak1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Uxo5A",
      "title": "Add lib.esnext.sharedmemory",
      "url": "https://github.com/microsoft/TypeScript/pull/61646",
      "mergedAt": "2025-06-06T20:33:13Z",
      "updatedAt": "2025-06-06T21:02:42Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "652ed7fea0159dc996dc3d7d2ed47483bbc8ef82"
      },
      "author": {
        "login": "Renegade334"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/commandLineParser.ts"
          },
          {
            "path": "src/compiler/utilities.ts"
          },
          {
            "path": "src/lib/esnext.d.ts"
          },
          {
            "path": "src/lib/esnext.sharedmemory.d.ts"
          },
          {
            "path": "src/lib/libs.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=bundler).trace.json"
          },
          {
            "path": "tests/baselines/reference/bundlerDirectoryModule(module=nodenext,moduleresolution=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse --lib option with extra comma.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse --lib option with trailing white-space.js"
          },
          {
            "path": "tests/baselines/reference/config/commandLineParsing/parseCommandLine/Parse invalid option of library flags.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs array to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs array to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert empty string option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert incorrect option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert trailing-whitespace string option of libs to compiler-options with json api.js"
          },
          {
            "path": "tests/baselines/reference/config/convertCompilerOptionsFromJson/Convert trailing-whitespace string option of libs to compiler-options with jsonSourceFile api.js"
          },
          {
            "path": "tests/baselines/reference/esnextSharedMemory.js"
          },
          {
            "path": "tests/baselines/reference/esnextSharedMemory.symbols"
          },
          {
            "path": "tests/baselines/reference/esnextSharedMemory.types"
          },
          {
            "path": "tests/baselines/reference/libReplacement(libreplacement=true).trace.json"
          },
          {
            "path": "tests/baselines/reference/modulePreserve2.trace.json"
          },
          {
            "path": "tests/baselines/reference/modulePreserve3.trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesExportsBlocksTypesVersions(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackageImports(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/nodeModulesPackagePatternExportsTrailers(module=nodenext).trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNext.trace.json"
          },
          {
            "path": "tests/baselines/reference/reactJsxReactResolvedNodeNextEsm.trace.json"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/does-not-add-color-when-NO_COLOR-is-set.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help-all.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/help.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped-when-host-can't-provide-terminal-width.js"
          },
          {
            "path": "tests/baselines/reference/tsc/commandLine/show-help-with-ExitStatus.DiagnosticsPresent_OutputsSkipped.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/symlinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true-useFsEventsOnParentDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/fsWatchWithTimestamp-true.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-event-ends-with-tilde.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode-when-rename-occurs-when-file-is-still-on-the-disk.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/fsWatch/when-using-file-watching-thats-on-inode.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-dynamic-polling-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-non-recursive-watchDirectory-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/uses-watchFile-when-renaming-file-in-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders-with-synchronousWatchDirectory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/when-there-are-symlinks-to-folders-in-recursive-folders.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-renaming-a-file.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory-with-outDir-and-declaration-enabled.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchDirectories/with-non-synchronous-watch-directory.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching-extendedDiagnostics.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-excludeDirectories-option-with-recursive-directory-watching.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-fallbackPolling-option.js"
          },
          {
            "path": "tests/baselines/reference/tscWatch/watchEnvironment/watchOptions/with-watchDirectory-option.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/projectErrors/file-rename-on-wsl2.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-fails-in-global-typings-location.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-failing.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file-with-currentDirectory-at-root.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/resolutionCache/when-resolution-is-succeeds-in-global-typings-location-with-relative-import-from-the-cache-file.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/monorepo-style-sibling-packages-symlinked-package1-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-Linux.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs-canUseWatchEvents.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/symLinks/packages-outside-project-folder-built-MacOs.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/telemetry/does-not-expose-paths.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/recursive-directory-does-not-watch-files-starting-with-dot-in-node_modules.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-dynamic-polling-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-non-recursive-watchDirectory-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/uses-watchFile-when-file-is-added-to-subfolder.js"
          },
          {
            "path": "tests/baselines/reference/tsserver/watchEnvironment/watching-npm-install-in-codespaces-where-workspaces-folder-is-hosted-at-root.js"
          },
          {
            "path": "tests/baselines/reference/typesVersions.ambientModules.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.emptyTypes.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.justIndex.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersions.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.ambient.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFile.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToSelf.trace.json"
          },
          {
            "path": "tests/baselines/reference/typesVersionsDeclarationEmit.multiFileBackReferenceToUnmapped.trace.json"
          },
          {
            "path": "tests/cases/conformance/esnext/esnextSharedMemory.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6YGV9l",
      "title": "explicitly disallow `using` in ambient contexts",
      "url": "https://github.com/microsoft/TypeScript/pull/61781",
      "mergedAt": "2025-06-06T20:44:02Z",
      "updatedAt": "2025-06-06T21:02:35Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "1e2494566eb6d352844e00b34b15d67c025d307d"
      },
      "author": {
        "login": "Renegade334"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "src/compiler/diagnosticMessages.json"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.16.errors.txt"
          },
          {
            "path": "tests/baselines/reference/awaitUsingDeclarations.16.js"
          },
          {
            "path": "tests/baselines/reference/usingDeclarations.16.errors.txt"
          },
          {
            "path": "tests/baselines/reference/usingDeclarations.16.js"
          },
          {
            "path": "tests/cases/conformance/statements/VariableStatements/usingDeclarations/awaitUsingDeclarations.16.ts"
          },
          {
            "path": "tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarations.16.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6Zb2ML",
      "title": "Issue \"'{0}' declarations can only be declared inside a block.\" for block-scoped variables in presence of parse errors",
      "url": "https://github.com/microsoft/TypeScript/pull/61824",
      "mergedAt": "2025-06-06T21:00:25Z",
      "updatedAt": "2025-06-06T21:00:26Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "fa2a0fc5a2f34d5c76dc4b105a93dbe3c4750d5f"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "Andarist"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/disallowedBlockScopedInPresenceOfParseErrors1.errors.txt"
          },
          {
            "path": "tests/baselines/reference/disallowedBlockScopedInPresenceOfParseErrors1.symbols"
          },
          {
            "path": "tests/baselines/reference/disallowedBlockScopedInPresenceOfParseErrors1.types"
          },
          {
            "path": "tests/cases/compiler/disallowedBlockScopedInPresenceOfParseErrors1.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6ZEIbu",
      "title": "Fix helpers emit for .cjs files in ESM module mode",
      "url": "https://github.com/microsoft/TypeScript/pull/61814",
      "mergedAt": "2025-06-06T22:08:04Z",
      "updatedAt": "2025-06-06T22:08:04Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "7715955f89d4e5c7a26b18f4e15a19e7ae330e6d"
      },
      "author": {
        "login": "andrewbranch"
      },
      "assignees": {
        "nodes": [
          {
            "login": "andrewbranch"
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "COMMENTED",
            "author": {
              "login": "andrewbranch"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "weswigham"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/factory/utilities.ts"
          },
          {
            "path": "tests/baselines/reference/ctsFileInEsnextHelpers.errors.txt"
          },
          {
            "path": "tests/baselines/reference/ctsFileInEsnextHelpers.js"
          },
          {
            "path": "tests/cases/compiler/ctsFileInEsnextHelpers.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6U6S0d",
      "title": "Avoid resolving source prop type when the target is `unknown`/`any`",
      "url": "https://github.com/microsoft/TypeScript/pull/61660",
      "mergedAt": "2025-06-06T22:17:50Z",
      "updatedAt": "2025-06-06T22:17:50Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "355b9e0984671f7eea9040f0ac8b68c16361729a"
      },
      "author": {
        "login": "Andarist"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/checker.ts"
          },
          {
            "path": "tests/baselines/reference/noCircularitySelfReferentialGetter1.symbols"
          },
          {
            "path": "tests/baselines/reference/noCircularitySelfReferentialGetter1.types"
          },
          {
            "path": "tests/baselines/reference/noCircularitySelfReferentialGetter2.symbols"
          },
          {
            "path": "tests/baselines/reference/noCircularitySelfReferentialGetter2.types"
          },
          {
            "path": "tests/baselines/reference/noCircularitySelfReferentialGetter3.symbols"
          },
          {
            "path": "tests/baselines/reference/noCircularitySelfReferentialGetter3.types"
          },
          {
            "path": "tests/baselines/reference/noCircularitySelfReferentialGetter4.symbols"
          },
          {
            "path": "tests/baselines/reference/noCircularitySelfReferentialGetter4.types"
          },
          {
            "path": "tests/baselines/reference/propTypeValidatorInference.types"
          },
          {
            "path": "tests/baselines/reference/tsxReactPropsInferenceSucceedsOnIntersections.types"
          },
          {
            "path": "tests/cases/compiler/noCircularitySelfReferentialGetter1.ts"
          },
          {
            "path": "tests/cases/compiler/noCircularitySelfReferentialGetter2.ts"
          },
          {
            "path": "tests/cases/compiler/noCircularitySelfReferentialGetter3.ts"
          },
          {
            "path": "tests/cases/compiler/noCircularitySelfReferentialGetter4.ts"
          }
        ]
      }
    },
    {
      "id": "PR_kwDOAT9aAc6ZYE_E",
      "title": "optimization, reduce memory usage",
      "url": "https://github.com/microsoft/TypeScript/pull/61822",
      "mergedAt": "2025-06-09T18:48:31Z",
      "updatedAt": "2025-06-09T18:48:31Z",
      "baseRefName": "main",
      "mergeCommit": {
        "oid": "97cfa26f2ac4991183347c6f07959f4571dd5eb0"
      },
      "author": {
        "login": "VincentBailly"
      },
      "assignees": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "state": "COMMENTED",
            "author": {
              "login": "copilot-pull-request-reviewer"
            }
          },
          {
            "state": "APPROVED",
            "author": {
              "login": "jakebailey"
            }
          }
        ]
      },
      "files": {
        "nodes": [
          {
            "path": "src/compiler/program.ts"
          }
        ]
      }
    }
  ]
}